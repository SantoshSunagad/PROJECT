

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Mar 02 10:35:49 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    70                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    72   000000                     
    73                           ; Version 2.20
    74                           ; Generated 12/02/2020 GMT
    75                           ; 
    76                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F4580 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107   000000                     
   108                           	psect	idataCOMRAM
   109   002C86                     __pidataCOMRAM:
   110                           	callstack 0
   111                           
   112                           ;initializer for _sec
   113   002C86  003C               	dw	60
   114                           
   115                           	psect	idataBANK0
   116   002B34                     __pidataBANK0:
   117                           	callstack 0
   118                           
   119                           ;initializer for _once@common$F525
   120   002B34  0001               	dw	1
   121                           
   122                           ;initializer for _chance@common$F522
   123   002B36  0003               	dw	3
   124                           
   125                           ;initializer for _once@common$F480
   126   002B38  0001               	dw	1
   127                           
   128                           ;initializer for _chance@common$F477
   129   002B3A  0003               	dw	3
   130                           
   131                           ;initializer for _once@common$F447
   132   002B3C  0001               	dw	1
   133                           
   134                           ;initializer for _chance@common$F444
   135   002B3E  0003               	dw	3
   136                           
   137                           ;initializer for _once@common$F327
   138   002B40  0001               	dw	1
   139                           
   140                           ;initializer for _chance@common$F324
   141   002B42  0003               	dw	3
   142                           
   143                           ;initializer for _once@common$F140
   144   002B44  0001               	dw	1
   145                           
   146                           ;initializer for _chance@common$F137
   147   002B46  0003               	dw	3
   148                           
   149                           ;initializer for _once
   150   002B48  0001               	dw	1
   151                           
   152                           ;initializer for _chance
   153   002B4A  0003               	dw	3
   154                           
   155                           ;initializer for _write_eeprom
   156   002B4C  01                 	db	1
   157                           
   158                           ;initializer for read_switches@once
   159   002B4D  01                 	db	1
   160                           
   161                           ;initializer for _flag
   162   002B4E  01                 	db	1
   163                           
   164                           ;initializer for _change_Time
   165   002B4F  30                 	db	48
   166   002B50  30                 	db	48
   167   002B51  3A                 	db	58
   168   002B52  30                 	db	48
   169   002B53  30                 	db	48
   170   002B54  3A                 	db	58
   171   002B55  30                 	db	48
   172   002B56  30                 	db	48
   173   002B57  00                 	db	0
   174                           
   175                           	psect	idataBANK1
   176   00261C                     __pidataBANK1:
   177                           	callstack 0
   178                           
   179                           ;initializer for _diplay
   180   00261C  56                 	db	86
   181   00261D  49                 	db	73
   182   00261E  45                 	db	69
   183   00261F  57                 	db	87
   184   002620  20                 	db	32
   185   002621  4C                 	db	76
   186   002622  4F                 	db	79
   187   002623  47                 	db	71
   188   002624  20                 	db	32
   189   002625  20                 	db	32
   190   002626  20                 	db	32
   191   002627  20                 	db	32
   192   002628  20                 	db	32
   193   002629  20                 	db	32
   194   00262A  00                 	db	0
   195   00262B  00                 	db	0
   196   00262C  00                 	db	0
   197   00262D  00                 	db	0
   198   00262E  00                 	db	0
   199   00262F  00                 	db	0
   200   002630  44                 	db	68
   201   002631  4F                 	db	79
   202   002632  57                 	db	87
   203   002633  4E                 	db	78
   204   002634  4C                 	db	76
   205   002635  4F                 	db	79
   206   002636  41                 	db	65
   207   002637  44                 	db	68
   208   002638  20                 	db	32
   209   002639  4C                 	db	76
   210   00263A  4F                 	db	79
   211   00263B  47                 	db	71
   212   00263C  20                 	db	32
   213   00263D  20                 	db	32
   214   00263E  00                 	db	0
   215   00263F  00                 	db	0
   216   002640  00                 	db	0
   217   002641  00                 	db	0
   218   002642  00                 	db	0
   219   002643  00                 	db	0
   220   002644  43                 	db	67
   221   002645  4C                 	db	76
   222   002646  45                 	db	69
   223   002647  41                 	db	65
   224   002648  52                 	db	82
   225   002649  20                 	db	32
   226   00264A  4C                 	db	76
   227   00264B  4F                 	db	79
   228   00264C  47                 	db	71
   229   00264D  20                 	db	32
   230   00264E  20                 	db	32
   231   00264F  20                 	db	32
   232   002650  20                 	db	32
   233   002651  20                 	db	32
   234   002652  00                 	db	0
   235   002653  00                 	db	0
   236   002654  00                 	db	0
   237   002655  00                 	db	0
   238   002656  00                 	db	0
   239   002657  00                 	db	0
   240   002658  53                 	db	83
   241   002659  45                 	db	69
   242   00265A  54                 	db	84
   243   00265B  20                 	db	32
   244   00265C  54                 	db	84
   245   00265D  49                 	db	73
   246   00265E  4D                 	db	77
   247   00265F  45                 	db	69
   248   002660  20                 	db	32
   249   002661  20                 	db	32
   250   002662  20                 	db	32
   251   002663  20                 	db	32
   252   002664  20                 	db	32
   253   002665  20                 	db	32
   254   002666  00                 	db	0
   255   002667  00                 	db	0
   256   002668  00                 	db	0
   257   002669  00                 	db	0
   258   00266A  00                 	db	0
   259   00266B  00                 	db	0
   260   00266C  43                 	db	67
   261   00266D  48                 	db	72
   262   00266E  41                 	db	65
   263   00266F  4E                 	db	78
   264   002670  47                 	db	71
   265   002671  45                 	db	69
   266   002672  20                 	db	32
   267   002673  50                 	db	80
   268   002674  53                 	db	83
   269   002675  57                 	db	87
   270   002676  00                 	db	0
   271   002677  00                 	db	0
   272   002678  00                 	db	0
   273   002679  00                 	db	0
   274   00267A  00                 	db	0
   275   00267B  00                 	db	0
   276   00267C  00                 	db	0
   277   00267D  00                 	db	0
   278   00267E  00                 	db	0
   279   00267F  00                 	db	0
   280                           
   281                           ;initializer for _gear
   282   002680  4F                 	db	79
   283   002681  4E                 	db	78
   284   002682  00                 	db	0
   285   002683  47                 	db	71
   286   002684  52                 	db	82
   287   002685  00                 	db	0
   288   002686  47                 	db	71
   289   002687  4E                 	db	78
   290   002688  00                 	db	0
   291   002689  47                 	db	71
   292   00268A  31                 	db	49
   293   00268B  00                 	db	0
   294   00268C  47                 	db	71
   295   00268D  32                 	db	50
   296   00268E  00                 	db	0
   297   00268F  47                 	db	71
   298   002690  33                 	db	51
   299   002691  00                 	db	0
   300   002692  47                 	db	71
   301   002693  34                 	db	52
   302   002694  00                 	db	0
   303   002695  47                 	db	71
   304   002696  35                 	db	53
   305   002697  00                 	db	0
   306   002698  43                 	db	67
   307   002699  5F                 	db	95
   308   00269A  00                 	db	0
   309   00269B  43                 	db	67
   310   00269C  4C                 	db	76
   311   00269D  00                 	db	0
   312   00269E  53                 	db	83
   313   00269F  54                 	db	84
   314   0026A0  00                 	db	0
   315   0026A1  43                 	db	67
   316   0026A2  50                 	db	80
   317   0026A3  00                 	db	0
   318   000000                     _TMR0	set	4054
   319   000000                     _RCREG	set	4014
   320   000000                     _TXREG	set	4013
   321   000000                     _SPBRG	set	4015
   322   000000                     _SSPADD	set	4040
   323   000000                     _SSPCON1	set	4038
   324   000000                     _ADRESL	set	4035
   325   000000                     _ADRESH	set	4036
   326   000000                     _ACKSTAT	set	32302
   327   000000                     _CKE	set	32318
   328   000000                     _T08BIT	set	32430
   329   000000                     _GODONE	set	32273
   330   000000                     _RBPU	set	32655
   331   000000                     _ADCON0	set	4034
   332   000000                     _PORTBbits	set	3969
   333   000000                     _TRISD	set	3989
   334   000000                     _RCIF	set	31989
   335   000000                     _TXIF	set	31988
   336   000000                     _CREN	set	32092
   337   000000                     _TRISC6	set	31910
   338   000000                     _TRISC7	set	31911
   339   000000                     _ACKEN	set	32300
   340   000000                     _ACKDT	set	32301
   341   000000                     _RCEN	set	32299
   342   000000                     _RSEN	set	32297
   343   000000                     _PEN	set	32298
   344   000000                     _SEN	set	32296
   345   000000                     _SMP	set	32319
   346   000000                     _TRISC4	set	31908
   347   000000                     _TRISC3	set	31907
   348   000000                     _TMR0IE	set	32661
   349   000000                     _PSA	set	32427
   350   000000                     _TMR0ON	set	32431
   351   000000                     _T0CS	set	32429
   352   000000                     _TMR0IF	set	32658
   353   000000                     _GO	set	32273
   354   000000                     _ADON	set	32272
   355   000000                     _VCFG0	set	32268
   356   000000                     _VCFG1	set	32269
   357   000000                     _ADCS2	set	32258
   358   000000                     _ADCS1	set	32257
   359   000000                     _ADCS0	set	32256
   360   000000                     _ACQT0	set	32259
   361   000000                     _ACQT1	set	32260
   362   000000                     _ACQT2	set	32261
   363   000000                     _PEIE	set	32662
   364   000000                     _RD7	set	31775
   365   000000                     _RC0	set	31760
   366   000000                     _RC2	set	31762
   367   000000                     _PORTB	set	3969
   368   000000                     _RC1	set	31761
   369   000000                     _TRISB	set	3987
   370   000000                     _TRISC	set	3988
   371   000000                     _PORTD	set	3971
   372   000000                     _TRISD7	set	31919
   373   000000                     _ADCON1	set	4033
   374   000000                     _RCIE	set	31981
   375   000000                     _SSPIF	set	31987
   376   000000                     _ADFM	set	32263
   377   000000                     _GIE	set	32663
   378   000000                     _SSPBUF	set	4041
   379   000000                     _BCLIF	set	32011
   380   000000                     _SPEN	set	32095
   381   000000                     _BRGH	set	32098
   382                           
   383                           	psect	mediumconst
   384   002E94                     __pmediumconst:
   385                           	callstack 0
   386   002E94  00                 	db	0
   387   002E95                     STR_18:
   388   002E95  44                 	db	68	;'D'
   389   002E96  4F                 	db	79	;'O'
   390   002E97  57                 	db	87	;'W'
   391   002E98  4E                 	db	78	;'N'
   392   002E99  4C                 	db	76	;'L'
   393   002E9A  4F                 	db	79	;'O'
   394   002E9B  41                 	db	65	;'A'
   395   002E9C  44                 	db	68	;'D'
   396   002E9D  20                 	db	32
   397   002E9E  4C                 	db	76	;'L'
   398   002E9F  4F                 	db	79	;'O'
   399   002EA0  47                 	db	71	;'G'
   400   002EA1  20                 	db	32
   401   002EA2  49                 	db	73	;'I'
   402   002EA3  53                 	db	83	;'S'
   403   002EA4  20                 	db	32
   404   002EA5  45                 	db	69	;'E'
   405   002EA6  4D                 	db	77	;'M'
   406   002EA7  50                 	db	80	;'P'
   407   002EA8  54                 	db	84	;'T'
   408   002EA9  59                 	db	89	;'Y'
   409   002EAA  0A                 	db	10
   410   002EAB  0D                 	db	13
   411   002EAC  00                 	db	0
   412   002EAD                     STR_17:
   413   002EAD  44                 	db	68	;'D'
   414   002EAE  4F                 	db	79	;'O'
   415   002EAF  57                 	db	87	;'W'
   416   002EB0  4E                 	db	78	;'N'
   417   002EB1  4C                 	db	76	;'L'
   418   002EB2  4F                 	db	79	;'O'
   419   002EB3  41                 	db	65	;'A'
   420   002EB4  44                 	db	68	;'D'
   421   002EB5  20                 	db	32
   422   002EB6  43                 	db	67	;'C'
   423   002EB7  4F                 	db	79	;'O'
   424   002EB8  4D                 	db	77	;'M'
   425   002EB9  50                 	db	80	;'P'
   426   002EBA  4C                 	db	76	;'L'
   427   002EBB  45                 	db	69	;'E'
   428   002EBC  54                 	db	84	;'T'
   429   002EBD  45                 	db	69	;'E'
   430   002EBE  44                 	db	68	;'D'
   431   002EBF  00                 	db	0
   432   002EC0                     STR_8:
   433   002EC0  20                 	db	32
   434   002EC1  20                 	db	32
   435   002EC2  55                 	db	85	;'U'
   436   002EC3  53                 	db	83	;'S'
   437   002EC4  45                 	db	69	;'E'
   438   002EC5  52                 	db	82	;'R'
   439   002EC6  20                 	db	32
   440   002EC7  42                 	db	66	;'B'
   441   002EC8  4C                 	db	76	;'L'
   442   002EC9  4F                 	db	79	;'O'
   443   002ECA  43                 	db	67	;'C'
   444   002ECB  4B                 	db	75	;'K'
   445   002ECC  45                 	db	69	;'E'
   446   002ECD  44                 	db	68	;'D'
   447   002ECE  20                 	db	32
   448   002ECF  20                 	db	32
   449   002ED0  00                 	db	0
   450   002ED1                     STR_5:
   451   002ED1  20                 	db	32
   452   002ED2  57                 	db	87	;'W'
   453   002ED3  52                 	db	82	;'R'
   454   002ED4  4F                 	db	79	;'O'
   455   002ED5  4E                 	db	78	;'N'
   456   002ED6  47                 	db	71	;'G'
   457   002ED7  20                 	db	32
   458   002ED8  50                 	db	80	;'P'
   459   002ED9  41                 	db	65	;'A'
   460   002EDA  53                 	db	83	;'S'
   461   002EDB  53                 	db	83	;'S'
   462   002EDC  57                 	db	87	;'W'
   463   002EDD  4F                 	db	79	;'O'
   464   002EDE  52                 	db	82	;'R'
   465   002EDF  44                 	db	68	;'D'
   466   002EE0  20                 	db	32
   467   002EE1  00                 	db	0
   468   002EE2                     STR_2:
   469   002EE2  20                 	db	32
   470   002EE3  45                 	db	69	;'E'
   471   002EE4  4E                 	db	78	;'N'
   472   002EE5  54                 	db	84	;'T'
   473   002EE6  45                 	db	69	;'E'
   474   002EE7  52                 	db	82	;'R'
   475   002EE8  20                 	db	32
   476   002EE9  50                 	db	80	;'P'
   477   002EEA  41                 	db	65	;'A'
   478   002EEB  53                 	db	83	;'S'
   479   002EEC  53                 	db	83	;'S'
   480   002EED  57                 	db	87	;'W'
   481   002EEE  4F                 	db	79	;'O'
   482   002EEF  52                 	db	82	;'R'
   483   002EF0  44                 	db	68	;'D'
   484   002EF1  20                 	db	32
   485   002EF2  00                 	db	0
   486   002EF3                     STR_1:
   487   002EF3  20                 	db	32
   488   002EF4  54                 	db	84	;'T'
   489   002EF5  49                 	db	73	;'I'
   490   002EF6  4D                 	db	77	;'M'
   491   002EF7  45                 	db	69	;'E'
   492   002EF8  20                 	db	32
   493   002EF9  20                 	db	32
   494   002EFA  20                 	db	32
   495   002EFB  20                 	db	32
   496   002EFC  20                 	db	32
   497   002EFD  45                 	db	69	;'E'
   498   002EFE  56                 	db	86	;'V'
   499   002EFF  20                 	db	32
   500   002F00  20                 	db	32
   501   002F01  53                 	db	83	;'S'
   502   002F02  50                 	db	80	;'P'
   503   002F03  00                 	db	0
   504   002F04                     STR_10:
   505   002F04  23                 	db	35
   506   002F05  20                 	db	32
   507   002F06  20                 	db	32
   508   002F07  20                 	db	32
   509   002F08  54                 	db	84	;'T'
   510   002F09  49                 	db	73	;'I'
   511   002F0A  4D                 	db	77	;'M'
   512   002F0B  45                 	db	69	;'E'
   513   002F0C  20                 	db	32
   514   002F0D  20                 	db	32
   515   002F0E  20                 	db	32
   516   002F0F  45                 	db	69	;'E'
   517   002F10  56                 	db	86	;'V'
   518   002F11  20                 	db	32
   519   002F12  53                 	db	83	;'S'
   520   002F13  50                 	db	80	;'P'
   521   002F14  00                 	db	0
   522   002F15                     STR_13:
   523   002F15  23                 	db	35
   524   002F16  20                 	db	32
   525   002F17  20                 	db	32
   526   002F18  54                 	db	84	;'T'
   527   002F19  49                 	db	73	;'I'
   528   002F1A  4D                 	db	77	;'M'
   529   002F1B  45                 	db	69	;'E'
   530   002F1C  20                 	db	32
   531   002F1D  45                 	db	69	;'E'
   532   002F1E  56                 	db	86	;'V'
   533   002F1F  20                 	db	32
   534   002F20  53                 	db	83	;'S'
   535   002F21  50                 	db	80	;'P'
   536   002F22  0A                 	db	10
   537   002F23  0D                 	db	13
   538   002F24  00                 	db	0
   539   002F25                     STR_29:
   540   002F25  20                 	db	32
   541   002F26  45                 	db	69	;'E'
   542   002F27  4E                 	db	78	;'N'
   543   002F28  54                 	db	84	;'T'
   544   002F29  45                 	db	69	;'E'
   545   002F2A  52                 	db	82	;'R'
   546   002F2B  20                 	db	32
   547   002F2C  43                 	db	67	;'C'
   548   002F2D  4E                 	db	78	;'N'
   549   002F2E  46                 	db	70	;'F'
   550   002F2F  20                 	db	32
   551   002F30  50                 	db	80	;'P'
   552   002F31  53                 	db	83	;'S'
   553   002F32  57                 	db	87	;'W'
   554   002F33  20                 	db	32
   555   002F34  00                 	db	0
   556   002F35                     STR_28:
   557   002F35  20                 	db	32
   558   002F36  45                 	db	69	;'E'
   559   002F37  4E                 	db	78	;'N'
   560   002F38  54                 	db	84	;'T'
   561   002F39  45                 	db	69	;'E'
   562   002F3A  52                 	db	82	;'R'
   563   002F3B  20                 	db	32
   564   002F3C  4E                 	db	78	;'N'
   565   002F3D  45                 	db	69	;'E'
   566   002F3E  57                 	db	87	;'W'
   567   002F3F  20                 	db	32
   568   002F40  50                 	db	80	;'P'
   569   002F41  53                 	db	83	;'S'
   570   002F42  57                 	db	87	;'W'
   571   002F43  20                 	db	32
   572   002F44  00                 	db	0
   573   002F45                     STR_12:
   574   002F45  44                 	db	68	;'D'
   575   002F46  4F                 	db	79	;'O'
   576   002F47  57                 	db	87	;'W'
   577   002F48  4E                 	db	78	;'N'
   578   002F49  4C                 	db	76	;'L'
   579   002F4A  4F                 	db	79	;'O'
   580   002F4B  41                 	db	65	;'A'
   581   002F4C  44                 	db	68	;'D'
   582   002F4D  49                 	db	73	;'I'
   583   002F4E  4E                 	db	78	;'N'
   584   002F4F  47                 	db	71	;'G'
   585   002F50  2E                 	db	46
   586   002F51  2E                 	db	46
   587   002F52  2E                 	db	46
   588   002F53  00                 	db	0
   589   002F54                     STR_9:
   590   002F54  20                 	db	32
   591   002F55  57                 	db	87	;'W'
   592   002F56  41                 	db	65	;'A'
   593   002F57  49                 	db	73	;'I'
   594   002F58  54                 	db	84	;'T'
   595   002F59  20                 	db	32
   596   002F5A  3A                 	db	58	;':'
   597   002F5B  20                 	db	32
   598   002F5C  20                 	db	32
   599   002F5D  20                 	db	32
   600   002F5E  20                 	db	32
   601   002F5F  53                 	db	83	;'S'
   602   002F60  45                 	db	69	;'E'
   603   002F61  43                 	db	67	;'C'
   604   002F62  00                 	db	0
   605   002F63                     STR_31:
   606   002F63  53                 	db	83	;'S'
   607   002F64  55                 	db	85	;'U'
   608   002F65  43                 	db	67	;'C'
   609   002F66  43                 	db	67	;'C'
   610   002F67  45                 	db	69	;'E'
   611   002F68  53                 	db	83	;'S'
   612   002F69  53                 	db	83	;'S'
   613   002F6A  46                 	db	70	;'F'
   614   002F6B  55                 	db	85	;'U'
   615   002F6C  4C                 	db	76	;'L'
   616   002F6D  4C                 	db	76	;'L'
   617   002F6E  59                 	db	89	;'Y'
   618   002F6F  20                 	db	32
   619   002F70  00                 	db	0
   620   002F71                     STR_25:
   621   002F71  54                 	db	84	;'T'
   622   002F72  49                 	db	73	;'I'
   623   002F73  4D                 	db	77	;'M'
   624   002F74  45                 	db	69	;'E'
   625   002F75  20                 	db	32
   626   002F76  20                 	db	32
   627   002F77  43                 	db	67	;'C'
   628   002F78  48                 	db	72	;'H'
   629   002F79  41                 	db	65	;'A'
   630   002F7A  4E                 	db	78	;'N'
   631   002F7B  47                 	db	71	;'G'
   632   002F7C  45                 	db	69	;'E'
   633   002F7D  44                 	db	68	;'D'
   634   002F7E  00                 	db	0
   635   002F7F                     STR_30:
   636   002F7F  50                 	db	80	;'P'
   637   002F80  53                 	db	83	;'S'
   638   002F81  57                 	db	87	;'W'
   639   002F82  20                 	db	32
   640   002F83  43                 	db	67	;'C'
   641   002F84  48                 	db	72	;'H'
   642   002F85  41                 	db	65	;'A'
   643   002F86  4E                 	db	78	;'N'
   644   002F87  47                 	db	71	;'G'
   645   002F88  45                 	db	69	;'E'
   646   002F89  44                 	db	68	;'D'
   647   002F8A  20                 	db	32
   648   002F8B  00                 	db	0
   649   002F8C                     STR_3:
   650   002F8C  57                 	db	87	;'W'
   651   002F8D  45                 	db	69	;'E'
   652   002F8E  4C                 	db	76	;'L'
   653   002F8F  2D                 	db	45
   654   002F90  43                 	db	67	;'C'
   655   002F91  4F                 	db	79	;'O'
   656   002F92  4D                 	db	77	;'M'
   657   002F93  45                 	db	69	;'E'
   658   002F94  20                 	db	32
   659   002F95  54                 	db	84	;'T'
   660   002F96  4F                 	db	79	;'O'
   661   002F97  20                 	db	32
   662   002F98  00                 	db	0
   663   002F99                     STR_32:
   664   002F99  50                 	db	80	;'P'
   665   002F9A  53                 	db	83	;'S'
   666   002F9B  57                 	db	87	;'W'
   667   002F9C  20                 	db	32
   668   002F9D  44                 	db	68	;'D'
   669   002F9E  4F                 	db	79	;'O'
   670   002F9F  45                 	db	69	;'E'
   671   002FA0  53                 	db	83	;'S'
   672   002FA1  20                 	db	32
   673   002FA2  4E                 	db	78	;'N'
   674   002FA3  4F                 	db	79	;'O'
   675   002FA4  54                 	db	84	;'T'
   676   002FA5  00                 	db	0
   677   002FA6                     STR_20:
   678   002FA6  53                 	db	83	;'S'
   679   002FA7  55                 	db	85	;'U'
   680   002FA8  43                 	db	67	;'C'
   681   002FA9  43                 	db	67	;'C'
   682   002FAA  45                 	db	69	;'E'
   683   002FAB  53                 	db	83	;'S'
   684   002FAC  53                 	db	83	;'S'
   685   002FAD  46                 	db	70	;'F'
   686   002FAE  55                 	db	85	;'U'
   687   002FAF  4C                 	db	76	;'L'
   688   002FB0  4C                 	db	76	;'L'
   689   002FB1  59                 	db	89	;'Y'
   690   002FB2  00                 	db	0
   691   002FB3                     STR_4:
   692   002FB3  4D                 	db	77	;'M'
   693   002FB4  45                 	db	69	;'E'
   694   002FB5  4E                 	db	78	;'N'
   695   002FB6  55                 	db	85	;'U'
   696   002FB7  20                 	db	32
   697   002FB8  53                 	db	83	;'S'
   698   002FB9  43                 	db	67	;'C'
   699   002FBA  52                 	db	82	;'R'
   700   002FBB  45                 	db	69	;'E'
   701   002FBC  45                 	db	69	;'E'
   702   002FBD  4E                 	db	78	;'N'
   703   002FBE  00                 	db	0
   704   002FBF                     STR_6:
   705   002FBF  20                 	db	32
   706   002FC0  41                 	db	65	;'A'
   707   002FC1  54                 	db	84	;'T'
   708   002FC2  54                 	db	84	;'T'
   709   002FC3  45                 	db	69	;'E'
   710   002FC4  4D                 	db	77	;'M'
   711   002FC5  50                 	db	80	;'P'
   712   002FC6  54                 	db	84	;'T'
   713   002FC7  53                 	db	83	;'S'
   714   002FC8  20                 	db	32
   715   002FC9  00                 	db	0
   716   002FCA                     STR_11:
   717   002FCA  4E                 	db	78	;'N'
   718   002FCB  4F                 	db	79	;'O'
   719   002FCC  20                 	db	32
   720   002FCD  45                 	db	69	;'E'
   721   002FCE  56                 	db	86	;'V'
   722   002FCF  45                 	db	69	;'E'
   723   002FD0  4E                 	db	78	;'N'
   724   002FD1  54                 	db	84	;'T'
   725   002FD2  27                 	db	39
   726   002FD3  73                 	db	115	;'s'
   727   002FD4  00                 	db	0
   728   002FD5                     STR_19:
   729   002FD5  43                 	db	67	;'C'
   730   002FD6  4C                 	db	76	;'L'
   731   002FD7  45                 	db	69	;'E'
   732   002FD8  41                 	db	65	;'A'
   733   002FD9  52                 	db	82	;'R'
   734   002FDA  20                 	db	32
   735   002FDB  4C                 	db	76	;'L'
   736   002FDC  4F                 	db	79	;'O'
   737   002FDD  47                 	db	71	;'G'
   738   002FDE  00                 	db	0
   739   002FDF                     STR_27:
   740   002FDF  30                 	db	48	;'0'
   741   002FE0  30                 	db	48	;'0'
   742   002FE1  3A                 	db	58	;':'
   743   002FE2  30                 	db	48	;'0'
   744   002FE3  30                 	db	48	;'0'
   745   002FE4  3A                 	db	58	;':'
   746   002FE5  30                 	db	48	;'0'
   747   002FE6  30                 	db	48	;'0'
   748   002FE7  00                 	db	0
   749   002FE8                     STR_24:
   750   002FE8  48                 	db	72	;'H'
   751   002FE9  48                 	db	72	;'H'
   752   002FEA  3A                 	db	58	;':'
   753   002FEB  4D                 	db	77	;'M'
   754   002FEC  4D                 	db	77	;'M'
   755   002FED  3A                 	db	58	;':'
   756   002FEE  53                 	db	83	;'S'
   757   002FEF  53                 	db	83	;'S'
   758   002FF0  00                 	db	0
   759   002FF1                     STR_33:
   760   002FF1  4D                 	db	77	;'M'
   761   002FF2  41                 	db	65	;'A'
   762   002FF3  54                 	db	84	;'T'
   763   002FF4  43                 	db	67	;'C'
   764   002FF5  48                 	db	72	;'H'
   765   002FF6  00                 	db	0
   766   002FF7                     STR_7:
   767   002FF7  4F                 	db	79	;'O'
   768   002FF8  56                 	db	86	;'V'
   769   002FF9  45                 	db	69	;'E'
   770   002FFA  52                 	db	82	;'R'
   771   002FFB  00                 	db	0
   772   002FFC                     STR_34:
   773   002FFC  2D                 	db	45
   774   002FFD  3E                 	db	62	;'>'
   775   002FFE  00                 	db	0
   776   002FFF  00                 	db	0	; dummy byte at the end
   777   000000                     
   778                           ; #config settings
   779                           
   780                           	psect	cinit
   781   002592                     __pcinit:
   782                           	callstack 0
   783   002592                     start_initialization:
   784                           	callstack 0
   785   002592                     __initialization:
   786                           	callstack 0
   787                           
   788                           ; Initialize objects allocated to BANK1 (136 bytes)
   789                           ; load TBLPTR registers with __pidataBANK1
   790   002592  0E1C               	movlw	low __pidataBANK1
   791   002594  6EF6               	movwf	tblptrl,c
   792   002596  0E26               	movlw	high __pidataBANK1
   793   002598  6EF7               	movwf	tblptrh,c
   794   00259A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   795   00259C  6EF8               	movwf	tblptru,c
   796   00259E  EE01  F000         	lfsr	0,__pdataBANK1
   797   0025A2  EE10 F088          	lfsr	1,136
   798   0025A6                     copy_data0:
   799   0025A6  0009               	tblrd		*+
   800   0025A8  CFF5 FFEE          	movff	tablat,postinc0
   801   0025AC  50E5               	movf	postdec1,w,c
   802   0025AE  50E1               	movf	fsr1l,w,c
   803   0025B0  E1FA               	bnz	copy_data0
   804                           
   805                           ; Initialize objects allocated to BANK0 (36 bytes)
   806                           ; load TBLPTR registers with __pidataBANK0
   807   0025B2  0E34               	movlw	low __pidataBANK0
   808   0025B4  6EF6               	movwf	tblptrl,c
   809   0025B6  0E2B               	movlw	high __pidataBANK0
   810   0025B8  6EF7               	movwf	tblptrh,c
   811   0025BA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   812   0025BC  6EF8               	movwf	tblptru,c
   813   0025BE  EE00  F0D5         	lfsr	0,__pdataBANK0
   814   0025C2  EE10 F024          	lfsr	1,36
   815   0025C6                     copy_data1:
   816   0025C6  0009               	tblrd		*+
   817   0025C8  CFF5 FFEE          	movff	tablat,postinc0
   818   0025CC  50E5               	movf	postdec1,w,c
   819   0025CE  50E1               	movf	fsr1l,w,c
   820   0025D0  E1FA               	bnz	copy_data1
   821                           
   822                           ; Initialize objects allocated to COMRAM (2 bytes)
   823                           ; load TBLPTR registers with __pidataCOMRAM
   824   0025D2  0E86               	movlw	low __pidataCOMRAM
   825   0025D4  6EF6               	movwf	tblptrl,c
   826   0025D6  0E2C               	movlw	high __pidataCOMRAM
   827   0025D8  6EF7               	movwf	tblptrh,c
   828   0025DA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   829   0025DC  6EF8               	movwf	tblptru,c
   830   0025DE  0009               	tblrd		*+	;fetch initializer
   831   0025E0  CFF5 F05C          	movff	tablat,__pdataCOMRAM
   832   0025E4  0009               	tblrd		*+	;fetch initializer
   833   0025E6  CFF5 F05D          	movff	tablat,__pdataCOMRAM+1
   834                           
   835                           ; Clear objects allocated to BANK1 (56 bytes)
   836   0025EA  EE01  F088         	lfsr	0,__pbssBANK1
   837   0025EE  0E38               	movlw	56
   838   0025F0                     clear_0:
   839   0025F0  6AEE               	clrf	postinc0,c
   840   0025F2  06E8               	decf	wreg,f,c
   841   0025F4  E1FD               	bnz	clear_0
   842                           
   843                           ; Clear objects allocated to BANK0 (117 bytes)
   844   0025F6  EE00  F060         	lfsr	0,__pbssBANK0
   845   0025FA  0E75               	movlw	117
   846   0025FC                     clear_1:
   847   0025FC  6AEE               	clrf	postinc0,c
   848   0025FE  06E8               	decf	wreg,f,c
   849   002600  E1FD               	bnz	clear_1
   850                           
   851                           ; Clear objects allocated to COMRAM (35 bytes)
   852   002602  EE00  F039         	lfsr	0,__pbssCOMRAM
   853   002606  0E23               	movlw	35
   854   002608                     clear_2:
   855   002608  6AEE               	clrf	postinc0,c
   856   00260A  06E8               	decf	wreg,f,c
   857   00260C  E1FD               	bnz	clear_2
   858   00260E                     end_of_initialization:
   859                           	callstack 0
   860   00260E                     __end_of__initialization:
   861                           	callstack 0
   862   00260E  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   863   002610  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   864   002612  0E00               	movlw	low (__Lmediumconst shr (0+16))
   865   002614  6EF8               	movwf	tblptru,c
   866   002616  0100               	movlb	0
   867   002618  EFD9  F00F         	goto	_main	;jump to C main() function
   868                           
   869                           	psect	bssCOMRAM
   870   000039                     __pbssCOMRAM:
   871                           	callstack 0
   872   000039                     _delay:
   873                           	callstack 0
   874   000039                     	ds	4
   875   00003D                     _ARROW:
   876                           	callstack 0
   877   00003D                     	ds	2
   878   00003F                     _M_index:
   879                           	callstack 0
   880   00003F                     	ds	2
   881   000041                     _FILED:
   882                           	callstack 0
   883   000041                     	ds	2
   884   000043                     _address:
   885                           	callstack 0
   886   000043                     	ds	2
   887   000045                     _store_add:
   888                           	callstack 0
   889   000045                     	ds	2
   890   000047                     _f:
   891                           	callstack 0
   892   000047                     	ds	2
   893   000049                     _index@common$F326:
   894                           	callstack 0
   895   000049                     	ds	2
   896   00004B                     _g_index:
   897                           	callstack 0
   898   00004B                     	ds	2
   899   00004D                     _speed:
   900                           	callstack 0
   901   00004D                     	ds	2
   902   00004F                     _MENU_FLAG:
   903                           	callstack 0
   904   00004F                     	ds	2
   905   000051                     _SCREEN_FLAG:
   906                           	callstack 0
   907   000051                     	ds	2
   908   000053                     _second:
   909                           	callstack 0
   910   000053                     	ds	1
   911   000054                     _hour:
   912                           	callstack 0
   913   000054                     	ds	1
   914   000055                     _min:
   915                           	callstack 0
   916   000055                     	ds	1
   917   000056                     _NEW_KEY:
   918                           	callstack 0
   919   000056                     	ds	1
   920   000057                     _EI:
   921                           	callstack 0
   922   000057                     	ds	1
   923   000058                     read_switches@key:
   924                           	callstack 0
   925   000058                     	ds	1
   926   000059                     _key:
   927                           	callstack 0
   928   000059                     	ds	1
   929   00005A                     _no_of_event:
   930                           	callstack 0
   931   00005A                     	ds	2
   932                           
   933                           	psect	dataCOMRAM
   934   00005C                     __pdataCOMRAM:
   935                           	callstack 0
   936   00005C                     _sec:
   937                           	callstack 0
   938   00005C                     	ds	2
   939                           
   940                           	psect	bssBANK0
   941   000060                     __pbssBANK0:
   942                           	callstack 0
   943   000060                     _dummy:
   944                           	callstack 0
   945   000060                     	ds	8
   946   000068                     _pass@common$F330:
   947                           	callstack 0
   948   000068                     	ds	8
   949   000070                     _arr@common$F329:
   950                           	callstack 0
   951   000070                     	ds	8
   952   000078                     	ds	8
   953   000080                     	ds	8
   954   000088                     	ds	8
   955   000090                     _clock_set:
   956                           	callstack 0
   957   000090                     	ds	4
   958   000094                     _clock_reg:
   959                           	callstack 0
   960   000094                     	ds	3
   961   000097                     	ds	2
   962   000099                     	ds	2
   963   00009B                     	ds	2
   964   00009D                     	ds	2
   965   00009F                     isr@count:
   966                           	callstack 0
   967   00009F                     	ds	2
   968   0000A1                     	ds	2
   969   0000A3                     	ds	2
   970   0000A5                     _add:
   971                           	callstack 0
   972   0000A5                     	ds	2
   973   0000A7                     _password:
   974                           	callstack 0
   975   0000A7                     	ds	2
   976   0000A9                     _blink_f:
   977                           	callstack 0
   978   0000A9                     	ds	2
   979   0000AB                     _BLINK:
   980                           	callstack 0
   981   0000AB                     	ds	2
   982   0000AD                     _Event:
   983                           	callstack 0
   984   0000AD                     	ds	2
   985   0000AF                     _pk:
   986                           	callstack 0
   987   0000AF                     	ds	2
   988   0000B1                     _count@common$F325:
   989                           	callstack 0
   990   0000B1                     	ds	2
   991   0000B3                     	ds	2
   992   0000B5                     	ds	2
   993   0000B7                     	ds	2
   994   0000B9                     	ds	2
   995   0000BB                     _wait:
   996                           	callstack 0
   997   0000BB                     	ds	2
   998   0000BD                     _ch:
   999                           	callstack 0
  1000   0000BD                     	ds	1
  1001   0000BE                     _EF:
  1002                           	callstack 0
  1003   0000BE                     	ds	1
  1004   0000BF                     _option_save:
  1005                           	callstack 0
  1006   0000BF                     	ds	1
  1007   0000C0                     _print:
  1008                           	callstack 0
  1009   0000C0                     	ds	12
  1010   0000CC                     _time:
  1011                           	callstack 0
  1012   0000CC                     	ds	9
  1013                           
  1014                           	psect	dataBANK0
  1015   0000D5                     __pdataBANK0:
  1016                           	callstack 0
  1017   0000D5                     	ds	2
  1018   0000D7                     	ds	2
  1019   0000D9                     	ds	2
  1020   0000DB                     	ds	2
  1021   0000DD                     	ds	2
  1022   0000DF                     	ds	2
  1023   0000E1                     _once@common$F327:
  1024                           	callstack 0
  1025   0000E1                     	ds	2
  1026   0000E3                     _chance@common$F324:
  1027                           	callstack 0
  1028   0000E3                     	ds	2
  1029   0000E5                     	ds	2
  1030   0000E7                     	ds	2
  1031   0000E9                     	ds	2
  1032   0000EB                     	ds	2
  1033   0000ED                     _write_eeprom:
  1034                           	callstack 0
  1035   0000ED                     	ds	1
  1036   0000EE                     read_switches@once:
  1037                           	callstack 0
  1038   0000EE                     	ds	1
  1039   0000EF                     _flag:
  1040                           	callstack 0
  1041   0000EF                     	ds	1
  1042   0000F0                     _change_Time:
  1043                           	callstack 0
  1044   0000F0                     	ds	9
  1045                           
  1046                           	psect	bssBANK1
  1047   000188                     __pbssBANK1:
  1048                           	callstack 0
  1049   000188                     	ds	8
  1050   000190                     	ds	8
  1051   000198                     	ds	8
  1052   0001A0                     	ds	8
  1053   0001A8                     	ds	8
  1054   0001B0                     	ds	8
  1055   0001B8                     	ds	8
  1056                           
  1057                           	psect	dataBANK1
  1058   000100                     __pdataBANK1:
  1059                           	callstack 0
  1060   000100                     _diplay:
  1061                           	callstack 0
  1062   000100                     	ds	100
  1063   000164                     _gear:
  1064                           	callstack 0
  1065   000164                     	ds	36
  1066                           
  1067                           	psect	cstackCOMRAM
  1068   000001                     __pcstackCOMRAM:
  1069                           	callstack 0
  1070   000001                     ?_read_adc:
  1071                           	callstack 0
  1072   000001                     ?___wmul:
  1073                           	callstack 0
  1074   000001                     ?___awdiv:
  1075                           	callstack 0
  1076   000001                     ?___awmod:
  1077                           	callstack 0
  1078   000001                     ?___lwdiv:
  1079                           	callstack 0
  1080   000001                     ?___lwmod:
  1081                           	callstack 0
  1082   000001                     clcd_write@control_bit:
  1083                           	callstack 0
  1084   000001                     read_switches@detection_type:
  1085                           	callstack 0
  1086   000001                     i2c_write@data:
  1087                           	callstack 0
  1088   000001                     putch@byte:
  1089                           	callstack 0
  1090   000001                     ___wmul@multiplier:
  1091                           	callstack 0
  1092   000001                     ___awdiv@dividend:
  1093                           	callstack 0
  1094   000001                     ___awmod@dividend:
  1095                           	callstack 0
  1096   000001                     ___lwdiv@dividend:
  1097                           	callstack 0
  1098   000001                     ___lwmod@dividend:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x0
  1102   000001                     	ds	1
  1103   000002                     clcd_write@byte:
  1104                           	callstack 0
  1105   000002                     read_ds1307@address:
  1106                           	callstack 0
  1107   000002                     read_external_eeprom@address:
  1108                           	callstack 0
  1109   000002                     puts@s:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x1
  1113   000002                     	ds	1
  1114   000003                     ??_read_adc:
  1115   000003                     read_ds1307@data:
  1116                           	callstack 0
  1117   000003                     read_external_eeprom@data:
  1118                           	callstack 0
  1119   000003                     ___wmul@multiplicand:
  1120                           	callstack 0
  1121   000003                     ___awdiv@divisor:
  1122                           	callstack 0
  1123   000003                     ___awmod@divisor:
  1124                           	callstack 0
  1125   000003                     ___lwdiv@divisor:
  1126                           	callstack 0
  1127   000003                     ___lwmod@divisor:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x2
  1131   000003                     	ds	1
  1132   000004                     
  1133                           ; 1 bytes @ 0x3
  1134   000004                     	ds	1
  1135   000005                     ___awdiv@counter:
  1136                           	callstack 0
  1137   000005                     ___awmod@counter:
  1138                           	callstack 0
  1139   000005                     ___lwmod@counter:
  1140                           	callstack 0
  1141   000005                     read_adc@reg_val:
  1142                           	callstack 0
  1143   000005                     ___wmul@product:
  1144                           	callstack 0
  1145   000005                     ___lwdiv@quotient:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x4
  1149   000005                     	ds	1
  1150   000006                     ___awdiv@sign:
  1151                           	callstack 0
  1152   000006                     ___awmod@sign:
  1153                           	callstack 0
  1154                           
  1155                           ; 1 bytes @ 0x5
  1156   000006                     	ds	1
  1157   000007                     read_adc@channel:
  1158                           	callstack 0
  1159   000007                     write_external_eeprom@data:
  1160                           	callstack 0
  1161   000007                     ___lwdiv@counter:
  1162                           	callstack 0
  1163   000007                     clcd_print@data:
  1164                           	callstack 0
  1165   000007                     ___awdiv@quotient:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x6
  1169   000007                     	ds	1
  1170   000008                     ?___xxtofl:
  1171                           	callstack 0
  1172   000008                     clcd_putch@addr:
  1173                           	callstack 0
  1174   000008                     write_external_eeprom@i:
  1175                           	callstack 0
  1176   000008                     ___xxtofl@val:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x7
  1180   000008                     	ds	1
  1181   000009                     clcd_print@addr:
  1182                           	callstack 0
  1183   000009                     clcd_putch@data:
  1184                           	callstack 0
  1185   000009                     write_ds1307@data:
  1186                           	callstack 0
  1187                           
  1188                           ; 1 bytes @ 0x8
  1189   000009                     	ds	1
  1190   00000A                     ??_password_screen:
  1191   00000A                     ??_view_log:
  1192   00000A                     ??_download_log:
  1193   00000A                     write_ds1307@address:
  1194                           	callstack 0
  1195   00000A                     write_external_eeprom@address:
  1196                           	callstack 0
  1197                           
  1198                           ; 1 bytes @ 0x9
  1199   00000A                     	ds	1
  1200   00000B                     init_ds1307@dummy:
  1201                           	callstack 0
  1202   00000B                     over_write@i:
  1203                           	callstack 0
  1204   00000B                     download_log@y:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0xA
  1208   00000B                     	ds	1
  1209   00000C                     ??___xxtofl:
  1210                           
  1211                           ; 1 bytes @ 0xB
  1212   00000C                     	ds	1
  1213   00000D                     over_write@ch:
  1214                           	callstack 0
  1215                           
  1216                           ; 1 bytes @ 0xC
  1217   00000D                     	ds	1
  1218   00000E                     over_write@j:
  1219                           	callstack 0
  1220   00000E                     password_screen@y:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0xD
  1224   00000E                     	ds	1
  1225   00000F                     download_log@y_378:
  1226                           	callstack 0
  1227                           
  1228                           ; 4 bytes @ 0xE
  1229   00000F                     	ds	1
  1230   000010                     ??_store_event_in_eeprom:
  1231   000010                     ___xxtofl@sign:
  1232                           	callstack 0
  1233                           
  1234                           ; 1 bytes @ 0xF
  1235   000010                     	ds	1
  1236   000011                     ___xxtofl@exp:
  1237                           	callstack 0
  1238                           
  1239                           ; 1 bytes @ 0x10
  1240   000011                     	ds	1
  1241   000012                     store_event_in_eeprom@i:
  1242                           	callstack 0
  1243   000012                     password_screen@y_353:
  1244                           	callstack 0
  1245   000012                     ___xxtofl@arg:
  1246                           	callstack 0
  1247                           
  1248                           ; 4 bytes @ 0x11
  1249   000012                     	ds	1
  1250   000013                     download_log@i:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x12
  1254   000013                     	ds	1
  1255   000014                     store_event_in_eeprom@i_428:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x13
  1259   000014                     	ds	2
  1260   000016                     ?___fldiv:
  1261                           	callstack 0
  1262   000016                     store_event_in_eeprom@i_429:
  1263                           	callstack 0
  1264   000016                     ___fldiv@b:
  1265                           	callstack 0
  1266                           
  1267                           ; 4 bytes @ 0x15
  1268   000016                     	ds	2
  1269   000018                     store_event_in_eeprom@i_430:
  1270                           	callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x17
  1273   000018                     	ds	2
  1274   00001A                     store_event_in_eeprom@i_431:
  1275                           	callstack 0
  1276   00001A                     ___fldiv@a:
  1277                           	callstack 0
  1278                           
  1279                           ; 4 bytes @ 0x19
  1280   00001A                     	ds	2
  1281   00001C                     ??_set_time:
  1282   00001C                     clear_log@y:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x1B
  1286   00001C                     	ds	2
  1287   00001E                     ??___fldiv:
  1288   00001E                     set_time@y:
  1289                           	callstack 0
  1290                           
  1291                           ; 4 bytes @ 0x1D
  1292   00001E                     	ds	2
  1293   000020                     change_password@y:
  1294                           	callstack 0
  1295                           
  1296                           ; 4 bytes @ 0x1F
  1297   000020                     	ds	2
  1298   000022                     set_time@key:
  1299                           	callstack 0
  1300   000022                     ___fldiv@rem:
  1301                           	callstack 0
  1302                           
  1303                           ; 4 bytes @ 0x21
  1304   000022                     	ds	2
  1305   000024                     change_password@y_412:
  1306                           	callstack 0
  1307                           
  1308                           ; 4 bytes @ 0x23
  1309   000024                     	ds	2
  1310   000026                     ___fldiv@sign:
  1311                           	callstack 0
  1312                           
  1313                           ; 1 bytes @ 0x25
  1314   000026                     	ds	1
  1315   000027                     ___fldiv@new_exp:
  1316                           	callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x26
  1319   000027                     	ds	2
  1320   000029                     ___fldiv@grs:
  1321                           	callstack 0
  1322                           
  1323                           ; 4 bytes @ 0x28
  1324   000029                     	ds	4
  1325   00002D                     ___fldiv@bexp:
  1326                           	callstack 0
  1327                           
  1328                           ; 1 bytes @ 0x2C
  1329   00002D                     	ds	1
  1330   00002E                     ___fldiv@aexp:
  1331                           	callstack 0
  1332                           
  1333                           ; 1 bytes @ 0x2D
  1334   00002E                     	ds	1
  1335   00002F                     ?___fltol:
  1336                           	callstack 0
  1337   00002F                     ___fltol@f1:
  1338                           	callstack 0
  1339                           
  1340                           ; 4 bytes @ 0x2E
  1341   00002F                     	ds	4
  1342   000033                     ??___fltol:
  1343                           
  1344                           ; 1 bytes @ 0x32
  1345   000033                     	ds	4
  1346   000037                     ___fltol@sign1:
  1347                           	callstack 0
  1348                           
  1349                           ; 1 bytes @ 0x36
  1350   000037                     	ds	1
  1351   000038                     ___fltol@exp1:
  1352                           	callstack 0
  1353                           
  1354                           ; 1 bytes @ 0x37
  1355   000038                     	ds	1
  1356   000039                     
  1357                           ; 1 bytes @ 0x38
  1358 ;;
  1359 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1360 ;;
  1361 ;; *************** function _main *****************
  1362 ;; Defined at:
  1363 ;;		line 29 in file "main.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;		None
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1377 ;;      Params:         0       0       0       0       0       0       0
  1378 ;;      Locals:         0       0       0       0       0       0       0
  1379 ;;      Temps:          0       0       0       0       0       0       0
  1380 ;;      Totals:         0       0       0       0       0       0       0
  1381 ;;Total ram usage:        0 bytes
  1382 ;; Hardware stack levels required when called: 8
  1383 ;; This function calls:
  1384 ;;		_change_password
  1385 ;;		_clcd_write
  1386 ;;		_clear_log
  1387 ;;		_display_dashboard
  1388 ;;		_display_menu
  1389 ;;		_download_log
  1390 ;;		_init_config
  1391 ;;		_password_screen
  1392 ;;		_read_switches
  1393 ;;		_set_time
  1394 ;;		_view_log
  1395 ;; This function is called by:
  1396 ;;		Startup code after reset
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text0
  1401   001FB2                     __ptext0:
  1402                           	callstack 0
  1403   001FB2                     _main:
  1404                           	callstack 23
  1405   001FB2                     
  1406                           ;main.c: 30:     clcd_write(0x01, 0);
  1407   001FB2  0E00               	movlw	0
  1408   001FB4  6E01               	movwf	clcd_write@control_bit^0,c
  1409   001FB6  0E01               	movlw	1
  1410   001FB8  EC25  F015         	call	_clcd_write
  1411   001FBC                     
  1412                           ;main.c: 31:     init_config();
  1413   001FBC  ECAC  F015         	call	_init_config	;wreg free
  1414   001FC0                     l4844:
  1415                           
  1416                           ;main.c: 34:         key = read_switches(1);
  1417   001FC0  0E01               	movlw	1
  1418   001FC2  EC52  F013         	call	_read_switches
  1419   001FC6  6E59               	movwf	_key^0,c
  1420   001FC8                     
  1421                           ;main.c: 36:         if (key == 5 && flag) {
  1422   001FC8  0E05               	movlw	5
  1423   001FCA  1859               	xorwf	_key^0,w,c
  1424   001FCC  A4D8               	btfss	status,2,c
  1425   001FCE  EFEB  F00F         	goto	u4371
  1426   001FD2  EFED  F00F         	goto	u4370
  1427   001FD6                     u4371:
  1428   001FD6  EFFC  F00F         	goto	l4852
  1429   001FDA                     u4370:
  1430   001FDA  0100               	movlb	0	; () banked
  1431   001FDC  51EF               	movf	_flag& (0+255),w,b
  1432   001FDE  B4D8               	btfsc	status,2,c
  1433   001FE0  EFF4  F00F         	goto	u4381
  1434   001FE4  EFF6  F00F         	goto	u4380
  1435   001FE8                     u4381:
  1436   001FE8  EFFC  F00F         	goto	l4852
  1437   001FEC                     u4380:
  1438   001FEC                     
  1439                           ; BSR set to: 0
  1440                           ;main.c: 37:             SCREEN_FLAG = 1;
  1441   001FEC  0E00               	movlw	0
  1442   001FEE  6E52               	movwf	(_SCREEN_FLAG+1)^0,c
  1443   001FF0  0E01               	movlw	1
  1444   001FF2  6E51               	movwf	_SCREEN_FLAG^0,c
  1445                           
  1446                           ;main.c: 38:             flag = 0;
  1447   001FF4  0E00               	movlw	0
  1448   001FF6  6FEF               	movwf	_flag& (0+255),b
  1449   001FF8                     l4852:
  1450                           
  1451                           ;main.c: 41:         if (SCREEN_FLAG == 0) {
  1452   001FF8  5051               	movf	_SCREEN_FLAG^0,w,c
  1453   001FFA  1052               	iorwf	(_SCREEN_FLAG+1)^0,w,c
  1454   001FFC  A4D8               	btfss	status,2,c
  1455   001FFE  EF03  F010         	goto	u4391
  1456   002002  EF05  F010         	goto	u4390
  1457   002006                     u4391:
  1458   002006  EF09  F010         	goto	l4856
  1459   00200A                     u4390:
  1460   00200A                     
  1461                           ;main.c: 42:             display_dashboard();
  1462   00200A  ECAD  F004         	call	_display_dashboard	;wreg free
  1463                           
  1464                           ;main.c: 43:         } else if (SCREEN_FLAG == 1) {
  1465   00200E  EFE0  F00F         	goto	l4844
  1466   002012                     l4856:
  1467   002012  0451               	decf	_SCREEN_FLAG^0,w,c
  1468   002014  1052               	iorwf	(_SCREEN_FLAG+1)^0,w,c
  1469   002016  A4D8               	btfss	status,2,c
  1470   002018  EF10  F010         	goto	u4401
  1471   00201C  EF12  F010         	goto	u4400
  1472   002020                     u4401:
  1473   002020  EF16  F010         	goto	l4860
  1474   002024                     u4400:
  1475   002024                     
  1476                           ;main.c: 44:             password_screen();
  1477   002024  EC73  F002         	call	_password_screen	;wreg free
  1478                           
  1479                           ;main.c: 45:         } else if (SCREEN_FLAG == 2) {
  1480   002028  EFE0  F00F         	goto	l4844
  1481   00202C                     l4860:
  1482   00202C  0E02               	movlw	2
  1483   00202E  1851               	xorwf	_SCREEN_FLAG^0,w,c
  1484   002030  1052               	iorwf	(_SCREEN_FLAG+1)^0,w,c
  1485   002032  A4D8               	btfss	status,2,c
  1486   002034  EF1E  F010         	goto	u4411
  1487   002038  EF20  F010         	goto	u4410
  1488   00203C                     u4411:
  1489   00203C  EFE0  F00F         	goto	l4844
  1490   002040                     u4410:
  1491   002040                     
  1492                           ;main.c: 46:             if (MENU_FLAG == 3) {
  1493   002040  0E03               	movlw	3
  1494   002042  184F               	xorwf	_MENU_FLAG^0,w,c
  1495   002044  1050               	iorwf	(_MENU_FLAG+1)^0,w,c
  1496   002046  A4D8               	btfss	status,2,c
  1497   002048  EF28  F010         	goto	u4421
  1498   00204C  EF2A  F010         	goto	u4420
  1499   002050                     u4421:
  1500   002050  EF2E  F010         	goto	l4866
  1501   002054                     u4420:
  1502   002054                     
  1503                           ;main.c: 47:                 view_log();
  1504   002054  EC34  F00A         	call	_view_log	;wreg free
  1505                           
  1506                           ;main.c: 48:             } else if (MENU_FLAG == 4) {
  1507   002058  EFE0  F00F         	goto	l4844
  1508   00205C                     l4866:
  1509   00205C  0E04               	movlw	4
  1510   00205E  184F               	xorwf	_MENU_FLAG^0,w,c
  1511   002060  1050               	iorwf	(_MENU_FLAG+1)^0,w,c
  1512   002062  A4D8               	btfss	status,2,c
  1513   002064  EF36  F010         	goto	u4431
  1514   002068  EF38  F010         	goto	u4430
  1515   00206C                     u4431:
  1516   00206C  EF3C  F010         	goto	l4870
  1517   002070                     u4430:
  1518   002070                     
  1519                           ;main.c: 49:                 download_log();
  1520   002070  EC12  F00D         	call	_download_log	;wreg free
  1521                           
  1522                           ;main.c: 50:             } else if (MENU_FLAG == 5) {
  1523   002074  EFE0  F00F         	goto	l4844
  1524   002078                     l4870:
  1525   002078  0E05               	movlw	5
  1526   00207A  184F               	xorwf	_MENU_FLAG^0,w,c
  1527   00207C  1050               	iorwf	(_MENU_FLAG+1)^0,w,c
  1528   00207E  A4D8               	btfss	status,2,c
  1529   002080  EF44  F010         	goto	u4441
  1530   002084  EF46  F010         	goto	u4440
  1531   002088                     u4441:
  1532   002088  EF4A  F010         	goto	l4874
  1533   00208C                     u4440:
  1534   00208C                     
  1535                           ;main.c: 51:                 clear_log();
  1536   00208C  EC32  F012         	call	_clear_log	;wreg free
  1537                           
  1538                           ;main.c: 52:             } else if (MENU_FLAG == 6) {
  1539   002090  EFE0  F00F         	goto	l4844
  1540   002094                     l4874:
  1541   002094  0E06               	movlw	6
  1542   002096  184F               	xorwf	_MENU_FLAG^0,w,c
  1543   002098  1050               	iorwf	(_MENU_FLAG+1)^0,w,c
  1544   00209A  A4D8               	btfss	status,2,c
  1545   00209C  EF52  F010         	goto	u4451
  1546   0020A0  EF54  F010         	goto	u4450
  1547   0020A4                     u4451:
  1548   0020A4  EF5D  F010         	goto	l4880
  1549   0020A8                     u4450:
  1550   0020A8                     
  1551                           ;main.c: 53:                 key = read_switches(0);
  1552   0020A8  0E00               	movlw	0
  1553   0020AA  EC52  F013         	call	_read_switches
  1554   0020AE  6E59               	movwf	_key^0,c
  1555   0020B0                     
  1556                           ;main.c: 54:                 set_time(key);
  1557   0020B0  5059               	movf	_key^0,w,c
  1558   0020B2  EC09  F000         	call	_set_time
  1559                           
  1560                           ;main.c: 55:             } else if (MENU_FLAG == 7) {
  1561   0020B6  EFE0  F00F         	goto	l4844
  1562   0020BA                     l4880:
  1563   0020BA  0E07               	movlw	7
  1564   0020BC  184F               	xorwf	_MENU_FLAG^0,w,c
  1565   0020BE  1050               	iorwf	(_MENU_FLAG+1)^0,w,c
  1566   0020C0  A4D8               	btfss	status,2,c
  1567   0020C2  EF65  F010         	goto	u4461
  1568   0020C6  EF67  F010         	goto	u4460
  1569   0020CA                     u4461:
  1570   0020CA  EF6B  F010         	goto	l4884
  1571   0020CE                     u4460:
  1572   0020CE                     
  1573                           ;main.c: 56:                 change_password();
  1574   0020CE  EC99  F006         	call	_change_password	;wreg free
  1575                           
  1576                           ;main.c: 57:             } else
  1577   0020D2  EFE0  F00F         	goto	l4844
  1578   0020D6                     l4884:
  1579                           
  1580                           ;main.c: 58:                 display_menu();
  1581   0020D6  ECA3  F00B         	call	_display_menu	;wreg free
  1582   0020DA  EFE0  F00F         	goto	l4844
  1583   0020DE  EF07  F000         	goto	start
  1584   0020E2                     __end_of_main:
  1585                           	callstack 0
  1586                           
  1587 ;; *************** function _view_log *****************
  1588 ;; Defined at:
  1589 ;;		line 186 in file "common.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1603 ;;      Params:         0       0       0       0       0       0       0
  1604 ;;      Locals:         0       0       0       0       0       0       0
  1605 ;;      Temps:          2       0       0       0       0       0       0
  1606 ;;      Totals:         2       0       0       0       0       0       0
  1607 ;;Total ram usage:        2 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; Hardware stack levels required when called: 5
  1610 ;; This function calls:
  1611 ;;		___lwdiv
  1612 ;;		___lwmod
  1613 ;;		___wmul
  1614 ;;		_clcd_print
  1615 ;;		_clcd_putch
  1616 ;;		_clcd_write
  1617 ;;		_read_external_eeprom
  1618 ;;		_read_switches
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text1
  1625   001468                     __ptext1:
  1626                           	callstack 0
  1627   001468                     _view_log:
  1628                           	callstack 25
  1629   001468                     
  1630                           ;common.c: 187:     clcd_print("#   TIME   EV SP", (0x80 + (0)));
  1631   001468  0E04               	movlw	low STR_10
  1632   00146A  6E07               	movwf	clcd_print@data^0,c
  1633   00146C  0E2F               	movlw	high STR_10
  1634   00146E  6E08               	movwf	(clcd_print@data+1)^0,c
  1635   001470  0E80               	movlw	128
  1636   001472  6E09               	movwf	clcd_print@addr^0,c
  1637   001474  EC06  F014         	call	_clcd_print	;wreg free
  1638   001478                     
  1639                           ;common.c: 188:     key = read_switches(0);
  1640   001478  0E00               	movlw	0
  1641   00147A  EC52  F013         	call	_read_switches
  1642   00147E  6E59               	movwf	_key^0,c
  1643   001480                     
  1644                           ;common.c: 189:     if (key == 5 || key == 6) {
  1645   001480  0E05               	movlw	5
  1646   001482  1859               	xorwf	_key^0,w,c
  1647   001484  B4D8               	btfsc	status,2,c
  1648   001486  EF47  F00A         	goto	u3651
  1649   00148A  EF49  F00A         	goto	u3650
  1650   00148E                     u3651:
  1651   00148E  EF52  F00A         	goto	l4288
  1652   001492                     u3650:
  1653   001492  0E06               	movlw	6
  1654   001494  1859               	xorwf	_key^0,w,c
  1655   001496  A4D8               	btfss	status,2,c
  1656   001498  EF50  F00A         	goto	u3661
  1657   00149C  EF52  F00A         	goto	u3660
  1658   0014A0                     u3661:
  1659   0014A0  EF5A  F00A         	goto	l422
  1660   0014A4                     u3660:
  1661   0014A4                     l4288:
  1662                           
  1663                           ;common.c: 190:         delay++;
  1664   0014A4  0E01               	movlw	1
  1665   0014A6  2639               	addwf	_delay^0,f,c
  1666   0014A8  0E00               	movlw	0
  1667   0014AA  223A               	addwfc	(_delay+1)^0,f,c
  1668   0014AC  223B               	addwfc	(_delay+2)^0,f,c
  1669   0014AE  223C               	addwfc	(_delay+3)^0,f,c
  1670   0014B0                     
  1671                           ;common.c: 191:         NEW_KEY = key;
  1672   0014B0  C059  F056         	movff	_key,_NEW_KEY
  1673   0014B4                     l422:
  1674                           
  1675                           ;common.c: 193:     if (delay < 500 && key == 0xFF) {
  1676   0014B4  503C               	movf	(_delay+3)^0,w,c
  1677   0014B6  103B               	iorwf	(_delay+2)^0,w,c
  1678   0014B8  E109               	bnz	u3671
  1679   0014BA  0EF4               	movlw	244
  1680   0014BC  5C39               	subwf	_delay^0,w,c
  1681   0014BE  0E01               	movlw	1
  1682   0014C0  583A               	subwfb	(_delay+1)^0,w,c
  1683   0014C2  B0D8               	btfsc	status,0,c
  1684   0014C4  EF66  F00A         	goto	u3671
  1685   0014C8  EF68  F00A         	goto	u3670
  1686   0014CC                     u3671:
  1687   0014CC  EFEF  F00A         	goto	l4322
  1688   0014D0                     u3670:
  1689   0014D0  2859               	incf	_key^0,w,c
  1690   0014D2  A4D8               	btfss	status,2,c
  1691   0014D4  EF6E  F00A         	goto	u3681
  1692   0014D8  EF70  F00A         	goto	u3680
  1693   0014DC                     u3681:
  1694   0014DC  EFEF  F00A         	goto	l4322
  1695   0014E0                     u3680:
  1696   0014E0                     
  1697                           ;common.c: 194:         if (NEW_KEY == 5 && Event <= no_of_event - 1) {
  1698   0014E0  0E05               	movlw	5
  1699   0014E2  1856               	xorwf	_NEW_KEY^0,w,c
  1700   0014E4  A4D8               	btfss	status,2,c
  1701   0014E6  EF77  F00A         	goto	u3691
  1702   0014EA  EF79  F00A         	goto	u3690
  1703   0014EE                     u3691:
  1704   0014EE  EFB1  F00A         	goto	l4306
  1705   0014F2                     u3690:
  1706   0014F2  0EFF               	movlw	255
  1707   0014F4  245A               	addwf	_no_of_event^0,w,c
  1708   0014F6  6E0A               	movwf	??_view_log^0,c
  1709   0014F8  0EFF               	movlw	255
  1710   0014FA  205B               	addwfc	(_no_of_event+1)^0,w,c
  1711   0014FC  6E0B               	movwf	(??_view_log+1)^0,c
  1712   0014FE  0100               	movlb	0	; () banked
  1713   001500  51AD               	movf	_Event& (0+255),w,b
  1714   001502  5C0A               	subwf	??_view_log^0,w,c
  1715   001504  51AE               	movf	(_Event+1)& (0+255),w,b
  1716   001506  580B               	subwfb	(??_view_log+1)^0,w,c
  1717   001508  A0D8               	btfss	status,0,c
  1718   00150A  EF89  F00A         	goto	u3701
  1719   00150E  EF8B  F00A         	goto	u3700
  1720   001512                     u3701:
  1721   001512  EFB1  F00A         	goto	l4306
  1722   001516                     u3700:
  1723   001516                     
  1724                           ; BSR set to: 0
  1725                           ;common.c: 195:             if (Event == no_of_event - 1) {
  1726   001516  0EFF               	movlw	255
  1727   001518  245A               	addwf	_no_of_event^0,w,c
  1728   00151A  6E0A               	movwf	??_view_log^0,c
  1729   00151C  0EFF               	movlw	255
  1730   00151E  205B               	addwfc	(_no_of_event+1)^0,w,c
  1731   001520  6E0B               	movwf	(??_view_log+1)^0,c
  1732   001522  51AD               	movf	_Event& (0+255),w,b
  1733   001524  180A               	xorwf	??_view_log^0,w,c
  1734   001526  E107               	bnz	u3711
  1735   001528  51AE               	movf	(_Event+1)& (0+255),w,b
  1736   00152A  180B               	xorwf	(??_view_log+1)^0,w,c
  1737   00152C  A4D8               	btfss	status,2,c
  1738   00152E  EF9B  F00A         	goto	u3711
  1739   001532  EF9D  F00A         	goto	u3710
  1740   001536                     u3711:
  1741   001536  EFA7  F00A         	goto	l4302
  1742   00153A                     u3710:
  1743   00153A                     
  1744                           ; BSR set to: 0
  1745                           ;common.c: 196:                 Event = 0;
  1746   00153A  0E00               	movlw	0
  1747   00153C  6FAE               	movwf	(_Event+1)& (0+255),b
  1748   00153E  0E00               	movlw	0
  1749   001540  6FAD               	movwf	_Event& (0+255),b
  1750                           
  1751                           ;common.c: 197:                 f = 0x00;
  1752   001542  0E00               	movlw	0
  1753   001544  6E48               	movwf	(_f+1)^0,c
  1754   001546  0E00               	movlw	0
  1755   001548  6E47               	movwf	_f^0,c
  1756                           
  1757                           ;common.c: 198:             } else {
  1758   00154A  EFE5  F00A         	goto	l4318
  1759   00154E                     l4302:
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;common.c: 199:                 ++Event;
  1763   00154E  4BAD               	infsnz	_Event& (0+255),f,b
  1764   001550  2BAE               	incf	(_Event+1)& (0+255),f,b
  1765   001552                     
  1766                           ; BSR set to: 0
  1767                           ;common.c: 200:                 f = f + 11;
  1768   001552  0E0B               	movlw	11
  1769   001554  2447               	addwf	_f^0,w,c
  1770   001556  6E47               	movwf	_f^0,c
  1771   001558  0E00               	movlw	0
  1772   00155A  2048               	addwfc	(_f+1)^0,w,c
  1773   00155C  6E48               	movwf	(_f+1)^0,c
  1774   00155E  EFE5  F00A         	goto	l4318
  1775   001562                     l4306:
  1776   001562  0E06               	movlw	6
  1777   001564  1856               	xorwf	_NEW_KEY^0,w,c
  1778   001566  A4D8               	btfss	status,2,c
  1779   001568  EFB8  F00A         	goto	u3721
  1780   00156C  EFBA  F00A         	goto	u3720
  1781   001570                     u3721:
  1782   001570  EFE5  F00A         	goto	l4318
  1783   001574                     u3720:
  1784   001574                     
  1785                           ;common.c: 204:             if (Event == 0) {
  1786   001574  0100               	movlb	0	; () banked
  1787   001576  51AD               	movf	_Event& (0+255),w,b
  1788   001578  11AE               	iorwf	(_Event+1)& (0+255),w,b
  1789   00157A  A4D8               	btfss	status,2,c
  1790   00157C  EFC2  F00A         	goto	u3731
  1791   001580  EFC4  F00A         	goto	u3730
  1792   001584                     u3731:
  1793   001584  EFDC  F00A         	goto	l4314
  1794   001588                     u3730:
  1795   001588                     
  1796                           ; BSR set to: 0
  1797                           ;common.c: 205:                 Event = no_of_event - 1;
  1798   001588  0EFF               	movlw	255
  1799   00158A  245A               	addwf	_no_of_event^0,w,c
  1800   00158C  6FAD               	movwf	_Event& (0+255),b
  1801   00158E  0EFF               	movlw	255
  1802   001590  205B               	addwfc	(_no_of_event+1)^0,w,c
  1803   001592  6FAE               	movwf	(_Event+1)& (0+255),b
  1804   001594                     
  1805                           ; BSR set to: 0
  1806                           ;common.c: 206:                 f = 0x0B * (no_of_event - 1);
  1807   001594  0EFF               	movlw	255
  1808   001596  245A               	addwf	_no_of_event^0,w,c
  1809   001598  6E01               	movwf	___wmul@multiplier^0,c
  1810   00159A  0EFF               	movlw	255
  1811   00159C  205B               	addwfc	(_no_of_event+1)^0,w,c
  1812   00159E  6E02               	movwf	(___wmul@multiplier+1)^0,c
  1813   0015A0  0E00               	movlw	0
  1814   0015A2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1815   0015A4  0E0B               	movlw	11
  1816   0015A6  6E03               	movwf	___wmul@multiplicand^0,c
  1817   0015A8  EC87  F015         	call	___wmul	;wreg free
  1818   0015AC  C001  F047         	movff	?___wmul,_f
  1819   0015B0  C002  F048         	movff	?___wmul+1,_f+1
  1820                           
  1821                           ;common.c: 207:             } else {
  1822   0015B4  EFE5  F00A         	goto	l4318
  1823   0015B8                     l4314:
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;common.c: 208:                 --Event;
  1827   0015B8  07AD               	decf	_Event& (0+255),f,b
  1828   0015BA  A0D8               	btfss	status,0,c
  1829   0015BC  07AE               	decf	(_Event+1)& (0+255),f,b
  1830   0015BE                     
  1831                           ; BSR set to: 0
  1832                           ;common.c: 209:                 f = f - 11;
  1833   0015BE  0EF5               	movlw	245
  1834   0015C0  2447               	addwf	_f^0,w,c
  1835   0015C2  6E47               	movwf	_f^0,c
  1836   0015C4  0EFF               	movlw	255
  1837   0015C6  2048               	addwfc	(_f+1)^0,w,c
  1838   0015C8  6E48               	movwf	(_f+1)^0,c
  1839   0015CA                     l4318:
  1840                           
  1841                           ;common.c: 212:         delay = 0;
  1842   0015CA  0E00               	movlw	0
  1843   0015CC  6E39               	movwf	_delay^0,c
  1844   0015CE  0E00               	movlw	0
  1845   0015D0  6E3A               	movwf	(_delay+1)^0,c
  1846   0015D2  0E00               	movlw	0
  1847   0015D4  6E3B               	movwf	(_delay+2)^0,c
  1848   0015D6  0E00               	movlw	0
  1849   0015D8  6E3C               	movwf	(_delay+3)^0,c
  1850   0015DA                     
  1851                           ;common.c: 213:         NEW_KEY = 0;
  1852   0015DA  0E00               	movlw	0
  1853   0015DC  6E56               	movwf	_NEW_KEY^0,c
  1854   0015DE                     l4322:
  1855                           
  1856                           ;common.c: 215:     if (no_of_event > 0) {
  1857   0015DE  505A               	movf	_no_of_event^0,w,c
  1858   0015E0  105B               	iorwf	(_no_of_event+1)^0,w,c
  1859   0015E2  B4D8               	btfsc	status,2,c
  1860   0015E4  EFF6  F00A         	goto	u3741
  1861   0015E8  EFF8  F00A         	goto	u3740
  1862   0015EC                     u3741:
  1863   0015EC  EF6E  F00B         	goto	l4358
  1864   0015F0                     u3740:
  1865   0015F0                     
  1866                           ;common.c: 216:         print[0] = read_external_eeprom(0x00 + f);
  1867   0015F0  5047               	movf	_f^0,w,c
  1868   0015F2  EC72  F015         	call	_read_external_eeprom
  1869   0015F6  0100               	movlb	0	; () banked
  1870   0015F8  6FC0               	movwf	_print& (0+255),b
  1871   0015FA                     
  1872                           ; BSR set to: 0
  1873                           ;common.c: 217:         print[1] = read_external_eeprom(0x01 + f);
  1874   0015FA  2847               	incf	_f^0,w,c
  1875   0015FC  EC72  F015         	call	_read_external_eeprom
  1876   001600  0100               	movlb	0	; () banked
  1877   001602  6FC1               	movwf	(_print+1)& (0+255),b
  1878   001604                     
  1879                           ; BSR set to: 0
  1880                           ;common.c: 218:         print[2] = read_external_eeprom(0x02 + f);
  1881   001604  5047               	movf	_f^0,w,c
  1882   001606  0F02               	addlw	2
  1883   001608  EC72  F015         	call	_read_external_eeprom
  1884   00160C  0100               	movlb	0	; () banked
  1885   00160E  6FC2               	movwf	(_print+2)& (0+255),b
  1886   001610                     
  1887                           ; BSR set to: 0
  1888                           ;common.c: 219:         print[3] = read_external_eeprom(0x03 + f);
  1889   001610  5047               	movf	_f^0,w,c
  1890   001612  0F03               	addlw	3
  1891   001614  EC72  F015         	call	_read_external_eeprom
  1892   001618  0100               	movlb	0	; () banked
  1893   00161A  6FC3               	movwf	(_print+3)& (0+255),b
  1894   00161C                     
  1895                           ; BSR set to: 0
  1896                           ;common.c: 220:         print[4] = read_external_eeprom(0x04 + f);
  1897   00161C  5047               	movf	_f^0,w,c
  1898   00161E  0F04               	addlw	4
  1899   001620  EC72  F015         	call	_read_external_eeprom
  1900   001624  0100               	movlb	0	; () banked
  1901   001626  6FC4               	movwf	(_print+4)& (0+255),b
  1902   001628                     
  1903                           ; BSR set to: 0
  1904                           ;common.c: 221:         print[5] = read_external_eeprom(0x05 + f);
  1905   001628  5047               	movf	_f^0,w,c
  1906   00162A  0F05               	addlw	5
  1907   00162C  EC72  F015         	call	_read_external_eeprom
  1908   001630  0100               	movlb	0	; () banked
  1909   001632  6FC5               	movwf	(_print+5)& (0+255),b
  1910   001634                     
  1911                           ; BSR set to: 0
  1912                           ;common.c: 222:         print[6] = read_external_eeprom(0x06 + f);
  1913   001634  5047               	movf	_f^0,w,c
  1914   001636  0F06               	addlw	6
  1915   001638  EC72  F015         	call	_read_external_eeprom
  1916   00163C  0100               	movlb	0	; () banked
  1917   00163E  6FC6               	movwf	(_print+6)& (0+255),b
  1918   001640                     
  1919                           ; BSR set to: 0
  1920                           ;common.c: 223:         print[7] = read_external_eeprom(0x07 + f);
  1921   001640  5047               	movf	_f^0,w,c
  1922   001642  0F07               	addlw	7
  1923   001644  EC72  F015         	call	_read_external_eeprom
  1924   001648  0100               	movlb	0	; () banked
  1925   00164A  6FC7               	movwf	(_print+7)& (0+255),b
  1926   00164C                     
  1927                           ; BSR set to: 0
  1928                           ;common.c: 224:         print[8] = ' ';
  1929   00164C  0E20               	movlw	32
  1930   00164E  6FC8               	movwf	(_print+8)& (0+255),b
  1931   001650                     
  1932                           ; BSR set to: 0
  1933                           ;common.c: 225:         print[9] = read_external_eeprom(0x08 + f);
  1934   001650  5047               	movf	_f^0,w,c
  1935   001652  0F08               	addlw	8
  1936   001654  EC72  F015         	call	_read_external_eeprom
  1937   001658  0100               	movlb	0	; () banked
  1938   00165A  6FC9               	movwf	(_print+9)& (0+255),b
  1939   00165C                     
  1940                           ; BSR set to: 0
  1941                           ;common.c: 226:         print[10] = read_external_eeprom(0X09 + f);
  1942   00165C  5047               	movf	_f^0,w,c
  1943   00165E  0F09               	addlw	9
  1944   001660  EC72  F015         	call	_read_external_eeprom
  1945   001664  0100               	movlb	0	; () banked
  1946   001666  6FCA               	movwf	(_print+10)& (0+255),b
  1947   001668                     
  1948                           ; BSR set to: 0
  1949                           ;common.c: 227:         print[11] = '\0';
  1950   001668  0E00               	movlw	0
  1951   00166A  6FCB               	movwf	(_print+11)& (0+255),b
  1952   00166C                     
  1953                           ; BSR set to: 0
  1954                           ;common.c: 228:         pk = read_external_eeprom(0x0A + f);
  1955   00166C  5047               	movf	_f^0,w,c
  1956   00166E  0F0A               	addlw	10
  1957   001670  EC72  F015         	call	_read_external_eeprom
  1958   001674  6E0A               	movwf	??_view_log^0,c
  1959   001676  500A               	movf	??_view_log^0,w,c
  1960   001678  0100               	movlb	0	; () banked
  1961   00167A  6FAF               	movwf	_pk& (0+255),b
  1962   00167C  6BB0               	clrf	(_pk+1)& (0+255),b
  1963   00167E                     
  1964                           ; BSR set to: 0
  1965                           ;common.c: 230:         clcd_putch(Event + '0', (0xC0 + (0)));
  1966   00167E  0EC0               	movlw	192
  1967   001680  6E08               	movwf	clcd_putch@addr^0,c
  1968   001682  51AD               	movf	_Event& (0+255),w,b
  1969   001684  0F30               	addlw	48
  1970   001686  ECDC  F015         	call	_clcd_putch
  1971   00168A                     
  1972                           ;common.c: 231:         clcd_print(print, (0xC0 + (2)));
  1973   00168A  0EC0               	movlw	low _print
  1974   00168C  6E07               	movwf	clcd_print@data^0,c
  1975   00168E  6A08               	clrf	(clcd_print@data+1)^0,c
  1976   001690  0EC2               	movlw	194
  1977   001692  6E09               	movwf	clcd_print@addr^0,c
  1978   001694  EC06  F014         	call	_clcd_print	;wreg free
  1979   001698                     
  1980                           ;common.c: 232:         clcd_putch((pk / 10) + '0', (0xC0 + (14)));
  1981   001698  0ECE               	movlw	206
  1982   00169A  6E08               	movwf	clcd_putch@addr^0,c
  1983   00169C  C0AF  F001         	movff	_pk,___lwdiv@dividend
  1984   0016A0  C0B0  F002         	movff	_pk+1,___lwdiv@dividend+1
  1985   0016A4  0E00               	movlw	0
  1986   0016A6  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1987   0016A8  0E0A               	movlw	10
  1988   0016AA  6E03               	movwf	___lwdiv@divisor^0,c
  1989   0016AC  ECCC  F013         	call	___lwdiv	;wreg free
  1990   0016B0  5001               	movf	?___lwdiv^0,w,c
  1991   0016B2  0F30               	addlw	48
  1992   0016B4  ECDC  F015         	call	_clcd_putch
  1993   0016B8                     
  1994                           ;common.c: 233:         clcd_putch((pk % 10) + '0', (0xC0 + (15)));
  1995   0016B8  0ECF               	movlw	207
  1996   0016BA  6E08               	movwf	clcd_putch@addr^0,c
  1997   0016BC  C0AF  F001         	movff	_pk,___lwmod@dividend
  1998   0016C0  C0B0  F002         	movff	_pk+1,___lwmod@dividend+1
  1999   0016C4  0E00               	movlw	0
  2000   0016C6  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2001   0016C8  0E0A               	movlw	10
  2002   0016CA  6E03               	movwf	___lwmod@divisor^0,c
  2003   0016CC  EC3C  F014         	call	___lwmod	;wreg free
  2004   0016D0  5001               	movf	?___lwmod^0,w,c
  2005   0016D2  0F30               	addlw	48
  2006   0016D4  ECDC  F015         	call	_clcd_putch
  2007                           
  2008                           ;common.c: 234:     } else {
  2009   0016D8  EF76  F00B         	goto	l4360
  2010   0016DC                     l4358:
  2011                           
  2012                           ;common.c: 235:         clcd_print("NO EVENT's", (0xC0 + (3)));
  2013   0016DC  0ECA               	movlw	low STR_11
  2014   0016DE  6E07               	movwf	clcd_print@data^0,c
  2015   0016E0  0E2F               	movlw	high STR_11
  2016   0016E2  6E08               	movwf	(clcd_print@data+1)^0,c
  2017   0016E4  0EC3               	movlw	195
  2018   0016E6  6E09               	movwf	clcd_print@addr^0,c
  2019   0016E8  EC06  F014         	call	_clcd_print	;wreg free
  2020   0016EC                     l4360:
  2021                           
  2022                           ;common.c: 237:     if (delay >= 500) {
  2023   0016EC  503C               	movf	(_delay+3)^0,w,c
  2024   0016EE  103B               	iorwf	(_delay+2)^0,w,c
  2025   0016F0  E10B               	bnz	u3750
  2026   0016F2  0EF4               	movlw	244
  2027   0016F4  5C39               	subwf	_delay^0,w,c
  2028   0016F6  0E01               	movlw	1
  2029   0016F8  583A               	subwfb	(_delay+1)^0,w,c
  2030   0016FA  A0D8               	btfss	status,0,c
  2031   0016FC  EF82  F00B         	goto	u3751
  2032   001700  EF84  F00B         	goto	u3750
  2033   001704                     u3751:
  2034   001704  EFA2  F00B         	goto	l436
  2035   001708                     u3750:
  2036   001708                     
  2037                           ;common.c: 238:         clcd_write(0x01, 0);
  2038   001708  0E00               	movlw	0
  2039   00170A  6E01               	movwf	clcd_write@control_bit^0,c
  2040   00170C  0E01               	movlw	1
  2041   00170E  EC25  F015         	call	_clcd_write
  2042   001712                     
  2043                           ;common.c: 239:         SCREEN_FLAG = 0;
  2044   001712  0E00               	movlw	0
  2045   001714  6E52               	movwf	(_SCREEN_FLAG+1)^0,c
  2046   001716  0E00               	movlw	0
  2047   001718  6E51               	movwf	_SCREEN_FLAG^0,c
  2048   00171A                     
  2049                           ;common.c: 240:         delay = 0;
  2050   00171A  0E00               	movlw	0
  2051   00171C  6E39               	movwf	_delay^0,c
  2052   00171E  0E00               	movlw	0
  2053   001720  6E3A               	movwf	(_delay+1)^0,c
  2054   001722  0E00               	movlw	0
  2055   001724  6E3B               	movwf	(_delay+2)^0,c
  2056   001726  0E00               	movlw	0
  2057   001728  6E3C               	movwf	(_delay+3)^0,c
  2058   00172A                     
  2059                           ;common.c: 241:         flag = 1;
  2060   00172A  0E01               	movlw	1
  2061   00172C  0100               	movlb	0	; () banked
  2062   00172E  6FEF               	movwf	_flag& (0+255),b
  2063   001730                     
  2064                           ; BSR set to: 0
  2065                           ;common.c: 242:         NEW_KEY = 0;
  2066   001730  0E00               	movlw	0
  2067   001732  6E56               	movwf	_NEW_KEY^0,c
  2068   001734                     
  2069                           ; BSR set to: 0
  2070                           ;common.c: 243:         MENU_FLAG = 0;
  2071   001734  0E00               	movlw	0
  2072   001736  6E50               	movwf	(_MENU_FLAG+1)^0,c
  2073   001738  0E00               	movlw	0
  2074   00173A  6E4F               	movwf	_MENU_FLAG^0,c
  2075   00173C                     
  2076                           ; BSR set to: 0
  2077                           ;common.c: 244:         f = 0x00;
  2078   00173C  0E00               	movlw	0
  2079   00173E  6E48               	movwf	(_f+1)^0,c
  2080   001740  0E00               	movlw	0
  2081   001742  6E47               	movwf	_f^0,c
  2082   001744                     l436:
  2083   001744  0012               	return		;funcret
  2084   001746                     __end_of_view_log:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _set_time *****************
  2088 ;; Defined at:
  2089 ;;		line 319 in file "common.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  key             1    wreg     unsigned char 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;  key             1   33[COMRAM] unsigned char 
  2094 ;;  y               4   29[COMRAM] unsigned long 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      void 
  2097 ;; Registers used:
  2098 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2104 ;;      Params:         0       0       0       0       0       0       0
  2105 ;;      Locals:         5       0       0       0       0       0       0
  2106 ;;      Temps:          2       0       0       0       0       0       0
  2107 ;;      Totals:         7       0       0       0       0       0       0
  2108 ;;Total ram usage:        7 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 7
  2111 ;; This function calls:
  2112 ;;		___awdiv
  2113 ;;		___awmod
  2114 ;;		_clcd_print
  2115 ;;		_clcd_write
  2116 ;;		_read_ds1307
  2117 ;;		_store_event_in_eeprom
  2118 ;;		_write_ds1307
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text2
  2125   000012                     __ptext2:
  2126                           	callstack 0
  2127   000012                     _set_time:
  2128                           	callstack 23
  2129                           
  2130                           ;incstack = 0
  2131                           ;set_time@key stored from wreg
  2132   000012  6E22               	movwf	set_time@key^0,c
  2133   000014                     
  2134                           ;common.c: 320:     if (key == 5 || key == 6) {
  2135   000014  0E05               	movlw	5
  2136   000016  1822               	xorwf	set_time@key^0,w,c
  2137   000018  B4D8               	btfsc	status,2,c
  2138   00001A  EF11  F000         	goto	u3811
  2139   00001E  EF13  F000         	goto	u3810
  2140   000022                     u3811:
  2141   000022  EF1C  F000         	goto	l4476
  2142   000026                     u3810:
  2143   000026  0E06               	movlw	6
  2144   000028  1822               	xorwf	set_time@key^0,w,c
  2145   00002A  A4D8               	btfss	status,2,c
  2146   00002C  EF1A  F000         	goto	u3821
  2147   000030  EF1C  F000         	goto	u3820
  2148   000034                     u3821:
  2149   000034  EF24  F000         	goto	l479
  2150   000038                     u3820:
  2151   000038                     l4476:
  2152                           
  2153                           ;common.c: 321:         delay++;
  2154   000038  0E01               	movlw	1
  2155   00003A  2639               	addwf	_delay^0,f,c
  2156   00003C  0E00               	movlw	0
  2157   00003E  223A               	addwfc	(_delay+1)^0,f,c
  2158   000040  223B               	addwfc	(_delay+2)^0,f,c
  2159   000042  223C               	addwfc	(_delay+3)^0,f,c
  2160   000044                     
  2161                           ;common.c: 322:         NEW_KEY = key;
  2162   000044  C022  F056         	movff	set_time@key,_NEW_KEY
  2163   000048                     l479:
  2164                           
  2165                           ;common.c: 324:     if (delay < 500 && key == 0xFF) {
  2166   000048  503C               	movf	(_delay+3)^0,w,c
  2167   00004A  103B               	iorwf	(_delay+2)^0,w,c
  2168   00004C  E109               	bnz	u3831
  2169   00004E  0EF4               	movlw	244
  2170   000050  5C39               	subwf	_delay^0,w,c
  2171   000052  0E01               	movlw	1
  2172   000054  583A               	subwfb	(_delay+1)^0,w,c
  2173   000056  B0D8               	btfsc	status,0,c
  2174   000058  EF30  F000         	goto	u3831
  2175   00005C  EF32  F000         	goto	u3830
  2176   000060                     u3831:
  2177   000060  EF0B  F001         	goto	l4532
  2178   000064                     u3830:
  2179   000064  2822               	incf	set_time@key^0,w,c
  2180   000066  A4D8               	btfss	status,2,c
  2181   000068  EF38  F000         	goto	u3841
  2182   00006C  EF3A  F000         	goto	u3840
  2183   000070                     u3841:
  2184   000070  EF0B  F001         	goto	l4532
  2185   000074                     u3840:
  2186   000074                     
  2187                           ;common.c: 325:         if (NEW_KEY == 6) {
  2188   000074  0E06               	movlw	6
  2189   000076  1856               	xorwf	_NEW_KEY^0,w,c
  2190   000078  A4D8               	btfss	status,2,c
  2191   00007A  EF41  F000         	goto	u3851
  2192   00007E  EF43  F000         	goto	u3850
  2193   000082                     u3851:
  2194   000082  EFD2  F000         	goto	l4520
  2195   000086                     u3850:
  2196   000086                     
  2197                           ;common.c: 326:             if (FILED == 1) {
  2198   000086  0441               	decf	_FILED^0,w,c
  2199   000088  1042               	iorwf	(_FILED+1)^0,w,c
  2200   00008A  A4D8               	btfss	status,2,c
  2201   00008C  EF4A  F000         	goto	u3861
  2202   000090  EF4C  F000         	goto	u3860
  2203   000094                     u3861:
  2204   000094  EF72  F000         	goto	l4496
  2205   000098                     u3860:
  2206   000098                     
  2207                           ;common.c: 327:                 ++second;
  2208   000098  2A53               	incf	_second^0,f,c
  2209   00009A                     
  2210                           ;common.c: 328:                 if (second == 60) {
  2211   00009A  0E3C               	movlw	60
  2212   00009C  1853               	xorwf	_second^0,w,c
  2213   00009E  A4D8               	btfss	status,2,c
  2214   0000A0  EF54  F000         	goto	u3871
  2215   0000A4  EF56  F000         	goto	u3870
  2216   0000A8                     u3871:
  2217   0000A8  EF58  F000         	goto	l4492
  2218   0000AC                     u3870:
  2219   0000AC                     
  2220                           ;common.c: 329:                     second = 0;
  2221   0000AC  0E00               	movlw	0
  2222   0000AE  6E53               	movwf	_second^0,c
  2223   0000B0                     l4492:
  2224                           
  2225                           ;common.c: 331:                 change_Time[6] = second / 10 + '0';
  2226   0000B0  C053  F001         	movff	_second,___awdiv@dividend
  2227   0000B4  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2228   0000B6  0E00               	movlw	0
  2229   0000B8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2230   0000BA  0E0A               	movlw	10
  2231   0000BC  6E03               	movwf	___awdiv@divisor^0,c
  2232   0000BE  EC78  F011         	call	___awdiv	;wreg free
  2233   0000C2  5001               	movf	?___awdiv^0,w,c
  2234   0000C4  0F30               	addlw	48
  2235   0000C6  0100               	movlb	0	; () banked
  2236   0000C8  6FF6               	movwf	(_change_Time+6)& (0+255),b
  2237   0000CA                     
  2238                           ; BSR set to: 0
  2239                           ;common.c: 332:                 change_Time[7] = second % 10 + '0';
  2240   0000CA  C053  F001         	movff	_second,___awmod@dividend
  2241   0000CE  6A02               	clrf	(___awmod@dividend+1)^0,c
  2242   0000D0  0E00               	movlw	0
  2243   0000D2  6E04               	movwf	(___awmod@divisor+1)^0,c
  2244   0000D4  0E0A               	movlw	10
  2245   0000D6  6E03               	movwf	___awmod@divisor^0,c
  2246   0000D8  ECDA  F011         	call	___awmod	;wreg free
  2247   0000DC  5001               	movf	?___awmod^0,w,c
  2248   0000DE  0F30               	addlw	48
  2249   0000E0  0100               	movlb	0	; () banked
  2250   0000E2  6FF7               	movwf	(_change_Time+7)& (0+255),b
  2251   0000E4                     l4496:
  2252                           
  2253                           ;common.c: 334:             if (FILED == 2) {
  2254   0000E4  0E02               	movlw	2
  2255   0000E6  1841               	xorwf	_FILED^0,w,c
  2256   0000E8  1042               	iorwf	(_FILED+1)^0,w,c
  2257   0000EA  A4D8               	btfss	status,2,c
  2258   0000EC  EF7A  F000         	goto	u3881
  2259   0000F0  EF7C  F000         	goto	u3880
  2260   0000F4                     u3881:
  2261   0000F4  EFA2  F000         	goto	l4508
  2262   0000F8                     u3880:
  2263   0000F8                     
  2264                           ;common.c: 335:                 ++min;
  2265   0000F8  2A55               	incf	_min^0,f,c
  2266   0000FA                     
  2267                           ;common.c: 336:                 if (min == 60) {
  2268   0000FA  0E3C               	movlw	60
  2269   0000FC  1855               	xorwf	_min^0,w,c
  2270   0000FE  A4D8               	btfss	status,2,c
  2271   000100  EF84  F000         	goto	u3891
  2272   000104  EF86  F000         	goto	u3890
  2273   000108                     u3891:
  2274   000108  EF88  F000         	goto	l4504
  2275   00010C                     u3890:
  2276   00010C                     
  2277                           ;common.c: 337:                     min = 0;
  2278   00010C  0E00               	movlw	0
  2279   00010E  6E55               	movwf	_min^0,c
  2280   000110                     l4504:
  2281                           
  2282                           ;common.c: 339:                 change_Time[3] = min / 10 + '0';
  2283   000110  C055  F001         	movff	_min,___awdiv@dividend
  2284   000114  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2285   000116  0E00               	movlw	0
  2286   000118  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2287   00011A  0E0A               	movlw	10
  2288   00011C  6E03               	movwf	___awdiv@divisor^0,c
  2289   00011E  EC78  F011         	call	___awdiv	;wreg free
  2290   000122  5001               	movf	?___awdiv^0,w,c
  2291   000124  0F30               	addlw	48
  2292   000126  0100               	movlb	0	; () banked
  2293   000128  6FF3               	movwf	(_change_Time+3)& (0+255),b
  2294   00012A                     
  2295                           ; BSR set to: 0
  2296                           ;common.c: 340:                 change_Time[4] = min % 10 + '0';
  2297   00012A  C055  F001         	movff	_min,___awmod@dividend
  2298   00012E  6A02               	clrf	(___awmod@dividend+1)^0,c
  2299   000130  0E00               	movlw	0
  2300   000132  6E04               	movwf	(___awmod@divisor+1)^0,c
  2301   000134  0E0A               	movlw	10
  2302   000136  6E03               	movwf	___awmod@divisor^0,c
  2303   000138  ECDA  F011         	call	___awmod	;wreg free
  2304   00013C  5001               	movf	?___awmod^0,w,c
  2305   00013E  0F30               	addlw	48
  2306   000140  0100               	movlb	0	; () banked
  2307   000142  6FF4               	movwf	(_change_Time+4)& (0+255),b
  2308   000144                     l4508:
  2309                           
  2310                           ;common.c: 342:             if (FILED == 3) {
  2311   000144  0E03               	movlw	3
  2312   000146  1841               	xorwf	_FILED^0,w,c
  2313   000148  1042               	iorwf	(_FILED+1)^0,w,c
  2314   00014A  A4D8               	btfss	status,2,c
  2315   00014C  EFAA  F000         	goto	u3901
  2316   000150  EFAC  F000         	goto	u3900
  2317   000154                     u3901:
  2318   000154  EFD2  F000         	goto	l4520
  2319   000158                     u3900:
  2320   000158                     
  2321                           ;common.c: 343:                 ++hour;
  2322   000158  2A54               	incf	_hour^0,f,c
  2323   00015A                     
  2324                           ;common.c: 344:                 if (hour == 24) {
  2325   00015A  0E18               	movlw	24
  2326   00015C  1854               	xorwf	_hour^0,w,c
  2327   00015E  A4D8               	btfss	status,2,c
  2328   000160  EFB4  F000         	goto	u3911
  2329   000164  EFB6  F000         	goto	u3910
  2330   000168                     u3911:
  2331   000168  EFB8  F000         	goto	l4516
  2332   00016C                     u3910:
  2333   00016C                     
  2334                           ;common.c: 345:                     hour = 0;
  2335   00016C  0E00               	movlw	0
  2336   00016E  6E54               	movwf	_hour^0,c
  2337   000170                     l4516:
  2338                           
  2339                           ;common.c: 347:                 change_Time[0] = hour / 10 + '0';
  2340   000170  C054  F001         	movff	_hour,___awdiv@dividend
  2341   000174  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2342   000176  0E00               	movlw	0
  2343   000178  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2344   00017A  0E0A               	movlw	10
  2345   00017C  6E03               	movwf	___awdiv@divisor^0,c
  2346   00017E  EC78  F011         	call	___awdiv	;wreg free
  2347   000182  5001               	movf	?___awdiv^0,w,c
  2348   000184  0F30               	addlw	48
  2349   000186  0100               	movlb	0	; () banked
  2350   000188  6FF0               	movwf	_change_Time& (0+255),b
  2351   00018A                     
  2352                           ; BSR set to: 0
  2353                           ;common.c: 348:                 change_Time[1] = hour % 10 + '0';
  2354   00018A  C054  F001         	movff	_hour,___awmod@dividend
  2355   00018E  6A02               	clrf	(___awmod@dividend+1)^0,c
  2356   000190  0E00               	movlw	0
  2357   000192  6E04               	movwf	(___awmod@divisor+1)^0,c
  2358   000194  0E0A               	movlw	10
  2359   000196  6E03               	movwf	___awmod@divisor^0,c
  2360   000198  ECDA  F011         	call	___awmod	;wreg free
  2361   00019C  5001               	movf	?___awmod^0,w,c
  2362   00019E  0F30               	addlw	48
  2363   0001A0  0100               	movlb	0	; () banked
  2364   0001A2  6FF1               	movwf	(_change_Time+1)& (0+255),b
  2365   0001A4                     l4520:
  2366                           
  2367                           ;common.c: 351:         if (NEW_KEY == 5 && FILED < 3) {
  2368   0001A4  0E05               	movlw	5
  2369   0001A6  1856               	xorwf	_NEW_KEY^0,w,c
  2370   0001A8  A4D8               	btfss	status,2,c
  2371   0001AA  EFD9  F000         	goto	u3921
  2372   0001AE  EFDB  F000         	goto	u3920
  2373   0001B2                     u3921:
  2374   0001B2  EFEA  F000         	goto	l4526
  2375   0001B6                     u3920:
  2376   0001B6  5042               	movf	(_FILED+1)^0,w,c
  2377   0001B8  E107               	bnz	u3931
  2378   0001BA  0E03               	movlw	3
  2379   0001BC  5C41               	subwf	_FILED^0,w,c
  2380   0001BE  B0D8               	btfsc	status,0,c
  2381   0001C0  EFE4  F000         	goto	u3931
  2382   0001C4  EFE6  F000         	goto	u3930
  2383   0001C8                     u3931:
  2384   0001C8  EFEA  F000         	goto	l4526
  2385   0001CC                     u3930:
  2386   0001CC                     
  2387                           ;common.c: 352:             FILED++;
  2388   0001CC  4A41               	infsnz	_FILED^0,f,c
  2389   0001CE  2A42               	incf	(_FILED+1)^0,f,c
  2390                           
  2391                           ;common.c: 353:         } else if (NEW_KEY == 5 && FILED == 3) {
  2392   0001D0  EF01  F001         	goto	l491
  2393   0001D4                     l4526:
  2394   0001D4  0E05               	movlw	5
  2395   0001D6  1856               	xorwf	_NEW_KEY^0,w,c
  2396   0001D8  A4D8               	btfss	status,2,c
  2397   0001DA  EFF1  F000         	goto	u3941
  2398   0001DE  EFF3  F000         	goto	u3940
  2399   0001E2                     u3941:
  2400   0001E2  EF01  F001         	goto	l491
  2401   0001E6                     u3940:
  2402   0001E6  0E03               	movlw	3
  2403   0001E8  1841               	xorwf	_FILED^0,w,c
  2404   0001EA  1042               	iorwf	(_FILED+1)^0,w,c
  2405   0001EC  A4D8               	btfss	status,2,c
  2406   0001EE  EFFB  F000         	goto	u3951
  2407   0001F2  EFFD  F000         	goto	u3950
  2408   0001F6                     u3951:
  2409   0001F6  EF01  F001         	goto	l491
  2410   0001FA                     u3950:
  2411   0001FA                     
  2412                           ;common.c: 354:             FILED = 1;
  2413   0001FA  0E00               	movlw	0
  2414   0001FC  6E42               	movwf	(_FILED+1)^0,c
  2415   0001FE  0E01               	movlw	1
  2416   000200  6E41               	movwf	_FILED^0,c
  2417   000202                     l491:
  2418                           
  2419                           ;common.c: 356:         NEW_KEY = 0;
  2420   000202  0E00               	movlw	0
  2421   000204  6E56               	movwf	_NEW_KEY^0,c
  2422                           
  2423                           ;common.c: 357:         delay = 0;
  2424   000206  0E00               	movlw	0
  2425   000208  6E39               	movwf	_delay^0,c
  2426   00020A  0E00               	movlw	0
  2427   00020C  6E3A               	movwf	(_delay+1)^0,c
  2428   00020E  0E00               	movlw	0
  2429   000210  6E3B               	movwf	(_delay+2)^0,c
  2430   000212  0E00               	movlw	0
  2431   000214  6E3C               	movwf	(_delay+3)^0,c
  2432   000216                     l4532:
  2433                           
  2434                           ;common.c: 359:     if (blink_f) {
  2435   000216  0100               	movlb	0	; () banked
  2436   000218  51A9               	movf	_blink_f& (0+255),w,b
  2437   00021A  11AA               	iorwf	(_blink_f+1)& (0+255),w,b
  2438   00021C  B4D8               	btfsc	status,2,c
  2439   00021E  EF13  F001         	goto	u3961
  2440   000222  EF15  F001         	goto	u3960
  2441   000226                     u3961:
  2442   000226  EF1F  F001         	goto	l4538
  2443   00022A                     u3960:
  2444   00022A                     
  2445                           ; BSR set to: 0
  2446                           ;common.c: 360:         wait = 0;
  2447   00022A  0E00               	movlw	0
  2448   00022C  6FBC               	movwf	(_wait+1)& (0+255),b
  2449   00022E  0E00               	movlw	0
  2450   000230  6FBB               	movwf	_wait& (0+255),b
  2451   000232                     
  2452                           ; BSR set to: 0
  2453                           ;common.c: 361:         BLINK = FILED;
  2454   000232  C041  F0AB         	movff	_FILED,_BLINK
  2455   000236  C042  F0AC         	movff	_FILED+1,_BLINK+1
  2456                           
  2457                           ;common.c: 362:     } else {
  2458   00023A  EF23  F001         	goto	l4540
  2459   00023E                     l4538:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;common.c: 363:         BLINK = 0;
  2463   00023E  0E00               	movlw	0
  2464   000240  6FAC               	movwf	(_BLINK+1)& (0+255),b
  2465   000242  0E00               	movlw	0
  2466   000244  6FAB               	movwf	_BLINK& (0+255),b
  2467   000246                     l4540:
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;common.c: 365:     if (BLINK == 1) {
  2471   000246  05AB               	decf	_BLINK& (0+255),w,b
  2472   000248  11AC               	iorwf	(_BLINK+1)& (0+255),w,b
  2473   00024A  A4D8               	btfss	status,2,c
  2474   00024C  EF2A  F001         	goto	u3971
  2475   000250  EF2C  F001         	goto	u3970
  2476   000254                     u3971:
  2477   000254  EF36  F001         	goto	l4544
  2478   000258                     u3970:
  2479   000258                     
  2480                           ; BSR set to: 0
  2481                           ;common.c: 366:         clcd_print("  ", (0xC0 + (10)));
  2482   000258  0ECE               	movlw	low (STR_8+14)
  2483   00025A  6E07               	movwf	clcd_print@data^0,c
  2484   00025C  0E2E               	movlw	high (STR_8+14)
  2485   00025E  6E08               	movwf	(clcd_print@data+1)^0,c
  2486   000260  0ECA               	movlw	202
  2487   000262  6E09               	movwf	clcd_print@addr^0,c
  2488   000264  EC06  F014         	call	_clcd_print	;wreg free
  2489                           
  2490                           ;common.c: 367:     } else if (BLINK == 2) {
  2491   000268  EF65  F001         	goto	l496
  2492   00026C                     l4544:
  2493                           
  2494                           ; BSR set to: 0
  2495   00026C  0E02               	movlw	2
  2496   00026E  19AB               	xorwf	_BLINK& (0+255),w,b
  2497   000270  11AC               	iorwf	(_BLINK+1)& (0+255),w,b
  2498   000272  A4D8               	btfss	status,2,c
  2499   000274  EF3E  F001         	goto	u3981
  2500   000278  EF40  F001         	goto	u3980
  2501   00027C                     u3981:
  2502   00027C  EF4A  F001         	goto	l4548
  2503   000280                     u3980:
  2504   000280                     
  2505                           ; BSR set to: 0
  2506                           ;common.c: 368:         clcd_print("  ", (0xC0 + (7)));
  2507   000280  0ECE               	movlw	low (STR_8+14)
  2508   000282  6E07               	movwf	clcd_print@data^0,c
  2509   000284  0E2E               	movlw	high (STR_8+14)
  2510   000286  6E08               	movwf	(clcd_print@data+1)^0,c
  2511   000288  0EC7               	movlw	199
  2512   00028A  6E09               	movwf	clcd_print@addr^0,c
  2513   00028C  EC06  F014         	call	_clcd_print	;wreg free
  2514                           
  2515                           ;common.c: 369:     } else if (BLINK == 3) {
  2516   000290  EF65  F001         	goto	l496
  2517   000294                     l4548:
  2518                           
  2519                           ; BSR set to: 0
  2520   000294  0E03               	movlw	3
  2521   000296  19AB               	xorwf	_BLINK& (0+255),w,b
  2522   000298  11AC               	iorwf	(_BLINK+1)& (0+255),w,b
  2523   00029A  A4D8               	btfss	status,2,c
  2524   00029C  EF52  F001         	goto	u3991
  2525   0002A0  EF54  F001         	goto	u3990
  2526   0002A4                     u3991:
  2527   0002A4  EF5E  F001         	goto	l4552
  2528   0002A8                     u3990:
  2529   0002A8                     
  2530                           ; BSR set to: 0
  2531                           ;common.c: 370:         clcd_print("  ", (0xC0 + (4)));
  2532   0002A8  0ECE               	movlw	low (STR_8+14)
  2533   0002AA  6E07               	movwf	clcd_print@data^0,c
  2534   0002AC  0E2E               	movlw	high (STR_8+14)
  2535   0002AE  6E08               	movwf	(clcd_print@data+1)^0,c
  2536   0002B0  0EC4               	movlw	196
  2537   0002B2  6E09               	movwf	clcd_print@addr^0,c
  2538   0002B4  EC06  F014         	call	_clcd_print	;wreg free
  2539                           
  2540                           ;common.c: 371:     } else {
  2541   0002B8  EF65  F001         	goto	l496
  2542   0002BC                     l4552:
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;common.c: 372:         clcd_print(change_Time, (0xC0 + (4)));
  2546   0002BC  0EF0               	movlw	low _change_Time
  2547   0002BE  6E07               	movwf	clcd_print@data^0,c
  2548   0002C0  6A08               	clrf	(clcd_print@data+1)^0,c
  2549   0002C2  0EC4               	movlw	196
  2550   0002C4  6E09               	movwf	clcd_print@addr^0,c
  2551   0002C6  EC06  F014         	call	_clcd_print	;wreg free
  2552   0002CA                     l496:
  2553                           
  2554                           ;common.c: 374:     clcd_print("HH:MM:SS", (0x80 + (4)));
  2555   0002CA  0EE8               	movlw	low STR_24
  2556   0002CC  6E07               	movwf	clcd_print@data^0,c
  2557   0002CE  0E2F               	movlw	high STR_24
  2558   0002D0  6E08               	movwf	(clcd_print@data+1)^0,c
  2559   0002D2  0E84               	movlw	132
  2560   0002D4  6E09               	movwf	clcd_print@addr^0,c
  2561   0002D6  EC06  F014         	call	_clcd_print	;wreg free
  2562   0002DA                     
  2563                           ;common.c: 375:     if (delay > 500) {
  2564   0002DA  503C               	movf	(_delay+3)^0,w,c
  2565   0002DC  103B               	iorwf	(_delay+2)^0,w,c
  2566   0002DE  E10B               	bnz	u4000
  2567   0002E0  0EF5               	movlw	245
  2568   0002E2  5C39               	subwf	_delay^0,w,c
  2569   0002E4  0E01               	movlw	1
  2570   0002E6  583A               	subwfb	(_delay+1)^0,w,c
  2571   0002E8  A0D8               	btfss	status,0,c
  2572   0002EA  EF79  F001         	goto	u4001
  2573   0002EE  EF7B  F001         	goto	u4000
  2574   0002F2                     u4001:
  2575   0002F2  EF72  F002         	goto	l507
  2576   0002F6                     u4000:
  2577   0002F6                     
  2578                           ;common.c: 376:         if (NEW_KEY == 6) {
  2579   0002F6  0E06               	movlw	6
  2580   0002F8  1856               	xorwf	_NEW_KEY^0,w,c
  2581   0002FA  A4D8               	btfss	status,2,c
  2582   0002FC  EF82  F001         	goto	u4011
  2583   000300  EF84  F001         	goto	u4010
  2584   000304                     u4011:
  2585   000304  EFA2  F001         	goto	l4572
  2586   000308                     u4010:
  2587   000308                     
  2588                           ;common.c: 377:             clcd_write(0x01, 0);
  2589   000308  0E00               	movlw	0
  2590   00030A  6E01               	movwf	clcd_write@control_bit^0,c
  2591   00030C  0E01               	movlw	1
  2592   00030E  EC25  F015         	call	_clcd_write
  2593   000312                     
  2594                           ;common.c: 378:             MENU_FLAG = 0;
  2595   000312  0E00               	movlw	0
  2596   000314  6E50               	movwf	(_MENU_FLAG+1)^0,c
  2597   000316  0E00               	movlw	0
  2598   000318  6E4F               	movwf	_MENU_FLAG^0,c
  2599   00031A                     
  2600                           ;common.c: 379:             NEW_KEY = 0;
  2601   00031A  0E00               	movlw	0
  2602   00031C  6E56               	movwf	_NEW_KEY^0,c
  2603   00031E                     
  2604                           ;common.c: 380:             BLINK = 0;
  2605   00031E  0E00               	movlw	0
  2606   000320  0100               	movlb	0	; () banked
  2607   000322  6FAC               	movwf	(_BLINK+1)& (0+255),b
  2608   000324  0E00               	movlw	0
  2609   000326  6FAB               	movwf	_BLINK& (0+255),b
  2610   000328                     
  2611                           ; BSR set to: 0
  2612                           ;common.c: 381:             FILED = 0;
  2613   000328  0E00               	movlw	0
  2614   00032A  6E42               	movwf	(_FILED+1)^0,c
  2615   00032C  0E00               	movlw	0
  2616   00032E  6E41               	movwf	_FILED^0,c
  2617   000330                     
  2618                           ; BSR set to: 0
  2619                           ;common.c: 382:             flag = 1;
  2620   000330  0E01               	movlw	1
  2621   000332  6FEF               	movwf	_flag& (0+255),b
  2622   000334                     
  2623                           ; BSR set to: 0
  2624                           ;common.c: 383:             delay = 0;
  2625   000334  0E00               	movlw	0
  2626   000336  6E39               	movwf	_delay^0,c
  2627   000338  0E00               	movlw	0
  2628   00033A  6E3A               	movwf	(_delay+1)^0,c
  2629   00033C  0E00               	movlw	0
  2630   00033E  6E3B               	movwf	(_delay+2)^0,c
  2631   000340  0E00               	movlw	0
  2632   000342  6E3C               	movwf	(_delay+3)^0,c
  2633   000344                     l4572:
  2634                           
  2635                           ;common.c: 385:         if (NEW_KEY == 5) {
  2636   000344  0E05               	movlw	5
  2637   000346  1856               	xorwf	_NEW_KEY^0,w,c
  2638   000348  A4D8               	btfss	status,2,c
  2639   00034A  EFA9  F001         	goto	u4021
  2640   00034E  EFAB  F001         	goto	u4020
  2641   000352                     u4021:
  2642   000352  EF72  F002         	goto	l507
  2643   000356                     u4020:
  2644   000356                     
  2645                           ;common.c: 386:             clock_set[0] = read_ds1307(0x02);
  2646   000356  0E02               	movlw	2
  2647   000358  EC5D  F015         	call	_read_ds1307
  2648   00035C  0100               	movlb	0	; () banked
  2649   00035E  6F90               	movwf	_clock_set& (0+255),b
  2650                           
  2651                           ;common.c: 387:             clock_set[1] = read_ds1307(0x01);
  2652   000360  0E01               	movlw	1
  2653   000362  EC5D  F015         	call	_read_ds1307
  2654   000366  0100               	movlb	0	; () banked
  2655   000368  6F91               	movwf	(_clock_set+1)& (0+255),b
  2656                           
  2657                           ;common.c: 388:             clock_set[2] = read_ds1307(0x00);
  2658   00036A  0E00               	movlw	0
  2659   00036C  EC5D  F015         	call	_read_ds1307
  2660   000370  0100               	movlb	0	; () banked
  2661   000372  6F92               	movwf	(_clock_set+2)& (0+255),b
  2662   000374                     
  2663                           ; BSR set to: 0
  2664                           ;common.c: 389:             write_ds1307(0x02, ((clock_set[0] & 0x00) | ((hour / 10) << 
      +                          4) | (hour % 10)));
  2665   000374  C054  F001         	movff	_hour,___awmod@dividend
  2666   000378  6A02               	clrf	(___awmod@dividend+1)^0,c
  2667   00037A  0E00               	movlw	0
  2668   00037C  6E04               	movwf	(___awmod@divisor+1)^0,c
  2669   00037E  0E0A               	movlw	10
  2670   000380  6E03               	movwf	___awmod@divisor^0,c
  2671   000382  ECDA  F011         	call	___awmod	;wreg free
  2672   000386  C001  F01C         	movff	?___awmod,??_set_time
  2673   00038A  C002  F01D         	movff	?___awmod+1,??_set_time+1
  2674   00038E  C054  F001         	movff	_hour,___awdiv@dividend
  2675   000392  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2676   000394  0E00               	movlw	0
  2677   000396  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2678   000398  0E0A               	movlw	10
  2679   00039A  6E03               	movwf	___awdiv@divisor^0,c
  2680   00039C  EC78  F011         	call	___awdiv	;wreg free
  2681   0003A0  3801               	swapf	?___awdiv^0,w,c
  2682   0003A2  0BF0               	andlw	240
  2683   0003A4  101C               	iorwf	??_set_time^0,w,c
  2684   0003A6  6E09               	movwf	write_ds1307@data^0,c
  2685   0003A8  0E02               	movlw	2
  2686   0003AA  ECCD  F015         	call	_write_ds1307
  2687   0003AE                     
  2688                           ;common.c: 390:             write_ds1307(0x01, (((clock_set[1]) & 0x00) | (((min / 10) <
      +                          < 4) | (min % 10))));
  2689   0003AE  C055  F001         	movff	_min,___awmod@dividend
  2690   0003B2  6A02               	clrf	(___awmod@dividend+1)^0,c
  2691   0003B4  0E00               	movlw	0
  2692   0003B6  6E04               	movwf	(___awmod@divisor+1)^0,c
  2693   0003B8  0E0A               	movlw	10
  2694   0003BA  6E03               	movwf	___awmod@divisor^0,c
  2695   0003BC  ECDA  F011         	call	___awmod	;wreg free
  2696   0003C0  C001  F01C         	movff	?___awmod,??_set_time
  2697   0003C4  C002  F01D         	movff	?___awmod+1,??_set_time+1
  2698   0003C8  C055  F001         	movff	_min,___awdiv@dividend
  2699   0003CC  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2700   0003CE  0E00               	movlw	0
  2701   0003D0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2702   0003D2  0E0A               	movlw	10
  2703   0003D4  6E03               	movwf	___awdiv@divisor^0,c
  2704   0003D6  EC78  F011         	call	___awdiv	;wreg free
  2705   0003DA  3801               	swapf	?___awdiv^0,w,c
  2706   0003DC  0BF0               	andlw	240
  2707   0003DE  101C               	iorwf	??_set_time^0,w,c
  2708   0003E0  6E09               	movwf	write_ds1307@data^0,c
  2709   0003E2  0E01               	movlw	1
  2710   0003E4  ECCD  F015         	call	_write_ds1307
  2711   0003E8                     
  2712                           ;common.c: 391:             write_ds1307(0x00, ((clock_set[2] & 0x00) | ((second / 10) <
      +                          < 4) | (second % 10)));
  2713   0003E8  C053  F001         	movff	_second,___awmod@dividend
  2714   0003EC  6A02               	clrf	(___awmod@dividend+1)^0,c
  2715   0003EE  0E00               	movlw	0
  2716   0003F0  6E04               	movwf	(___awmod@divisor+1)^0,c
  2717   0003F2  0E0A               	movlw	10
  2718   0003F4  6E03               	movwf	___awmod@divisor^0,c
  2719   0003F6  ECDA  F011         	call	___awmod	;wreg free
  2720   0003FA  C001  F01C         	movff	?___awmod,??_set_time
  2721   0003FE  C002  F01D         	movff	?___awmod+1,??_set_time+1
  2722   000402  C053  F001         	movff	_second,___awdiv@dividend
  2723   000406  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2724   000408  0E00               	movlw	0
  2725   00040A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2726   00040C  0E0A               	movlw	10
  2727   00040E  6E03               	movwf	___awdiv@divisor^0,c
  2728   000410  EC78  F011         	call	___awdiv	;wreg free
  2729   000414  3801               	swapf	?___awdiv^0,w,c
  2730   000416  0BF0               	andlw	240
  2731   000418  101C               	iorwf	??_set_time^0,w,c
  2732   00041A  6E09               	movwf	write_ds1307@data^0,c
  2733   00041C  0E00               	movlw	0
  2734   00041E  ECCD  F015         	call	_write_ds1307
  2735   000422                     
  2736                           ;common.c: 392:             clcd_write(0x01, 0);
  2737   000422  0E00               	movlw	0
  2738   000424  6E01               	movwf	clcd_write@control_bit^0,c
  2739   000426  0E01               	movlw	1
  2740   000428  EC25  F015         	call	_clcd_write
  2741   00042C                     
  2742                           ;common.c: 393:             clcd_print("TIME  CHANGED", (0x80 + (2)));
  2743   00042C  0E71               	movlw	low STR_25
  2744   00042E  6E07               	movwf	clcd_print@data^0,c
  2745   000430  0E2F               	movlw	high STR_25
  2746   000432  6E08               	movwf	(clcd_print@data+1)^0,c
  2747   000434  0E82               	movlw	130
  2748   000436  6E09               	movwf	clcd_print@addr^0,c
  2749   000438  EC06  F014         	call	_clcd_print	;wreg free
  2750   00043C                     
  2751                           ;common.c: 394:             clcd_print("SUCCESSFULLY", (0xC0 + (2)));
  2752   00043C  0EA6               	movlw	low STR_20
  2753   00043E  6E07               	movwf	clcd_print@data^0,c
  2754   000440  0E2F               	movlw	high STR_20
  2755   000442  6E08               	movwf	(clcd_print@data+1)^0,c
  2756   000444  0EC2               	movlw	194
  2757   000446  6E09               	movwf	clcd_print@addr^0,c
  2758   000448  EC06  F014         	call	_clcd_print	;wreg free
  2759   00044C                     
  2760                           ;common.c: 395:             for (unsigned long int y = 0xFFFFA; --y;);
  2761   00044C  0EFA               	movlw	250
  2762   00044E  6E1E               	movwf	set_time@y^0,c
  2763   000450  0EFF               	movlw	255
  2764   000452  6E1F               	movwf	(set_time@y+1)^0,c
  2765   000454  0E0F               	movlw	15
  2766   000456  6E20               	movwf	(set_time@y+2)^0,c
  2767   000458  0E00               	movlw	0
  2768   00045A  6E21               	movwf	(set_time@y+3)^0,c
  2769   00045C                     l4590:
  2770   00045C  061E               	decf	set_time@y^0,f,c
  2771   00045E  0E00               	movlw	0
  2772   000460  5A1F               	subwfb	(set_time@y+1)^0,f,c
  2773   000462  5A20               	subwfb	(set_time@y+2)^0,f,c
  2774   000464  5A21               	subwfb	(set_time@y+3)^0,f,c
  2775   000466  501E               	movf	set_time@y^0,w,c
  2776   000468  101F               	iorwf	(set_time@y+1)^0,w,c
  2777   00046A  1020               	iorwf	(set_time@y+2)^0,w,c
  2778   00046C  1021               	iorwf	(set_time@y+3)^0,w,c
  2779   00046E  A4D8               	btfss	status,2,c
  2780   000470  EF3C  F002         	goto	u4031
  2781   000474  EF3E  F002         	goto	u4030
  2782   000478                     u4031:
  2783   000478  EF2E  F002         	goto	l4590
  2784   00047C                     u4030:
  2785   00047C                     
  2786                           ;common.c: 396:             min = 0;
  2787   00047C  0E00               	movlw	0
  2788   00047E  6E55               	movwf	_min^0,c
  2789                           
  2790                           ;common.c: 397:             hour = 0;
  2791   000480  0E00               	movlw	0
  2792   000482  6E54               	movwf	_hour^0,c
  2793                           
  2794                           ;common.c: 398:             second = 0;
  2795   000484  0E00               	movlw	0
  2796   000486  6E53               	movwf	_second^0,c
  2797                           
  2798                           ;common.c: 399:             change_Time[9] = "00:00:00";
  2799   000488  0EDF               	movlw	low (low STR_27)
  2800   00048A  0100               	movlb	0	; () banked
  2801   00048C  6FF9               	movwf	(_change_Time+9)& (0+255),b
  2802   00048E                     
  2803                           ; BSR set to: 0
  2804                           ;common.c: 400:             clcd_write(0x01, 0);
  2805   00048E  0E00               	movlw	0
  2806   000490  6E01               	movwf	clcd_write@control_bit^0,c
  2807   000492  0E01               	movlw	1
  2808   000494  EC25  F015         	call	_clcd_write
  2809   000498                     
  2810                           ;common.c: 401:             SCREEN_FLAG = 0;
  2811   000498  0E00               	movlw	0
  2812   00049A  6E52               	movwf	(_SCREEN_FLAG+1)^0,c
  2813   00049C  0E00               	movlw	0
  2814   00049E  6E51               	movwf	_SCREEN_FLAG^0,c
  2815   0004A0                     
  2816                           ;common.c: 402:             EI = 10;
  2817   0004A0  0E0A               	movlw	10
  2818   0004A2  6E57               	movwf	_EI^0,c
  2819   0004A4                     
  2820                           ;common.c: 403:             EF = 1;
  2821   0004A4  0E01               	movlw	1
  2822   0004A6  0100               	movlb	0	; () banked
  2823   0004A8  6FBE               	movwf	_EF& (0+255),b
  2824   0004AA                     
  2825                           ; BSR set to: 0
  2826                           ;common.c: 404:             option_save = 1;
  2827   0004AA  0E01               	movlw	1
  2828   0004AC  6FBF               	movwf	_option_save& (0+255),b
  2829   0004AE                     
  2830                           ; BSR set to: 0
  2831                           ;common.c: 405:             store_event_in_eeprom();
  2832   0004AE  EC20  F00E         	call	_store_event_in_eeprom	;wreg free
  2833   0004B2                     
  2834                           ;common.c: 406:             MENU_FLAG = 0;
  2835   0004B2  0E00               	movlw	0
  2836   0004B4  6E50               	movwf	(_MENU_FLAG+1)^0,c
  2837   0004B6  0E00               	movlw	0
  2838   0004B8  6E4F               	movwf	_MENU_FLAG^0,c
  2839   0004BA                     
  2840                           ;common.c: 407:             NEW_KEY = 0;
  2841   0004BA  0E00               	movlw	0
  2842   0004BC  6E56               	movwf	_NEW_KEY^0,c
  2843   0004BE                     
  2844                           ;common.c: 408:             BLINK = 0;
  2845   0004BE  0E00               	movlw	0
  2846   0004C0  0100               	movlb	0	; () banked
  2847   0004C2  6FAC               	movwf	(_BLINK+1)& (0+255),b
  2848   0004C4  0E00               	movlw	0
  2849   0004C6  6FAB               	movwf	_BLINK& (0+255),b
  2850   0004C8                     
  2851                           ; BSR set to: 0
  2852                           ;common.c: 409:             FILED = 0;
  2853   0004C8  0E00               	movlw	0
  2854   0004CA  6E42               	movwf	(_FILED+1)^0,c
  2855   0004CC  0E00               	movlw	0
  2856   0004CE  6E41               	movwf	_FILED^0,c
  2857   0004D0                     
  2858                           ; BSR set to: 0
  2859                           ;common.c: 410:             flag = 1;
  2860   0004D0  0E01               	movlw	1
  2861   0004D2  6FEF               	movwf	_flag& (0+255),b
  2862   0004D4                     
  2863                           ; BSR set to: 0
  2864                           ;common.c: 411:             delay = 0;
  2865   0004D4  0E00               	movlw	0
  2866   0004D6  6E39               	movwf	_delay^0,c
  2867   0004D8  0E00               	movlw	0
  2868   0004DA  6E3A               	movwf	(_delay+1)^0,c
  2869   0004DC  0E00               	movlw	0
  2870   0004DE  6E3B               	movwf	(_delay+2)^0,c
  2871   0004E0  0E00               	movlw	0
  2872   0004E2  6E3C               	movwf	(_delay+3)^0,c
  2873   0004E4                     l507:
  2874   0004E4  0012               	return		;funcret
  2875   0004E6                     __end_of_set_time:
  2876                           	callstack 0
  2877                           
  2878 ;; *************** function ___awmod *****************
  2879 ;; Defined at:
  2880 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  dividend        2    0[COMRAM] int 
  2883 ;;  divisor         2    2[COMRAM] int 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  sign            1    5[COMRAM] unsigned char 
  2886 ;;  counter         1    4[COMRAM] unsigned char 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  2    0[COMRAM] int 
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2896 ;;      Params:         4       0       0       0       0       0       0
  2897 ;;      Locals:         2       0       0       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0
  2899 ;;      Totals:         6       0       0       0       0       0       0
  2900 ;;Total ram usage:        6 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 1
  2903 ;; This function calls:
  2904 ;;		Nothing
  2905 ;; This function is called by:
  2906 ;;		_set_time
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text3
  2911   0023B4                     __ptext3:
  2912                           	callstack 0
  2913   0023B4                     ___awmod:
  2914                           	callstack 28
  2915   0023B4  0E00               	movlw	0
  2916   0023B6  6E06               	movwf	___awmod@sign^0,c
  2917   0023B8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2918   0023BA  EFE3  F011         	goto	u2950
  2919   0023BE  EFE1  F011         	goto	u2951
  2920   0023C2                     u2951:
  2921   0023C2  EFE9  F011         	goto	l3854
  2922   0023C6                     u2950:
  2923   0023C6  6C01               	negf	___awmod@dividend^0,c
  2924   0023C8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2925   0023CA  B0D8               	btfsc	status,0,c
  2926   0023CC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2927   0023CE  0E01               	movlw	1
  2928   0023D0  6E06               	movwf	___awmod@sign^0,c
  2929   0023D2                     l3854:
  2930   0023D2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2931   0023D4  EFF0  F011         	goto	u2960
  2932   0023D8  EFEE  F011         	goto	u2961
  2933   0023DC                     u2961:
  2934   0023DC  EFF4  F011         	goto	l3858
  2935   0023E0                     u2960:
  2936   0023E0  6C03               	negf	___awmod@divisor^0,c
  2937   0023E2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2938   0023E4  B0D8               	btfsc	status,0,c
  2939   0023E6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2940   0023E8                     l3858:
  2941   0023E8  5003               	movf	___awmod@divisor^0,w,c
  2942   0023EA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2943   0023EC  B4D8               	btfsc	status,2,c
  2944   0023EE  EFFB  F011         	goto	u2971
  2945   0023F2  EFFD  F011         	goto	u2970
  2946   0023F6                     u2971:
  2947   0023F6  EF21  F012         	goto	l3874
  2948   0023FA                     u2970:
  2949   0023FA  0E01               	movlw	1
  2950   0023FC  6E05               	movwf	___awmod@counter^0,c
  2951   0023FE  EF05  F012         	goto	l3864
  2952   002402                     l3862:
  2953   002402  90D8               	bcf	status,0,c
  2954   002404  3603               	rlcf	___awmod@divisor^0,f,c
  2955   002406  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2956   002408  2A05               	incf	___awmod@counter^0,f,c
  2957   00240A                     l3864:
  2958   00240A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2959   00240C  EF0A  F012         	goto	u2981
  2960   002410  EF0C  F012         	goto	u2980
  2961   002414                     u2981:
  2962   002414  EF01  F012         	goto	l3862
  2963   002418                     u2980:
  2964   002418                     l3866:
  2965   002418  5003               	movf	___awmod@divisor^0,w,c
  2966   00241A  5C01               	subwf	___awmod@dividend^0,w,c
  2967   00241C  5004               	movf	(___awmod@divisor+1)^0,w,c
  2968   00241E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2969   002420  A0D8               	btfss	status,0,c
  2970   002422  EF15  F012         	goto	u2991
  2971   002426  EF17  F012         	goto	u2990
  2972   00242A                     u2991:
  2973   00242A  EF1B  F012         	goto	l3870
  2974   00242E                     u2990:
  2975   00242E  5003               	movf	___awmod@divisor^0,w,c
  2976   002430  5E01               	subwf	___awmod@dividend^0,f,c
  2977   002432  5004               	movf	(___awmod@divisor+1)^0,w,c
  2978   002434  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2979   002436                     l3870:
  2980   002436  90D8               	bcf	status,0,c
  2981   002438  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2982   00243A  3203               	rrcf	___awmod@divisor^0,f,c
  2983   00243C  2E05               	decfsz	___awmod@counter^0,f,c
  2984   00243E  EF0C  F012         	goto	l3866
  2985   002442                     l3874:
  2986   002442  5006               	movf	___awmod@sign^0,w,c
  2987   002444  B4D8               	btfsc	status,2,c
  2988   002446  EF27  F012         	goto	u3001
  2989   00244A  EF29  F012         	goto	u3000
  2990   00244E                     u3001:
  2991   00244E  EF2D  F012         	goto	l3878
  2992   002452                     u3000:
  2993   002452  6C01               	negf	___awmod@dividend^0,c
  2994   002454  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2995   002456  B0D8               	btfsc	status,0,c
  2996   002458  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2997   00245A                     l3878:
  2998   00245A  C001  F001         	movff	___awmod@dividend,?___awmod
  2999   00245E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3000   002462  0012               	return		;funcret
  3001   002464                     __end_of___awmod:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function ___awdiv *****************
  3005 ;; Defined at:
  3006 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  dividend        2    0[COMRAM] int 
  3009 ;;  divisor         2    2[COMRAM] int 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  quotient        2    6[COMRAM] int 
  3012 ;;  sign            1    5[COMRAM] unsigned char 
  3013 ;;  counter         1    4[COMRAM] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  2    0[COMRAM] int 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3023 ;;      Params:         4       0       0       0       0       0       0
  3024 ;;      Locals:         4       0       0       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0
  3026 ;;      Totals:         8       0       0       0       0       0       0
  3027 ;;Total ram usage:        8 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; Hardware stack levels required when called: 1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_set_time
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text4
  3038   0022F0                     __ptext4:
  3039                           	callstack 0
  3040   0022F0                     ___awdiv:
  3041                           	callstack 28
  3042   0022F0  0E00               	movlw	0
  3043   0022F2  6E06               	movwf	___awdiv@sign^0,c
  3044   0022F4  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3045   0022F6  EF81  F011         	goto	u2890
  3046   0022FA  EF7F  F011         	goto	u2891
  3047   0022FE                     u2891:
  3048   0022FE  EF87  F011         	goto	l3810
  3049   002302                     u2890:
  3050   002302  6C03               	negf	___awdiv@divisor^0,c
  3051   002304  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3052   002306  B0D8               	btfsc	status,0,c
  3053   002308  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3054   00230A  0E01               	movlw	1
  3055   00230C  6E06               	movwf	___awdiv@sign^0,c
  3056   00230E                     l3810:
  3057   00230E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3058   002310  EF8E  F011         	goto	u2900
  3059   002314  EF8C  F011         	goto	u2901
  3060   002318                     u2901:
  3061   002318  EF94  F011         	goto	l3816
  3062   00231C                     u2900:
  3063   00231C  6C01               	negf	___awdiv@dividend^0,c
  3064   00231E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3065   002320  B0D8               	btfsc	status,0,c
  3066   002322  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3067   002324  0E01               	movlw	1
  3068   002326  1A06               	xorwf	___awdiv@sign^0,f,c
  3069   002328                     l3816:
  3070   002328  0E00               	movlw	0
  3071   00232A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3072   00232C  0E00               	movlw	0
  3073   00232E  6E07               	movwf	___awdiv@quotient^0,c
  3074   002330  5003               	movf	___awdiv@divisor^0,w,c
  3075   002332  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3076   002334  B4D8               	btfsc	status,2,c
  3077   002336  EF9F  F011         	goto	u2911
  3078   00233A  EFA1  F011         	goto	u2910
  3079   00233E                     u2911:
  3080   00233E  EFC9  F011         	goto	l3838
  3081   002342                     u2910:
  3082   002342  0E01               	movlw	1
  3083   002344  6E05               	movwf	___awdiv@counter^0,c
  3084   002346  EFA9  F011         	goto	l3824
  3085   00234A                     l3822:
  3086   00234A  90D8               	bcf	status,0,c
  3087   00234C  3603               	rlcf	___awdiv@divisor^0,f,c
  3088   00234E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3089   002350  2A05               	incf	___awdiv@counter^0,f,c
  3090   002352                     l3824:
  3091   002352  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3092   002354  EFAE  F011         	goto	u2921
  3093   002358  EFB0  F011         	goto	u2920
  3094   00235C                     u2921:
  3095   00235C  EFA5  F011         	goto	l3822
  3096   002360                     u2920:
  3097   002360                     l3826:
  3098   002360  90D8               	bcf	status,0,c
  3099   002362  3607               	rlcf	___awdiv@quotient^0,f,c
  3100   002364  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3101   002366  5003               	movf	___awdiv@divisor^0,w,c
  3102   002368  5C01               	subwf	___awdiv@dividend^0,w,c
  3103   00236A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3104   00236C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3105   00236E  A0D8               	btfss	status,0,c
  3106   002370  EFBC  F011         	goto	u2931
  3107   002374  EFBE  F011         	goto	u2930
  3108   002378                     u2931:
  3109   002378  EFC3  F011         	goto	l3834
  3110   00237C                     u2930:
  3111   00237C  5003               	movf	___awdiv@divisor^0,w,c
  3112   00237E  5E01               	subwf	___awdiv@dividend^0,f,c
  3113   002380  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3114   002382  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3115   002384  8007               	bsf	___awdiv@quotient^0,0,c
  3116   002386                     l3834:
  3117   002386  90D8               	bcf	status,0,c
  3118   002388  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3119   00238A  3203               	rrcf	___awdiv@divisor^0,f,c
  3120   00238C  2E05               	decfsz	___awdiv@counter^0,f,c
  3121   00238E  EFB0  F011         	goto	l3826
  3122   002392                     l3838:
  3123   002392  5006               	movf	___awdiv@sign^0,w,c
  3124   002394  B4D8               	btfsc	status,2,c
  3125   002396  EFCF  F011         	goto	u2941
  3126   00239A  EFD1  F011         	goto	u2940
  3127   00239E                     u2941:
  3128   00239E  EFD5  F011         	goto	l3842
  3129   0023A2                     u2940:
  3130   0023A2  6C07               	negf	___awdiv@quotient^0,c
  3131   0023A4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3132   0023A6  B0D8               	btfsc	status,0,c
  3133   0023A8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3134   0023AA                     l3842:
  3135   0023AA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3136   0023AE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3137   0023B2  0012               	return		;funcret
  3138   0023B4                     __end_of___awdiv:
  3139                           	callstack 0
  3140                           
  3141 ;; *************** function _password_screen *****************
  3142 ;; Defined at:
  3143 ;;		line 74 in file "common.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;		None
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  y               4   17[COMRAM] unsigned long 
  3148 ;;  y               4   13[COMRAM] unsigned long 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3158 ;;      Params:         0       0       0       0       0       0       0
  3159 ;;      Locals:         8       0       0       0       0       0       0
  3160 ;;      Temps:          4       0       0       0       0       0       0
  3161 ;;      Totals:        12       0       0       0       0       0       0
  3162 ;;Total ram usage:       12 bytes
  3163 ;; Hardware stack levels used: 1
  3164 ;; Hardware stack levels required when called: 5
  3165 ;; This function calls:
  3166 ;;		___lwdiv
  3167 ;;		___lwmod
  3168 ;;		_clcd_print
  3169 ;;		_clcd_putch
  3170 ;;		_clcd_write
  3171 ;;		_read_external_eeprom
  3172 ;; This function is called by:
  3173 ;;		_main
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text5
  3178   0004E6                     __ptext5:
  3179                           	callstack 0
  3180   0004E6                     _password_screen:
  3181                           	callstack 25
  3182   0004E6                     
  3183                           ;common.c: 76:     if (chance > 0) {
  3184   0004E6  0100               	movlb	0	; () banked
  3185   0004E8  BFE4               	btfsc	(_chance@common$F324+1)& (0+255),7,b
  3186   0004EA  EF7F  F002         	goto	u3521
  3187   0004EE  51E4               	movf	(_chance@common$F324+1)& (0+255),w,b
  3188   0004F0  E108               	bnz	u3520
  3189   0004F2  05E3               	decf	_chance@common$F324& (0+255),w,b
  3190   0004F4  A0D8               	btfss	status,0,c
  3191   0004F6  EF7F  F002         	goto	u3521
  3192   0004FA  EF81  F002         	goto	u3520
  3193   0004FE                     u3521:
  3194   0004FE  EF57  F004         	goto	l4266
  3195   000502                     u3520:
  3196   000502                     
  3197                           ; BSR set to: 0
  3198                           ;common.c: 78:         if (index < 4) {
  3199   000502  BE4A               	btfsc	(_index@common$F326+1)^0,7,c
  3200   000504  EF8F  F002         	goto	u3530
  3201   000508  504A               	movf	(_index@common$F326+1)^0,w,c
  3202   00050A  E107               	bnz	u3531
  3203   00050C  0E04               	movlw	4
  3204   00050E  5C49               	subwf	_index@common$F326^0,w,c
  3205   000510  B0D8               	btfsc	status,0,c
  3206   000512  EF8D  F002         	goto	u3531
  3207   000516  EF8F  F002         	goto	u3530
  3208   00051A                     u3531:
  3209   00051A  EF8C  F003         	goto	l4210
  3210   00051E                     u3530:
  3211   00051E                     
  3212                           ; BSR set to: 0
  3213                           ;common.c: 79:             if (once) {
  3214   00051E  51E1               	movf	_once@common$F327& (0+255),w,b
  3215   000520  11E2               	iorwf	(_once@common$F327+1)& (0+255),w,b
  3216   000522  B4D8               	btfsc	status,2,c
  3217   000524  EF96  F002         	goto	u3541
  3218   000528  EF98  F002         	goto	u3540
  3219   00052C                     u3541:
  3220   00052C  EFD9  F002         	goto	l4160
  3221   000530                     u3540:
  3222   000530                     
  3223                           ; BSR set to: 0
  3224                           ;common.c: 80:                 once = 0;
  3225   000530  0E00               	movlw	0
  3226   000532  6FE2               	movwf	(_once@common$F327+1)& (0+255),b
  3227   000534  0E00               	movlw	0
  3228   000536  6FE1               	movwf	_once@common$F327& (0+255),b
  3229   000538                     
  3230                           ; BSR set to: 0
  3231                           ;common.c: 81:                 clcd_write(0x01, 0);
  3232   000538  0E00               	movlw	0
  3233   00053A  6E01               	movwf	clcd_write@control_bit^0,c
  3234   00053C  0E01               	movlw	1
  3235   00053E  EC25  F015         	call	_clcd_write
  3236   000542                     
  3237                           ;common.c: 82:                 clcd_print(" ENTER PASSWORD ", (0x80 + (0)));
  3238   000542  0EE2               	movlw	low STR_2
  3239   000544  6E07               	movwf	clcd_print@data^0,c
  3240   000546  0E2E               	movlw	high STR_2
  3241   000548  6E08               	movwf	(clcd_print@data+1)^0,c
  3242   00054A  0E80               	movlw	128
  3243   00054C  6E09               	movwf	clcd_print@addr^0,c
  3244   00054E  EC06  F014         	call	_clcd_print	;wreg free
  3245   000552                     
  3246                           ;common.c: 83:                 clcd_write(0xC4, 0);
  3247   000552  0E00               	movlw	0
  3248   000554  6E01               	movwf	clcd_write@control_bit^0,c
  3249   000556  0EC4               	movlw	196
  3250   000558  EC25  F015         	call	_clcd_write
  3251   00055C                     
  3252                           ;common.c: 84:                 clcd_write(0x0F, 0);
  3253   00055C  0E00               	movlw	0
  3254   00055E  6E01               	movwf	clcd_write@control_bit^0,c
  3255   000560  0E0F               	movlw	15
  3256   000562  EC25  F015         	call	_clcd_write
  3257   000566                     
  3258                           ;common.c: 85:                 pass[0] = read_external_eeprom(0x78);
  3259   000566  0E78               	movlw	120
  3260   000568  EC72  F015         	call	_read_external_eeprom
  3261   00056C  6E0A               	movwf	??_password_screen^0,c
  3262   00056E  500A               	movf	??_password_screen^0,w,c
  3263   000570  0100               	movlb	0	; () banked
  3264   000572  6F68               	movwf	_pass@common$F330& (0+255),b
  3265   000574  6B69               	clrf	(_pass@common$F330+1)& (0+255),b
  3266   000576                     
  3267                           ; BSR set to: 0
  3268                           ;common.c: 86:                 pass[1] = read_external_eeprom(0x79);
  3269   000576  0E79               	movlw	121
  3270   000578  EC72  F015         	call	_read_external_eeprom
  3271   00057C  6E0A               	movwf	??_password_screen^0,c
  3272   00057E  500A               	movf	??_password_screen^0,w,c
  3273   000580  0100               	movlb	0	; () banked
  3274   000582  6F6A               	movwf	(_pass@common$F330+2)& (0+255),b
  3275   000584  6B6B               	clrf	(_pass@common$F330+3)& (0+255),b
  3276   000586                     
  3277                           ; BSR set to: 0
  3278                           ;common.c: 87:                 pass[2] = read_external_eeprom(0x7A);
  3279   000586  0E7A               	movlw	122
  3280   000588  EC72  F015         	call	_read_external_eeprom
  3281   00058C  6E0A               	movwf	??_password_screen^0,c
  3282   00058E  500A               	movf	??_password_screen^0,w,c
  3283   000590  0100               	movlb	0	; () banked
  3284   000592  6F6C               	movwf	(_pass@common$F330+4)& (0+255),b
  3285   000594  6B6D               	clrf	(_pass@common$F330+5)& (0+255),b
  3286   000596                     
  3287                           ; BSR set to: 0
  3288                           ;common.c: 88:                 pass[3] = read_external_eeprom(0x7B);
  3289   000596  0E7B               	movlw	123
  3290   000598  EC72  F015         	call	_read_external_eeprom
  3291   00059C  6E0A               	movwf	??_password_screen^0,c
  3292   00059E  500A               	movf	??_password_screen^0,w,c
  3293   0005A0  0100               	movlb	0	; () banked
  3294   0005A2  6F6E               	movwf	(_pass@common$F330+6)& (0+255),b
  3295   0005A4  6B6F               	clrf	(_pass@common$F330+7)& (0+255),b
  3296   0005A6                     
  3297                           ; BSR set to: 0
  3298                           ;common.c: 89:                 key = 0;
  3299   0005A6  0E00               	movlw	0
  3300   0005A8  6E59               	movwf	_key^0,c
  3301   0005AA                     
  3302                           ; BSR set to: 0
  3303                           ;common.c: 90:                 sec = 60;
  3304   0005AA  0E00               	movlw	0
  3305   0005AC  6E5D               	movwf	(_sec+1)^0,c
  3306   0005AE  0E3C               	movlw	60
  3307   0005B0  6E5C               	movwf	_sec^0,c
  3308   0005B2                     l4160:
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;common.c: 93:             if (key == 5) {
  3312   0005B2  0E05               	movlw	5
  3313   0005B4  1859               	xorwf	_key^0,w,c
  3314   0005B6  A4D8               	btfss	status,2,c
  3315   0005B8  EFE0  F002         	goto	u3551
  3316   0005BC  EFE2  F002         	goto	u3550
  3317   0005C0                     u3551:
  3318   0005C0  EF1D  F003         	goto	l4176
  3319   0005C4                     u3550:
  3320   0005C4                     
  3321                           ; BSR set to: 0
  3322                           ;common.c: 94:                 arr[index] = 0;
  3323   0005C4  5049               	movf	_index@common$F326^0,w,c
  3324   0005C6  0D02               	mullw	2
  3325   0005C8  50F3               	movf	243,w,c
  3326   0005CA  0F70               	addlw	low _arr@common$F329
  3327   0005CC  6ED9               	movwf	fsr2l,c
  3328   0005CE  6ADA               	clrf	fsr2h,c
  3329   0005D0  6ADE               	clrf	postinc2,c
  3330   0005D2  6ADD               	clrf	postdec2,c
  3331   0005D4                     
  3332                           ; BSR set to: 0
  3333                           ;common.c: 95:                 clcd_write(0x0F, 0);
  3334   0005D4  0E00               	movlw	0
  3335   0005D6  6E01               	movwf	clcd_write@control_bit^0,c
  3336   0005D8  0E0F               	movlw	15
  3337   0005DA  EC25  F015         	call	_clcd_write
  3338   0005DE                     
  3339                           ;common.c: 96:                 clcd_write(0x14, 0);
  3340   0005DE  0E00               	movlw	0
  3341   0005E0  6E01               	movwf	clcd_write@control_bit^0,c
  3342   0005E2  0E14               	movlw	20
  3343   0005E4  EC25  F015         	call	_clcd_write
  3344   0005E8                     
  3345                           ;common.c: 97:                 clcd_putch('*', (0xC0 + (index + 4)));
  3346   0005E8  5049               	movf	_index@common$F326^0,w,c
  3347   0005EA  0FC4               	addlw	196
  3348   0005EC  6E08               	movwf	clcd_putch@addr^0,c
  3349   0005EE  0E2A               	movlw	42
  3350   0005F0  ECDC  F015         	call	_clcd_putch
  3351   0005F4                     
  3352                           ;common.c: 98:                 if (arr[index] == pass[index]) {
  3353   0005F4  5049               	movf	_index@common$F326^0,w,c
  3354   0005F6  0D02               	mullw	2
  3355   0005F8  50F3               	movf	243,w,c
  3356   0005FA  0F68               	addlw	low _pass@common$F330
  3357   0005FC  6ED9               	movwf	fsr2l,c
  3358   0005FE  6ADA               	clrf	fsr2h,c
  3359   000600  5049               	movf	_index@common$F326^0,w,c
  3360   000602  0D02               	mullw	2
  3361   000604  50F3               	movf	243,w,c
  3362   000606  0F70               	addlw	low _arr@common$F329
  3363   000608  6EE1               	movwf	fsr1l,c
  3364   00060A  6AE2               	clrf	fsr1h,c
  3365   00060C  50DE               	movf	postinc2,w,c
  3366   00060E  18E6               	xorwf	postinc1,w,c
  3367   000610  E107               	bnz	u3561
  3368   000612  50DE               	movf	postinc2,w,c
  3369   000614  18E6               	xorwf	postinc1,w,c
  3370   000616  A4D8               	btfss	status,2,c
  3371   000618  EF10  F003         	goto	u3561
  3372   00061C  EF12  F003         	goto	u3560
  3373   000620                     u3561:
  3374   000620  EF15  F003         	goto	l384
  3375   000624                     u3560:
  3376   000624                     l4172:
  3377                           
  3378                           ;common.c: 99:                     ++count;
  3379   000624  0100               	movlb	0	; () banked
  3380   000626  4BB1               	infsnz	_count@common$F325& (0+255),f,b
  3381   000628  2BB2               	incf	(_count@common$F325+1)& (0+255),f,b
  3382   00062A                     l384:
  3383                           
  3384                           ;common.c: 101:                 ++index;
  3385   00062A  4A49               	infsnz	_index@common$F326^0,f,c
  3386   00062C  2A4A               	incf	(_index@common$F326+1)^0,f,c
  3387   00062E                     
  3388                           ;common.c: 102:                 sec = 60;
  3389   00062E  0E00               	movlw	0
  3390   000630  6E5D               	movwf	(_sec+1)^0,c
  3391   000632  0E3C               	movlw	60
  3392   000634  6E5C               	movwf	_sec^0,c
  3393                           
  3394                           ;common.c: 103:             } else if (key == 6) {
  3395   000636  EFAC  F004         	goto	l403
  3396   00063A                     l4176:
  3397                           
  3398                           ; BSR set to: 0
  3399   00063A  0E06               	movlw	6
  3400   00063C  1859               	xorwf	_key^0,w,c
  3401   00063E  A4D8               	btfss	status,2,c
  3402   000640  EF24  F003         	goto	u3571
  3403   000644  EF26  F003         	goto	u3570
  3404   000648                     u3571:
  3405   000648  EF5A  F003         	goto	l4192
  3406   00064C                     u3570:
  3407   00064C                     
  3408                           ; BSR set to: 0
  3409                           ;common.c: 104:                 arr[index] = 1;
  3410   00064C  5049               	movf	_index@common$F326^0,w,c
  3411   00064E  0D02               	mullw	2
  3412   000650  50F3               	movf	243,w,c
  3413   000652  0F70               	addlw	low _arr@common$F329
  3414   000654  6ED9               	movwf	fsr2l,c
  3415   000656  6ADA               	clrf	fsr2h,c
  3416   000658  0E01               	movlw	1
  3417   00065A  6EDE               	movwf	postinc2,c
  3418   00065C  0E00               	movlw	0
  3419   00065E  6EDD               	movwf	postdec2,c
  3420   000660                     
  3421                           ; BSR set to: 0
  3422                           ;common.c: 105:                 clcd_write(0x0F, 0);
  3423   000660  0E00               	movlw	0
  3424   000662  6E01               	movwf	clcd_write@control_bit^0,c
  3425   000664  0E0F               	movlw	15
  3426   000666  EC25  F015         	call	_clcd_write
  3427   00066A                     
  3428                           ;common.c: 106:                 clcd_write(0x14, 0);
  3429   00066A  0E00               	movlw	0
  3430   00066C  6E01               	movwf	clcd_write@control_bit^0,c
  3431   00066E  0E14               	movlw	20
  3432   000670  EC25  F015         	call	_clcd_write
  3433   000674                     
  3434                           ;common.c: 107:                 clcd_putch('*', (0xC0 + (index + 4)));
  3435   000674  5049               	movf	_index@common$F326^0,w,c
  3436   000676  0FC4               	addlw	196
  3437   000678  6E08               	movwf	clcd_putch@addr^0,c
  3438   00067A  0E2A               	movlw	42
  3439   00067C  ECDC  F015         	call	_clcd_putch
  3440   000680                     
  3441                           ;common.c: 108:                 if (arr[index] == pass[index]) {
  3442   000680  5049               	movf	_index@common$F326^0,w,c
  3443   000682  0D02               	mullw	2
  3444   000684  50F3               	movf	243,w,c
  3445   000686  0F68               	addlw	low _pass@common$F330
  3446   000688  6ED9               	movwf	fsr2l,c
  3447   00068A  6ADA               	clrf	fsr2h,c
  3448   00068C  5049               	movf	_index@common$F326^0,w,c
  3449   00068E  0D02               	mullw	2
  3450   000690  50F3               	movf	243,w,c
  3451   000692  0F70               	addlw	low _arr@common$F329
  3452   000694  6EE1               	movwf	fsr1l,c
  3453   000696  6AE2               	clrf	fsr1h,c
  3454   000698  50DE               	movf	postinc2,w,c
  3455   00069A  18E6               	xorwf	postinc1,w,c
  3456   00069C  E107               	bnz	u3581
  3457   00069E  50DE               	movf	postinc2,w,c
  3458   0006A0  18E6               	xorwf	postinc1,w,c
  3459   0006A2  A4D8               	btfss	status,2,c
  3460   0006A4  EF56  F003         	goto	u3581
  3461   0006A8  EF58  F003         	goto	u3580
  3462   0006AC                     u3581:
  3463   0006AC  EF15  F003         	goto	l384
  3464   0006B0                     u3580:
  3465   0006B0  EF12  F003         	goto	l4172
  3466   0006B4                     l4192:
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;common.c: 114:                 if (sec < 55) {
  3470   0006B4  505D               	movf	(_sec+1)^0,w,c
  3471   0006B6  E107               	bnz	u3591
  3472   0006B8  0E37               	movlw	55
  3473   0006BA  5C5C               	subwf	_sec^0,w,c
  3474   0006BC  B0D8               	btfsc	status,0,c
  3475   0006BE  EF63  F003         	goto	u3591
  3476   0006C2  EF65  F003         	goto	u3590
  3477   0006C6                     u3591:
  3478   0006C6  EF55  F004         	goto	l390
  3479   0006CA                     u3590:
  3480   0006CA                     
  3481                           ; BSR set to: 0
  3482                           ;common.c: 115:                     clcd_write(0x0C, 0);
  3483   0006CA  0E00               	movlw	0
  3484   0006CC  6E01               	movwf	clcd_write@control_bit^0,c
  3485   0006CE  0E0C               	movlw	12
  3486   0006D0  EC25  F015         	call	_clcd_write
  3487                           
  3488                           ;common.c: 116:                     clcd_write(0x01, 0);
  3489   0006D4  0E00               	movlw	0
  3490   0006D6  6E01               	movwf	clcd_write@control_bit^0,c
  3491   0006D8  0E01               	movlw	1
  3492   0006DA  EC25  F015         	call	_clcd_write
  3493   0006DE                     
  3494                           ;common.c: 117:                     SCREEN_FLAG = 0;
  3495   0006DE  0E00               	movlw	0
  3496   0006E0  6E52               	movwf	(_SCREEN_FLAG+1)^0,c
  3497   0006E2  0E00               	movlw	0
  3498   0006E4  6E51               	movwf	_SCREEN_FLAG^0,c
  3499   0006E6                     
  3500                           ;common.c: 118:                     index = 0;
  3501   0006E6  0E00               	movlw	0
  3502   0006E8  6E4A               	movwf	(_index@common$F326+1)^0,c
  3503   0006EA  0E00               	movlw	0
  3504   0006EC  6E49               	movwf	_index@common$F326^0,c
  3505   0006EE                     
  3506                           ;common.c: 119:                     count = 0;
  3507   0006EE  0E00               	movlw	0
  3508   0006F0  0100               	movlb	0	; () banked
  3509   0006F2  6FB2               	movwf	(_count@common$F325+1)& (0+255),b
  3510   0006F4  0E00               	movlw	0
  3511   0006F6  6FB1               	movwf	_count@common$F325& (0+255),b
  3512   0006F8                     
  3513                           ; BSR set to: 0
  3514                           ;common.c: 120:                     sec = 60;
  3515   0006F8  0E00               	movlw	0
  3516   0006FA  6E5D               	movwf	(_sec+1)^0,c
  3517   0006FC  0E3C               	movlw	60
  3518   0006FE  6E5C               	movwf	_sec^0,c
  3519   000700                     
  3520                           ; BSR set to: 0
  3521                           ;common.c: 121:                     chance = 3;
  3522   000700  0E00               	movlw	0
  3523   000702  6FE4               	movwf	(_chance@common$F324+1)& (0+255),b
  3524   000704  0E03               	movlw	3
  3525   000706  6FE3               	movwf	_chance@common$F324& (0+255),b
  3526   000708                     
  3527                           ; BSR set to: 0
  3528                           ;common.c: 122:                     once = 1;
  3529   000708  0E00               	movlw	0
  3530   00070A  6FE2               	movwf	(_once@common$F327+1)& (0+255),b
  3531   00070C  0E01               	movlw	1
  3532   00070E  6FE1               	movwf	_once@common$F327& (0+255),b
  3533   000710                     
  3534                           ; BSR set to: 0
  3535                           ;common.c: 123:                     flag = 1;
  3536   000710  0E01               	movlw	1
  3537   000712  6FEF               	movwf	_flag& (0+255),b
  3538   000714  EFAC  F004         	goto	l403
  3539   000718                     l4210:
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;common.c: 128:             if (index == count) {
  3543   000718  51B1               	movf	_count@common$F325& (0+255),w,b
  3544   00071A  1849               	xorwf	_index@common$F326^0,w,c
  3545   00071C  E107               	bnz	u3601
  3546   00071E  51B2               	movf	(_count@common$F325+1)& (0+255),w,b
  3547   000720  184A               	xorwf	(_index@common$F326+1)^0,w,c
  3548   000722  A4D8               	btfss	status,2,c
  3549   000724  EF96  F003         	goto	u3601
  3550   000728  EF98  F003         	goto	u3600
  3551   00072C                     u3601:
  3552   00072C  EFEA  F003         	goto	l4236
  3553   000730                     u3600:
  3554   000730                     
  3555                           ; BSR set to: 0
  3556                           ;common.c: 129:                 clcd_write(0x0C, 0);
  3557   000730  0E00               	movlw	0
  3558   000732  6E01               	movwf	clcd_write@control_bit^0,c
  3559   000734  0E0C               	movlw	12
  3560   000736  EC25  F015         	call	_clcd_write
  3561                           
  3562                           ;common.c: 130:                 clcd_write(0x01, 0);
  3563   00073A  0E00               	movlw	0
  3564   00073C  6E01               	movwf	clcd_write@control_bit^0,c
  3565   00073E  0E01               	movlw	1
  3566   000740  EC25  F015         	call	_clcd_write
  3567   000744                     
  3568                           ;common.c: 131:                 clcd_print("WEL-COME TO ", (0x80 + (0)));
  3569   000744  0E8C               	movlw	low STR_3
  3570   000746  6E07               	movwf	clcd_print@data^0,c
  3571   000748  0E2F               	movlw	high STR_3
  3572   00074A  6E08               	movwf	(clcd_print@data+1)^0,c
  3573   00074C  0E80               	movlw	128
  3574   00074E  6E09               	movwf	clcd_print@addr^0,c
  3575   000750  EC06  F014         	call	_clcd_print	;wreg free
  3576   000754                     
  3577                           ;common.c: 132:                 clcd_print("MENU SCREEN", (0xC0 + (5)));
  3578   000754  0EB3               	movlw	low STR_4
  3579   000756  6E07               	movwf	clcd_print@data^0,c
  3580   000758  0E2F               	movlw	high STR_4
  3581   00075A  6E08               	movwf	(clcd_print@data+1)^0,c
  3582   00075C  0EC5               	movlw	197
  3583   00075E  6E09               	movwf	clcd_print@addr^0,c
  3584   000760  EC06  F014         	call	_clcd_print	;wreg free
  3585   000764                     
  3586                           ;common.c: 133:                 for (unsigned long y = 0xFFFFA; --y;);
  3587   000764  0EFA               	movlw	250
  3588   000766  6E0E               	movwf	password_screen@y^0,c
  3589   000768  0EFF               	movlw	255
  3590   00076A  6E0F               	movwf	(password_screen@y+1)^0,c
  3591   00076C  0E0F               	movlw	15
  3592   00076E  6E10               	movwf	(password_screen@y+2)^0,c
  3593   000770  0E00               	movlw	0
  3594   000772  6E11               	movwf	(password_screen@y+3)^0,c
  3595   000774                     l4220:
  3596   000774  060E               	decf	password_screen@y^0,f,c
  3597   000776  0E00               	movlw	0
  3598   000778  5A0F               	subwfb	(password_screen@y+1)^0,f,c
  3599   00077A  5A10               	subwfb	(password_screen@y+2)^0,f,c
  3600   00077C  5A11               	subwfb	(password_screen@y+3)^0,f,c
  3601   00077E  500E               	movf	password_screen@y^0,w,c
  3602   000780  100F               	iorwf	(password_screen@y+1)^0,w,c
  3603   000782  1010               	iorwf	(password_screen@y+2)^0,w,c
  3604   000784  1011               	iorwf	(password_screen@y+3)^0,w,c
  3605   000786  A4D8               	btfss	status,2,c
  3606   000788  EFC8  F003         	goto	u3611
  3607   00078C  EFCA  F003         	goto	u3610
  3608   000790                     u3611:
  3609   000790  EFBA  F003         	goto	l4220
  3610   000794                     u3610:
  3611   000794                     
  3612                           ;common.c: 134:                 clcd_write(0x01, 0);
  3613   000794  0E00               	movlw	0
  3614   000796  6E01               	movwf	clcd_write@control_bit^0,c
  3615   000798  0E01               	movlw	1
  3616   00079A  EC25  F015         	call	_clcd_write
  3617   00079E                     
  3618                           ;common.c: 135:                 index = 0;
  3619   00079E  0E00               	movlw	0
  3620   0007A0  6E4A               	movwf	(_index@common$F326+1)^0,c
  3621   0007A2  0E00               	movlw	0
  3622   0007A4  6E49               	movwf	_index@common$F326^0,c
  3623   0007A6                     
  3624                           ;common.c: 136:                 count = 0;
  3625   0007A6  0E00               	movlw	0
  3626   0007A8  0100               	movlb	0	; () banked
  3627   0007AA  6FB2               	movwf	(_count@common$F325+1)& (0+255),b
  3628   0007AC  0E00               	movlw	0
  3629   0007AE  6FB1               	movwf	_count@common$F325& (0+255),b
  3630   0007B0                     
  3631                           ; BSR set to: 0
  3632                           ;common.c: 137:                 sec = 60;
  3633   0007B0  0E00               	movlw	0
  3634   0007B2  6E5D               	movwf	(_sec+1)^0,c
  3635   0007B4  0E3C               	movlw	60
  3636   0007B6  6E5C               	movwf	_sec^0,c
  3637   0007B8                     
  3638                           ; BSR set to: 0
  3639                           ;common.c: 138:                 chance = 3;
  3640   0007B8  0E00               	movlw	0
  3641   0007BA  6FE4               	movwf	(_chance@common$F324+1)& (0+255),b
  3642   0007BC  0E03               	movlw	3
  3643   0007BE  6FE3               	movwf	_chance@common$F324& (0+255),b
  3644   0007C0                     
  3645                           ; BSR set to: 0
  3646                           ;common.c: 139:                 once = 1;
  3647   0007C0  0E00               	movlw	0
  3648   0007C2  6FE2               	movwf	(_once@common$F327+1)& (0+255),b
  3649   0007C4  0E01               	movlw	1
  3650   0007C6  6FE1               	movwf	_once@common$F327& (0+255),b
  3651   0007C8                     
  3652                           ; BSR set to: 0
  3653                           ;common.c: 141:                 SCREEN_FLAG = 2;
  3654   0007C8  0E00               	movlw	0
  3655   0007CA  6E52               	movwf	(_SCREEN_FLAG+1)^0,c
  3656   0007CC  0E02               	movlw	2
  3657   0007CE  6E51               	movwf	_SCREEN_FLAG^0,c
  3658                           
  3659                           ;common.c: 142:             } else {
  3660   0007D0  EFAC  F004         	goto	l403
  3661   0007D4                     l4236:
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;common.c: 143:                 chance--;
  3665   0007D4  07E3               	decf	_chance@common$F324& (0+255),f,b
  3666   0007D6  A0D8               	btfss	status,0,c
  3667   0007D8  07E4               	decf	(_chance@common$F324+1)& (0+255),f,b
  3668   0007DA                     
  3669                           ; BSR set to: 0
  3670                           ;common.c: 144:                 clcd_write(0x0C, 0);
  3671   0007DA  0E00               	movlw	0
  3672   0007DC  6E01               	movwf	clcd_write@control_bit^0,c
  3673   0007DE  0E0C               	movlw	12
  3674   0007E0  EC25  F015         	call	_clcd_write
  3675   0007E4                     
  3676                           ;common.c: 145:                 clcd_write(0x01, 0);
  3677   0007E4  0E00               	movlw	0
  3678   0007E6  6E01               	movwf	clcd_write@control_bit^0,c
  3679   0007E8  0E01               	movlw	1
  3680   0007EA  EC25  F015         	call	_clcd_write
  3681   0007EE                     
  3682                           ;common.c: 146:                 clcd_print(" WRONG PASSWORD ", (0x80 + (0)));
  3683   0007EE  0ED1               	movlw	low STR_5
  3684   0007F0  6E07               	movwf	clcd_print@data^0,c
  3685   0007F2  0E2E               	movlw	high STR_5
  3686   0007F4  6E08               	movwf	(clcd_print@data+1)^0,c
  3687   0007F6  0E80               	movlw	128
  3688   0007F8  6E09               	movwf	clcd_print@addr^0,c
  3689   0007FA  EC06  F014         	call	_clcd_print	;wreg free
  3690   0007FE                     
  3691                           ;common.c: 147:                 clcd_print(" ATTEMPTS ", (0xC0 + (0)));
  3692   0007FE  0EBF               	movlw	low STR_6
  3693   000800  6E07               	movwf	clcd_print@data^0,c
  3694   000802  0E2F               	movlw	high STR_6
  3695   000804  6E08               	movwf	(clcd_print@data+1)^0,c
  3696   000806  0EC0               	movlw	192
  3697   000808  6E09               	movwf	clcd_print@addr^0,c
  3698   00080A  EC06  F014         	call	_clcd_print	;wreg free
  3699   00080E                     
  3700                           ;common.c: 148:                 if (chance > 0) {
  3701   00080E  0100               	movlb	0	; () banked
  3702   000810  BFE4               	btfsc	(_chance@common$F324+1)& (0+255),7,b
  3703   000812  EF13  F004         	goto	u3621
  3704   000816  51E4               	movf	(_chance@common$F324+1)& (0+255),w,b
  3705   000818  E108               	bnz	u3620
  3706   00081A  05E3               	decf	_chance@common$F324& (0+255),w,b
  3707   00081C  A0D8               	btfss	status,0,c
  3708   00081E  EF13  F004         	goto	u3621
  3709   000822  EF15  F004         	goto	u3620
  3710   000826                     u3621:
  3711   000826  EF1D  F004         	goto	l4250
  3712   00082A                     u3620:
  3713   00082A                     
  3714                           ; BSR set to: 0
  3715                           ;common.c: 149:                     clcd_putch('0' + chance, (0xC0 + (10)));
  3716   00082A  0ECA               	movlw	202
  3717   00082C  6E08               	movwf	clcd_putch@addr^0,c
  3718   00082E  51E3               	movf	_chance@common$F324& (0+255),w,b
  3719   000830  0F30               	addlw	48
  3720   000832  ECDC  F015         	call	_clcd_putch
  3721                           
  3722                           ;common.c: 150:                 } else {
  3723   000836  EF25  F004         	goto	l4252
  3724   00083A                     l4250:
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;common.c: 151:                     clcd_print("OVER", (0xC0 + (10)));
  3728   00083A  0EF7               	movlw	low STR_7
  3729   00083C  6E07               	movwf	clcd_print@data^0,c
  3730   00083E  0E2F               	movlw	high STR_7
  3731   000840  6E08               	movwf	(clcd_print@data+1)^0,c
  3732   000842  0ECA               	movlw	202
  3733   000844  6E09               	movwf	clcd_print@addr^0,c
  3734   000846  EC06  F014         	call	_clcd_print	;wreg free
  3735   00084A                     l4252:
  3736                           
  3737                           ;common.c: 153:                 for (unsigned long y = 0xFFFFA; --y;);
  3738   00084A  0EFA               	movlw	250
  3739   00084C  6E12               	movwf	password_screen@y_353^0,c
  3740   00084E  0EFF               	movlw	255
  3741   000850  6E13               	movwf	(password_screen@y_353+1)^0,c
  3742   000852  0E0F               	movlw	15
  3743   000854  6E14               	movwf	(password_screen@y_353+2)^0,c
  3744   000856  0E00               	movlw	0
  3745   000858  6E15               	movwf	(password_screen@y_353+3)^0,c
  3746   00085A                     l4254:
  3747   00085A  0612               	decf	password_screen@y_353^0,f,c
  3748   00085C  0E00               	movlw	0
  3749   00085E  5A13               	subwfb	(password_screen@y_353+1)^0,f,c
  3750   000860  5A14               	subwfb	(password_screen@y_353+2)^0,f,c
  3751   000862  5A15               	subwfb	(password_screen@y_353+3)^0,f,c
  3752   000864  5012               	movf	password_screen@y_353^0,w,c
  3753   000866  1013               	iorwf	(password_screen@y_353+1)^0,w,c
  3754   000868  1014               	iorwf	(password_screen@y_353+2)^0,w,c
  3755   00086A  1015               	iorwf	(password_screen@y_353+3)^0,w,c
  3756   00086C  A4D8               	btfss	status,2,c
  3757   00086E  EF3B  F004         	goto	u3631
  3758   000872  EF3D  F004         	goto	u3630
  3759   000876                     u3631:
  3760   000876  EF2D  F004         	goto	l4254
  3761   00087A                     u3630:
  3762   00087A                     
  3763                           ;common.c: 154:                 clcd_write(0x01, 0);
  3764   00087A  0E00               	movlw	0
  3765   00087C  6E01               	movwf	clcd_write@control_bit^0,c
  3766   00087E  0E01               	movlw	1
  3767   000880  EC25  F015         	call	_clcd_write
  3768   000884                     
  3769                           ;common.c: 155:                 index = 0;
  3770   000884  0E00               	movlw	0
  3771   000886  6E4A               	movwf	(_index@common$F326+1)^0,c
  3772   000888  0E00               	movlw	0
  3773   00088A  6E49               	movwf	_index@common$F326^0,c
  3774   00088C                     
  3775                           ;common.c: 156:                 count = 0;
  3776   00088C  0E00               	movlw	0
  3777   00088E  0100               	movlb	0	; () banked
  3778   000890  6FB2               	movwf	(_count@common$F325+1)& (0+255),b
  3779   000892  0E00               	movlw	0
  3780   000894  6FB1               	movwf	_count@common$F325& (0+255),b
  3781   000896                     
  3782                           ; BSR set to: 0
  3783                           ;common.c: 157:                 sec = 60;
  3784   000896  0E00               	movlw	0
  3785   000898  6E5D               	movwf	(_sec+1)^0,c
  3786   00089A  0E3C               	movlw	60
  3787   00089C  6E5C               	movwf	_sec^0,c
  3788   00089E                     
  3789                           ; BSR set to: 0
  3790                           ;common.c: 158:                 once = 1;
  3791   00089E  0E00               	movlw	0
  3792   0008A0  6FE2               	movwf	(_once@common$F327+1)& (0+255),b
  3793   0008A2  0E01               	movlw	1
  3794   0008A4  6FE1               	movwf	_once@common$F327& (0+255),b
  3795   0008A6  EFAC  F004         	goto	l403
  3796   0008AA                     l390:
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;common.c: 161:     } else {
  3800   0008AA  EFAC  F004         	goto	l403
  3801   0008AE                     l4266:
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;common.c: 162:         clcd_write(0x0C, 0);
  3805   0008AE  0E00               	movlw	0
  3806   0008B0  6E01               	movwf	clcd_write@control_bit^0,c
  3807   0008B2  0E0C               	movlw	12
  3808   0008B4  EC25  F015         	call	_clcd_write
  3809   0008B8                     
  3810                           ;common.c: 163:         clcd_print("  USER BLOCKED  ", (0x80 + (0)));
  3811   0008B8  0EC0               	movlw	low STR_8
  3812   0008BA  6E07               	movwf	clcd_print@data^0,c
  3813   0008BC  0E2E               	movlw	high STR_8
  3814   0008BE  6E08               	movwf	(clcd_print@data+1)^0,c
  3815   0008C0  0E80               	movlw	128
  3816   0008C2  6E09               	movwf	clcd_print@addr^0,c
  3817   0008C4  EC06  F014         	call	_clcd_print	;wreg free
  3818   0008C8                     
  3819                           ;common.c: 164:         clcd_print(" WAIT :    SEC", (0xC0 + (0)));
  3820   0008C8  0E54               	movlw	low STR_9
  3821   0008CA  6E07               	movwf	clcd_print@data^0,c
  3822   0008CC  0E2F               	movlw	high STR_9
  3823   0008CE  6E08               	movwf	(clcd_print@data+1)^0,c
  3824   0008D0  0EC0               	movlw	192
  3825   0008D2  6E09               	movwf	clcd_print@addr^0,c
  3826   0008D4  EC06  F014         	call	_clcd_print	;wreg free
  3827   0008D8                     
  3828                           ;common.c: 165:         clcd_putch('0' + sec / 10, (0xC0 + (8)));
  3829   0008D8  0EC8               	movlw	200
  3830   0008DA  6E08               	movwf	clcd_putch@addr^0,c
  3831   0008DC  C05C  F001         	movff	_sec,___lwdiv@dividend
  3832   0008E0  C05D  F002         	movff	_sec+1,___lwdiv@dividend+1
  3833   0008E4  0E00               	movlw	0
  3834   0008E6  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3835   0008E8  0E0A               	movlw	10
  3836   0008EA  6E03               	movwf	___lwdiv@divisor^0,c
  3837   0008EC  ECCC  F013         	call	___lwdiv	;wreg free
  3838   0008F0  5001               	movf	?___lwdiv^0,w,c
  3839   0008F2  0F30               	addlw	48
  3840   0008F4  ECDC  F015         	call	_clcd_putch
  3841   0008F8                     
  3842                           ;common.c: 166:         clcd_putch('0' + sec % 10, (0xC0 + (9)));
  3843   0008F8  0EC9               	movlw	201
  3844   0008FA  6E08               	movwf	clcd_putch@addr^0,c
  3845   0008FC  C05C  F001         	movff	_sec,___lwmod@dividend
  3846   000900  C05D  F002         	movff	_sec+1,___lwmod@dividend+1
  3847   000904  0E00               	movlw	0
  3848   000906  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3849   000908  0E0A               	movlw	10
  3850   00090A  6E03               	movwf	___lwmod@divisor^0,c
  3851   00090C  EC3C  F014         	call	___lwmod	;wreg free
  3852   000910  5001               	movf	?___lwmod^0,w,c
  3853   000912  0F30               	addlw	48
  3854   000914  ECDC  F015         	call	_clcd_putch
  3855   000918                     
  3856                           ;common.c: 167:         if (!sec) {
  3857   000918  505C               	movf	_sec^0,w,c
  3858   00091A  105D               	iorwf	(_sec+1)^0,w,c
  3859   00091C  A4D8               	btfss	status,2,c
  3860   00091E  EF93  F004         	goto	u3641
  3861   000922  EF95  F004         	goto	u3640
  3862   000926                     u3641:
  3863   000926  EFAC  F004         	goto	l403
  3864   00092A                     u3640:
  3865   00092A                     
  3866                           ;common.c: 168:             index = 0;
  3867   00092A  0E00               	movlw	0
  3868   00092C  6E4A               	movwf	(_index@common$F326+1)^0,c
  3869   00092E  0E00               	movlw	0
  3870   000930  6E49               	movwf	_index@common$F326^0,c
  3871                           
  3872                           ;common.c: 169:             count = 0;
  3873   000932  0E00               	movlw	0
  3874   000934  0100               	movlb	0	; () banked
  3875   000936  6FB2               	movwf	(_count@common$F325+1)& (0+255),b
  3876   000938  0E00               	movlw	0
  3877   00093A  6FB1               	movwf	_count@common$F325& (0+255),b
  3878                           
  3879                           ;common.c: 170:             sec = 60;
  3880   00093C  0E00               	movlw	0
  3881   00093E  6E5D               	movwf	(_sec+1)^0,c
  3882   000940  0E3C               	movlw	60
  3883   000942  6E5C               	movwf	_sec^0,c
  3884                           
  3885                           ;common.c: 171:             flag = 1;
  3886   000944  0E01               	movlw	1
  3887   000946  6FEF               	movwf	_flag& (0+255),b
  3888                           
  3889                           ;common.c: 172:             chance = 3;
  3890   000948  0E00               	movlw	0
  3891   00094A  6FE4               	movwf	(_chance@common$F324+1)& (0+255),b
  3892   00094C  0E03               	movlw	3
  3893   00094E  6FE3               	movwf	_chance@common$F324& (0+255),b
  3894                           
  3895                           ;common.c: 173:             once = 1;
  3896   000950  0E00               	movlw	0
  3897   000952  6FE2               	movwf	(_once@common$F327+1)& (0+255),b
  3898   000954  0E01               	movlw	1
  3899   000956  6FE1               	movwf	_once@common$F327& (0+255),b
  3900   000958                     l403:
  3901   000958  0012               	return		;funcret
  3902   00095A                     __end_of_password_screen:
  3903                           	callstack 0
  3904                           
  3905 ;; *************** function _init_config *****************
  3906 ;; Defined at:
  3907 ;;		line 11 in file "main.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3921 ;;      Params:         0       0       0       0       0       0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0
  3924 ;;      Totals:         0       0       0       0       0       0       0
  3925 ;;Total ram usage:        0 bytes
  3926 ;; Hardware stack levels used: 1
  3927 ;; Hardware stack levels required when called: 7
  3928 ;; This function calls:
  3929 ;;		_init_adc
  3930 ;;		_init_clcd
  3931 ;;		_init_ds1307
  3932 ;;		_init_i2c
  3933 ;;		_init_matrix_keypad
  3934 ;;		_init_timer0
  3935 ;;		_store_event_in_eeprom
  3936 ;; This function is called by:
  3937 ;;		_main
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text6
  3942   002B58                     __ptext6:
  3943                           	callstack 0
  3944   002B58                     _init_config:
  3945                           	callstack 23
  3946   002B58                     
  3947                           ;main.c: 12:     init_matrix_keypad();
  3948   002B58  EC09  F016         	call	_init_matrix_keypad	;wreg free
  3949                           
  3950                           ;main.c: 13:     init_clcd();
  3951   002B5C  EC42  F015         	call	_init_clcd	;wreg free
  3952   002B60                     
  3953                           ;main.c: 14:     init_adc();
  3954   002B60  ECBD  F015         	call	_init_adc	;wreg free
  3955   002B64                     
  3956                           ;main.c: 15:     init_timer0();
  3957   002B64  ECE8  F015         	call	_init_timer0	;wreg free
  3958   002B68                     
  3959                           ;main.c: 16:     init_i2c();
  3960   002B68  ECF3  F015         	call	_init_i2c	;wreg free
  3961   002B6C                     
  3962                           ;main.c: 17:     init_ds1307();
  3963   002B6C  EC9D  F014         	call	_init_ds1307	;wreg free
  3964   002B70                     
  3965                           ;main.c: 19:     GIE = 1;
  3966   002B70  8EF2               	bsf	4082,7,c	;volatile
  3967   002B72                     
  3968                           ;main.c: 20:     PEIE = 1;
  3969   002B72  8CF2               	bsf	4082,6,c	;volatile
  3970   002B74                     
  3971                           ;main.c: 22:     store_event_in_eeprom();
  3972   002B74  EC20  F00E         	call	_store_event_in_eeprom	;wreg free
  3973   002B78  0012               	return		;funcret
  3974   002B7A                     __end_of_init_config:
  3975                           	callstack 0
  3976                           
  3977 ;; *************** function _init_timer0 *****************
  3978 ;; Defined at:
  3979 ;;		line 5 in file "timer0.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3993 ;;      Params:         0       0       0       0       0       0       0
  3994 ;;      Locals:         0       0       0       0       0       0       0
  3995 ;;      Temps:          0       0       0       0       0       0       0
  3996 ;;      Totals:         0       0       0       0       0       0       0
  3997 ;;Total ram usage:        0 bytes
  3998 ;; Hardware stack levels used: 1
  3999 ;; Hardware stack levels required when called: 1
  4000 ;; This function calls:
  4001 ;;		Nothing
  4002 ;; This function is called by:
  4003 ;;		_init_config
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text7
  4008   002BD0                     __ptext7:
  4009                           	callstack 0
  4010   002BD0                     _init_timer0:
  4011                           	callstack 28
  4012   002BD0                     
  4013                           ;timer0.c: 13:  T08BIT = 1;
  4014   002BD0  8CD5               	bsf	4053,6,c	;volatile
  4015                           
  4016                           ;timer0.c: 16:  T0CS = 0;
  4017   002BD2  9AD5               	bcf	4053,5,c	;volatile
  4018                           
  4019                           ;timer0.c: 19:  TMR0ON = 1;
  4020   002BD4  8ED5               	bsf	4053,7,c	;volatile
  4021                           
  4022                           ;timer0.c: 22:  PSA = 1;
  4023   002BD6  86D5               	bsf	4053,3,c	;volatile
  4024   002BD8                     
  4025                           ;timer0.c: 24:  TMR0 = 6;
  4026   002BD8  0E00               	movlw	0
  4027   002BDA  6ED7               	movwf	215,c	;volatile
  4028   002BDC  0E06               	movlw	6
  4029   002BDE  6ED6               	movwf	214,c	;volatile
  4030   002BE0                     
  4031                           ;timer0.c: 27:  TMR0IF = 0;
  4032   002BE0  94F2               	bcf	4082,2,c	;volatile
  4033   002BE2                     
  4034                           ;timer0.c: 30:  TMR0IE = 1;
  4035   002BE2  8AF2               	bsf	4082,5,c	;volatile
  4036   002BE4  0012               	return		;funcret
  4037   002BE6                     __end_of_init_timer0:
  4038                           	callstack 0
  4039                           
  4040 ;; *************** function _init_matrix_keypad *****************
  4041 ;; Defined at:
  4042 ;;		line 4 in file "matrix_keypad.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;		None
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;		None
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  1    wreg      void 
  4049 ;; Registers used:
  4050 ;;		wreg, status,2, status,0
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4056 ;;      Params:         0       0       0       0       0       0       0
  4057 ;;      Locals:         0       0       0       0       0       0       0
  4058 ;;      Temps:          0       0       0       0       0       0       0
  4059 ;;      Totals:         0       0       0       0       0       0       0
  4060 ;;Total ram usage:        0 bytes
  4061 ;; Hardware stack levels used: 1
  4062 ;; Hardware stack levels required when called: 1
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_init_config
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text8
  4071   002C12                     __ptext8:
  4072                           	callstack 0
  4073   002C12                     _init_matrix_keypad:
  4074                           	callstack 28
  4075   002C12                     
  4076                           ;matrix_keypad.c: 7:  ADCON1 = 0x0F;
  4077   002C12  0E0F               	movlw	15
  4078   002C14  6EC1               	movwf	193,c	;volatile
  4079                           
  4080                           ;matrix_keypad.c: 10:  TRISB = 0x1E;
  4081   002C16  0E1E               	movlw	30
  4082   002C18  6E93               	movwf	147,c	;volatile
  4083   002C1A                     
  4084                           ;matrix_keypad.c: 13:  RBPU = 0;
  4085   002C1A  9EF1               	bcf	4081,7,c	;volatile
  4086   002C1C                     
  4087                           ;matrix_keypad.c: 15:  PORTB = PORTB | 0xE0;
  4088   002C1C  5081               	movf	129,w,c	;volatile
  4089   002C1E  09E0               	iorlw	224
  4090   002C20  6E81               	movwf	129,c	;volatile
  4091   002C22  0012               	return		;funcret
  4092   002C24                     __end_of_init_matrix_keypad:
  4093                           	callstack 0
  4094                           
  4095 ;; *************** function _init_i2c *****************
  4096 ;; Defined at:
  4097 ;;		line 4 in file "i2c.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;		None
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4111 ;;      Params:         0       0       0       0       0       0       0
  4112 ;;      Locals:         0       0       0       0       0       0       0
  4113 ;;      Temps:          0       0       0       0       0       0       0
  4114 ;;      Totals:         0       0       0       0       0       0       0
  4115 ;;Total ram usage:        0 bytes
  4116 ;; Hardware stack levels used: 1
  4117 ;; Hardware stack levels required when called: 1
  4118 ;; This function calls:
  4119 ;;		Nothing
  4120 ;; This function is called by:
  4121 ;;		_init_config
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text9
  4126   002BE6                     __ptext9:
  4127                           	callstack 0
  4128   002BE6                     _init_i2c:
  4129                           	callstack 28
  4130   002BE6                     
  4131                           ;i2c.c: 7:  TRISC3 = 1;
  4132   002BE6  8694               	bsf	3988,3,c	;volatile
  4133                           
  4134                           ;i2c.c: 8:  TRISC4 = 1;
  4135   002BE8  8894               	bsf	3988,4,c	;volatile
  4136   002BEA                     
  4137                           ;i2c.c: 10:  SSPCON1 = 0x28;
  4138   002BEA  0E28               	movlw	40
  4139   002BEC  6EC6               	movwf	198,c	;volatile
  4140                           
  4141                           ;i2c.c: 12:  SSPADD = 0x31;
  4142   002BEE  0E31               	movlw	49
  4143   002BF0  6EC8               	movwf	200,c	;volatile
  4144   002BF2                     
  4145                           ;i2c.c: 14:  CKE = 0;
  4146   002BF2  9CC7               	bcf	4039,6,c	;volatile
  4147   002BF4                     
  4148                           ;i2c.c: 16:  SMP = 1;
  4149   002BF4  8EC7               	bsf	4039,7,c	;volatile
  4150   002BF6                     
  4151                           ;i2c.c: 18:  SSPIF = 0;
  4152   002BF6  969E               	bcf	3998,3,c	;volatile
  4153   002BF8                     
  4154                           ;i2c.c: 20:  BCLIF = 0;
  4155   002BF8  96A1               	bcf	4001,3,c	;volatile
  4156   002BFA  0012               	return		;funcret
  4157   002BFC                     __end_of_init_i2c:
  4158                           	callstack 0
  4159                           
  4160 ;; *************** function _init_ds1307 *****************
  4161 ;; Defined at:
  4162 ;;		line 41 in file "ds1307.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;		None
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  dummy           1   10[COMRAM] unsigned char 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg, status,2, status,0, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4176 ;;      Params:         0       0       0       0       0       0       0
  4177 ;;      Locals:         1       0       0       0       0       0       0
  4178 ;;      Temps:          0       0       0       0       0       0       0
  4179 ;;      Totals:         1       0       0       0       0       0       0
  4180 ;;Total ram usage:        1 bytes
  4181 ;; Hardware stack levels used: 1
  4182 ;; Hardware stack levels required when called: 5
  4183 ;; This function calls:
  4184 ;;		_read_ds1307
  4185 ;;		_write_ds1307
  4186 ;; This function is called by:
  4187 ;;		_init_config
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text10
  4192   00293A                     __ptext10:
  4193                           	callstack 0
  4194   00293A                     _init_ds1307:
  4195                           	callstack 24
  4196   00293A                     
  4197                           ;ds1307.c: 43:  unsigned char dummy;;ds1307.c: 46:  dummy = read_ds1307(0x00);
  4198   00293A  0E00               	movlw	0
  4199   00293C  EC5D  F015         	call	_read_ds1307
  4200   002940  6E0B               	movwf	init_ds1307@dummy^0,c
  4201   002942                     
  4202                           ;ds1307.c: 47:  write_ds1307(0x00, dummy | 0x80);
  4203   002942  500B               	movf	init_ds1307@dummy^0,w,c
  4204   002944  0980               	iorlw	128
  4205   002946  6E09               	movwf	write_ds1307@data^0,c
  4206   002948  0E00               	movlw	0
  4207   00294A  ECCD  F015         	call	_write_ds1307
  4208   00294E                     
  4209                           ;ds1307.c: 50:  dummy = read_ds1307(0x02);
  4210   00294E  0E02               	movlw	2
  4211   002950  EC5D  F015         	call	_read_ds1307
  4212   002954  6E0B               	movwf	init_ds1307@dummy^0,c
  4213                           
  4214                           ;ds1307.c: 51:  write_ds1307(0x02, dummy | 0x40);
  4215   002956  500B               	movf	init_ds1307@dummy^0,w,c
  4216   002958  0940               	iorlw	64
  4217   00295A  6E09               	movwf	write_ds1307@data^0,c
  4218   00295C  0E02               	movlw	2
  4219   00295E  ECCD  F015         	call	_write_ds1307
  4220   002962                     
  4221                           ;ds1307.c: 66:  write_ds1307(0x07, 0x93);
  4222   002962  0E93               	movlw	147
  4223   002964  6E09               	movwf	write_ds1307@data^0,c
  4224   002966  0E07               	movlw	7
  4225   002968  ECCD  F015         	call	_write_ds1307
  4226   00296C                     
  4227                           ;ds1307.c: 69:  dummy = read_ds1307(0x00);
  4228   00296C  0E00               	movlw	0
  4229   00296E  EC5D  F015         	call	_read_ds1307
  4230   002972  6E0B               	movwf	init_ds1307@dummy^0,c
  4231                           
  4232                           ;ds1307.c: 70:  write_ds1307(0x00, dummy & 0x7F);
  4233   002974  500B               	movf	init_ds1307@dummy^0,w,c
  4234   002976  0B7F               	andlw	127
  4235   002978  6E09               	movwf	write_ds1307@data^0,c
  4236   00297A  0E00               	movlw	0
  4237   00297C  ECCD  F015         	call	_write_ds1307
  4238   002980  0012               	return		;funcret
  4239   002982                     __end_of_init_ds1307:
  4240                           	callstack 0
  4241                           
  4242 ;; *************** function _write_ds1307 *****************
  4243 ;; Defined at:
  4244 ;;		line 74 in file "ds1307.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  address         1    wreg     unsigned char 
  4247 ;;  data            1    8[COMRAM] unsigned char 
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;  address         1    9[COMRAM] unsigned char 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2, cstack
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4259 ;;      Params:         1       0       0       0       0       0       0
  4260 ;;      Locals:         1       0       0       0       0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0
  4262 ;;      Totals:         2       0       0       0       0       0       0
  4263 ;;Total ram usage:        2 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; Hardware stack levels required when called: 3
  4266 ;; This function calls:
  4267 ;;		_i2c_start
  4268 ;;		_i2c_stop
  4269 ;;		_i2c_write
  4270 ;; This function is called by:
  4271 ;;		_set_time
  4272 ;;		_init_ds1307
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text11
  4277   002B9A                     __ptext11:
  4278                           	callstack 0
  4279   002B9A                     _write_ds1307:
  4280                           	callstack 26
  4281                           
  4282                           ;incstack = 0
  4283                           ;write_ds1307@address stored from wreg
  4284   002B9A  6E0A               	movwf	write_ds1307@address^0,c
  4285   002B9C                     
  4286                           ;ds1307.c: 74: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 75
      +                          : {;ds1307.c: 76:  i2c_start();
  4287   002B9C  EC34  F016         	call	_i2c_start	;wreg free
  4288   002BA0                     
  4289                           ;ds1307.c: 77:  i2c_write(0xD0);
  4290   002BA0  0ED0               	movlw	208
  4291   002BA2  EC24  F016         	call	_i2c_write
  4292   002BA6                     
  4293                           ;ds1307.c: 78:  i2c_write(address);
  4294   002BA6  500A               	movf	write_ds1307@address^0,w,c
  4295   002BA8  EC24  F016         	call	_i2c_write
  4296   002BAC                     
  4297                           ;ds1307.c: 79:  i2c_write(data);
  4298   002BAC  5009               	movf	write_ds1307@data^0,w,c
  4299   002BAE  EC24  F016         	call	_i2c_write
  4300   002BB2                     
  4301                           ;ds1307.c: 80:  i2c_stop();
  4302   002BB2  EC30  F016         	call	_i2c_stop	;wreg free
  4303   002BB6  0012               	return		;funcret
  4304   002BB8                     __end_of_write_ds1307:
  4305                           	callstack 0
  4306                           
  4307 ;; *************** function _init_clcd *****************
  4308 ;; Defined at:
  4309 ;;		line 28 in file "clcd.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4323 ;;      Params:         0       0       0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0       0       0
  4326 ;;      Totals:         0       0       0       0       0       0       0
  4327 ;;Total ram usage:        0 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; Hardware stack levels required when called: 2
  4330 ;; This function calls:
  4331 ;;		_clcd_write
  4332 ;; This function is called by:
  4333 ;;		_init_config
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text12
  4338   002A84                     __ptext12:
  4339                           	callstack 0
  4340   002A84                     _init_clcd:
  4341                           	callstack 27
  4342   002A84                     
  4343                           ;clcd.c: 31:  TRISD = 0x00;
  4344   002A84  0E00               	movlw	0
  4345   002A86  6E95               	movwf	149,c	;volatile
  4346   002A88                     
  4347                           ;clcd.c: 33:  TRISC = TRISC & 0xF8;
  4348   002A88  5094               	movf	148,w,c	;volatile
  4349   002A8A  0BF8               	andlw	248
  4350   002A8C  6E94               	movwf	148,c	;volatile
  4351   002A8E                     
  4352                           ;clcd.c: 35:  RC0 = 0;
  4353   002A8E  9082               	bcf	3970,0,c	;volatile
  4354   002A90                     
  4355                           ;clcd.c: 37:  clcd_write(0x02, 0);
  4356   002A90  0E00               	movlw	0
  4357   002A92  6E01               	movwf	clcd_write@control_bit^0,c
  4358   002A94  0E02               	movlw	2
  4359   002A96  EC25  F015         	call	_clcd_write
  4360   002A9A                     
  4361                           ;clcd.c: 38:  clcd_write(0x38, 0);
  4362   002A9A  0E00               	movlw	0
  4363   002A9C  6E01               	movwf	clcd_write@control_bit^0,c
  4364   002A9E  0E38               	movlw	56
  4365   002AA0  EC25  F015         	call	_clcd_write
  4366   002AA4                     
  4367                           ;clcd.c: 39:  clcd_write(0x0C, 0);
  4368   002AA4  0E00               	movlw	0
  4369   002AA6  6E01               	movwf	clcd_write@control_bit^0,c
  4370   002AA8  0E0C               	movlw	12
  4371   002AAA  EC25  F015         	call	_clcd_write
  4372   002AAE                     
  4373                           ;clcd.c: 40:  clcd_write(0x01, 0);
  4374   002AAE  0E00               	movlw	0
  4375   002AB0  6E01               	movwf	clcd_write@control_bit^0,c
  4376   002AB2  0E01               	movlw	1
  4377   002AB4  EC25  F015         	call	_clcd_write
  4378   002AB8  0012               	return		;funcret
  4379   002ABA                     __end_of_init_clcd:
  4380                           	callstack 0
  4381                           
  4382 ;; *************** function _init_adc *****************
  4383 ;; Defined at:
  4384 ;;		line 4 in file "adc.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;		None
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;		None
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  1    wreg      void 
  4391 ;; Registers used:
  4392 ;;		wreg, status,2
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4398 ;;      Params:         0       0       0       0       0       0       0
  4399 ;;      Locals:         0       0       0       0       0       0       0
  4400 ;;      Temps:          0       0       0       0       0       0       0
  4401 ;;      Totals:         0       0       0       0       0       0       0
  4402 ;;Total ram usage:        0 bytes
  4403 ;; Hardware stack levels used: 1
  4404 ;; Hardware stack levels required when called: 1
  4405 ;; This function calls:
  4406 ;;		Nothing
  4407 ;; This function is called by:
  4408 ;;		_init_config
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           	psect	text13
  4413   002B7A                     __ptext13:
  4414                           	callstack 0
  4415   002B7A                     _init_adc:
  4416                           	callstack 28
  4417   002B7A                     
  4418                           ;adc.c: 7:  ADFM = 1;
  4419   002B7A  8EC0               	bsf	4032,7,c	;volatile
  4420                           
  4421                           ;adc.c: 13:  ACQT2 = 0;
  4422   002B7C  9AC0               	bcf	4032,5,c	;volatile
  4423                           
  4424                           ;adc.c: 14:  ACQT1 = 1;
  4425   002B7E  88C0               	bsf	4032,4,c	;volatile
  4426                           
  4427                           ;adc.c: 15:  ACQT0 = 0;
  4428   002B80  96C0               	bcf	4032,3,c	;volatile
  4429                           
  4430                           ;adc.c: 21:  ADCS0 = 0;
  4431   002B82  90C0               	bcf	4032,0,c	;volatile
  4432                           
  4433                           ;adc.c: 22:  ADCS1 = 1;
  4434   002B84  82C0               	bsf	4032,1,c	;volatile
  4435                           
  4436                           ;adc.c: 23:  ADCS2 = 0;
  4437   002B86  94C0               	bcf	4032,2,c	;volatile
  4438                           
  4439                           ;adc.c: 26:  GODONE = 0;
  4440   002B88  92C2               	bcf	4034,1,c	;volatile
  4441                           
  4442                           ;adc.c: 31:  VCFG1 = 0;
  4443   002B8A  9AC1               	bcf	4033,5,c	;volatile
  4444                           
  4445                           ;adc.c: 33:  VCFG0 = 0;
  4446   002B8C  98C1               	bcf	4033,4,c	;volatile
  4447   002B8E                     
  4448                           ;adc.c: 36:  ADRESH = 0;
  4449   002B8E  0E00               	movlw	0
  4450   002B90  6EC4               	movwf	196,c	;volatile
  4451                           
  4452                           ;adc.c: 37:  ADRESL = 0;
  4453   002B92  0E00               	movlw	0
  4454   002B94  6EC3               	movwf	195,c	;volatile
  4455   002B96                     
  4456                           ;adc.c: 40:  ADON = 1;
  4457   002B96  80C2               	bsf	4034,0,c	;volatile
  4458   002B98  0012               	return		;funcret
  4459   002B9A                     __end_of_init_adc:
  4460                           	callstack 0
  4461                           
  4462 ;; *************** function _download_log *****************
  4463 ;; Defined at:
  4464 ;;		line 252 in file "common.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;		None
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;  y               4   14[COMRAM] unsigned long 
  4469 ;;  i               2   18[COMRAM] int 
  4470 ;;  y               4   10[COMRAM] unsigned long 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4480 ;;      Params:         0       0       0       0       0       0       0
  4481 ;;      Locals:        10       0       0       0       0       0       0
  4482 ;;      Temps:          1       0       0       0       0       0       0
  4483 ;;      Totals:        11       0       0       0       0       0       0
  4484 ;;Total ram usage:       11 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; Hardware stack levels required when called: 5
  4487 ;; This function calls:
  4488 ;;		___lwdiv
  4489 ;;		___lwmod
  4490 ;;		_clcd_print
  4491 ;;		_clcd_write
  4492 ;;		_init_uart
  4493 ;;		_putch
  4494 ;;		_puts
  4495 ;;		_read_external_eeprom
  4496 ;; This function is called by:
  4497 ;;		_main
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text14
  4502   001A24                     __ptext14:
  4503                           	callstack 0
  4504   001A24                     _download_log:
  4505                           	callstack 25
  4506   001A24                     
  4507                           ;common.c: 253:     init_uart();
  4508   001A24  EC12  F016         	call	_init_uart	;wreg free
  4509   001A28                     
  4510                           ;common.c: 254:     address = 0x00;
  4511   001A28  0E00               	movlw	0
  4512   001A2A  6E44               	movwf	(_address+1)^0,c
  4513   001A2C  0E00               	movlw	0
  4514   001A2E  6E43               	movwf	_address^0,c
  4515   001A30                     
  4516                           ;common.c: 255:     clcd_print("DOWNLOADING...", (0x80 + (0)));
  4517   001A30  0E45               	movlw	low STR_12
  4518   001A32  6E07               	movwf	clcd_print@data^0,c
  4519   001A34  0E2F               	movlw	high STR_12
  4520   001A36  6E08               	movwf	(clcd_print@data+1)^0,c
  4521   001A38  0E80               	movlw	128
  4522   001A3A  6E09               	movwf	clcd_print@addr^0,c
  4523   001A3C  EC06  F014         	call	_clcd_print	;wreg free
  4524   001A40                     
  4525                           ;common.c: 256:     for (unsigned long y = 0xFFFFA; --y;);
  4526   001A40  0EFA               	movlw	250
  4527   001A42  6E0B               	movwf	download_log@y^0,c
  4528   001A44  0EFF               	movlw	255
  4529   001A46  6E0C               	movwf	(download_log@y+1)^0,c
  4530   001A48  0E0F               	movlw	15
  4531   001A4A  6E0D               	movwf	(download_log@y+2)^0,c
  4532   001A4C  0E00               	movlw	0
  4533   001A4E  6E0E               	movwf	(download_log@y+3)^0,c
  4534   001A50                     l4384:
  4535   001A50  060B               	decf	download_log@y^0,f,c
  4536   001A52  0E00               	movlw	0
  4537   001A54  5A0C               	subwfb	(download_log@y+1)^0,f,c
  4538   001A56  5A0D               	subwfb	(download_log@y+2)^0,f,c
  4539   001A58  5A0E               	subwfb	(download_log@y+3)^0,f,c
  4540   001A5A  500B               	movf	download_log@y^0,w,c
  4541   001A5C  100C               	iorwf	(download_log@y+1)^0,w,c
  4542   001A5E  100D               	iorwf	(download_log@y+2)^0,w,c
  4543   001A60  100E               	iorwf	(download_log@y+3)^0,w,c
  4544   001A62  A4D8               	btfss	status,2,c
  4545   001A64  EF36  F00D         	goto	u3761
  4546   001A68  EF38  F00D         	goto	u3760
  4547   001A6C                     u3761:
  4548   001A6C  EF28  F00D         	goto	l4384
  4549   001A70                     u3760:
  4550   001A70                     
  4551                           ;common.c: 257:     puts("#  TIME EV SP\n\r");
  4552   001A70  0E15               	movlw	low STR_13
  4553   001A72  6E02               	movwf	puts@s^0,c
  4554   001A74  0E2F               	movlw	high STR_13
  4555   001A76  6E03               	movwf	(puts@s+1)^0,c
  4556   001A78  EC6E  F014         	call	_puts	;wreg free
  4557                           
  4558                           ;common.c: 258:     puts("\n\r");
  4559   001A7C  0E22               	movlw	low (STR_13+13)
  4560   001A7E  6E02               	movwf	puts@s^0,c
  4561   001A80  0E2F               	movlw	high (STR_13+13)
  4562   001A82  6E03               	movwf	(puts@s+1)^0,c
  4563   001A84  EC6E  F014         	call	_puts	;wreg free
  4564   001A88                     
  4565                           ;common.c: 259:     if (no_of_event > 0) {
  4566   001A88  505A               	movf	_no_of_event^0,w,c
  4567   001A8A  105B               	iorwf	(_no_of_event+1)^0,w,c
  4568   001A8C  B4D8               	btfsc	status,2,c
  4569   001A8E  EF4B  F00D         	goto	u3771
  4570   001A92  EF4D  F00D         	goto	u3770
  4571   001A96                     u3771:
  4572   001A96  EF03  F00E         	goto	l4444
  4573   001A9A                     u3770:
  4574   001A9A                     
  4575                           ;common.c: 260:         for (int i = 0; i < no_of_event; i++) {
  4576   001A9A  0E00               	movlw	0
  4577   001A9C  6E14               	movwf	(download_log@i+1)^0,c
  4578   001A9E  0E00               	movlw	0
  4579   001AA0  6E13               	movwf	download_log@i^0,c
  4580   001AA2  EFD6  F00D         	goto	l4436
  4581   001AA6                     l4392:
  4582                           
  4583                           ;common.c: 261:             print[0] = read_external_eeprom(0x00 + address);
  4584   001AA6  5043               	movf	_address^0,w,c
  4585   001AA8  EC72  F015         	call	_read_external_eeprom
  4586   001AAC  0100               	movlb	0	; () banked
  4587   001AAE  6FC0               	movwf	_print& (0+255),b
  4588   001AB0                     
  4589                           ; BSR set to: 0
  4590                           ;common.c: 262:             print[1] = read_external_eeprom(0x01 + address);
  4591   001AB0  2843               	incf	_address^0,w,c
  4592   001AB2  EC72  F015         	call	_read_external_eeprom
  4593   001AB6  0100               	movlb	0	; () banked
  4594   001AB8  6FC1               	movwf	(_print+1)& (0+255),b
  4595   001ABA                     
  4596                           ; BSR set to: 0
  4597                           ;common.c: 263:             print[2] = read_external_eeprom(0x02 + address);
  4598   001ABA  5043               	movf	_address^0,w,c
  4599   001ABC  0F02               	addlw	2
  4600   001ABE  EC72  F015         	call	_read_external_eeprom
  4601   001AC2  0100               	movlb	0	; () banked
  4602   001AC4  6FC2               	movwf	(_print+2)& (0+255),b
  4603   001AC6                     
  4604                           ; BSR set to: 0
  4605                           ;common.c: 264:             print[3] = read_external_eeprom(0x03 + address);
  4606   001AC6  5043               	movf	_address^0,w,c
  4607   001AC8  0F03               	addlw	3
  4608   001ACA  EC72  F015         	call	_read_external_eeprom
  4609   001ACE  0100               	movlb	0	; () banked
  4610   001AD0  6FC3               	movwf	(_print+3)& (0+255),b
  4611   001AD2                     
  4612                           ; BSR set to: 0
  4613                           ;common.c: 265:             print[4] = read_external_eeprom(0x04 + address);
  4614   001AD2  5043               	movf	_address^0,w,c
  4615   001AD4  0F04               	addlw	4
  4616   001AD6  EC72  F015         	call	_read_external_eeprom
  4617   001ADA  0100               	movlb	0	; () banked
  4618   001ADC  6FC4               	movwf	(_print+4)& (0+255),b
  4619   001ADE                     
  4620                           ; BSR set to: 0
  4621                           ;common.c: 266:             print[5] = read_external_eeprom(0x05 + address);
  4622   001ADE  5043               	movf	_address^0,w,c
  4623   001AE0  0F05               	addlw	5
  4624   001AE2  EC72  F015         	call	_read_external_eeprom
  4625   001AE6  0100               	movlb	0	; () banked
  4626   001AE8  6FC5               	movwf	(_print+5)& (0+255),b
  4627   001AEA                     
  4628                           ; BSR set to: 0
  4629                           ;common.c: 267:             print[6] = read_external_eeprom(0x06 + address);
  4630   001AEA  5043               	movf	_address^0,w,c
  4631   001AEC  0F06               	addlw	6
  4632   001AEE  EC72  F015         	call	_read_external_eeprom
  4633   001AF2  0100               	movlb	0	; () banked
  4634   001AF4  6FC6               	movwf	(_print+6)& (0+255),b
  4635   001AF6                     
  4636                           ; BSR set to: 0
  4637                           ;common.c: 268:             print[7] = read_external_eeprom(0x07 + address);
  4638   001AF6  5043               	movf	_address^0,w,c
  4639   001AF8  0F07               	addlw	7
  4640   001AFA  EC72  F015         	call	_read_external_eeprom
  4641   001AFE  0100               	movlb	0	; () banked
  4642   001B00  6FC7               	movwf	(_print+7)& (0+255),b
  4643   001B02                     
  4644                           ; BSR set to: 0
  4645                           ;common.c: 269:             print[8] = ' ';
  4646   001B02  0E20               	movlw	32
  4647   001B04  6FC8               	movwf	(_print+8)& (0+255),b
  4648   001B06                     
  4649                           ; BSR set to: 0
  4650                           ;common.c: 270:             print[9] = read_external_eeprom(0x08 + address);
  4651   001B06  5043               	movf	_address^0,w,c
  4652   001B08  0F08               	addlw	8
  4653   001B0A  EC72  F015         	call	_read_external_eeprom
  4654   001B0E  0100               	movlb	0	; () banked
  4655   001B10  6FC9               	movwf	(_print+9)& (0+255),b
  4656   001B12                     
  4657                           ; BSR set to: 0
  4658                           ;common.c: 271:             print[10] = read_external_eeprom(0X09 + address);
  4659   001B12  5043               	movf	_address^0,w,c
  4660   001B14  0F09               	addlw	9
  4661   001B16  EC72  F015         	call	_read_external_eeprom
  4662   001B1A  0100               	movlb	0	; () banked
  4663   001B1C  6FCA               	movwf	(_print+10)& (0+255),b
  4664   001B1E                     
  4665                           ; BSR set to: 0
  4666                           ;common.c: 272:             print[11] = '\0';
  4667   001B1E  0E00               	movlw	0
  4668   001B20  6FCB               	movwf	(_print+11)& (0+255),b
  4669   001B22                     
  4670                           ; BSR set to: 0
  4671                           ;common.c: 273:             pk = read_external_eeprom(0x0A + address);
  4672   001B22  5043               	movf	_address^0,w,c
  4673   001B24  0F0A               	addlw	10
  4674   001B26  EC72  F015         	call	_read_external_eeprom
  4675   001B2A  6E0A               	movwf	??_download_log^0,c
  4676   001B2C  500A               	movf	??_download_log^0,w,c
  4677   001B2E  0100               	movlb	0	; () banked
  4678   001B30  6FAF               	movwf	_pk& (0+255),b
  4679   001B32  6BB0               	clrf	(_pk+1)& (0+255),b
  4680   001B34                     
  4681                           ; BSR set to: 0
  4682                           ;common.c: 275:             putch(i + '0');
  4683   001B34  5013               	movf	download_log@i^0,w,c
  4684   001B36  0F30               	addlw	48
  4685   001B38  ECFE  F015         	call	_putch
  4686   001B3C                     
  4687                           ;common.c: 276:             puts("  ");
  4688   001B3C  0ECE               	movlw	low (STR_8+14)
  4689   001B3E  6E02               	movwf	puts@s^0,c
  4690   001B40  0E2E               	movlw	high (STR_8+14)
  4691   001B42  6E03               	movwf	(puts@s+1)^0,c
  4692   001B44  EC6E  F014         	call	_puts	;wreg free
  4693   001B48                     
  4694                           ;common.c: 277:             puts(print);
  4695   001B48  0EC0               	movlw	low _print
  4696   001B4A  6E02               	movwf	puts@s^0,c
  4697   001B4C  6A03               	clrf	(puts@s+1)^0,c
  4698   001B4E  EC6E  F014         	call	_puts	;wreg free
  4699   001B52                     
  4700                           ;common.c: 278:             putch(' ');
  4701   001B52  0E20               	movlw	32
  4702   001B54  ECFE  F015         	call	_putch
  4703   001B58                     
  4704                           ;common.c: 279:             putch((pk / 10) + '0');
  4705   001B58  C0AF  F001         	movff	_pk,___lwdiv@dividend
  4706   001B5C  C0B0  F002         	movff	_pk+1,___lwdiv@dividend+1
  4707   001B60  0E00               	movlw	0
  4708   001B62  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  4709   001B64  0E0A               	movlw	10
  4710   001B66  6E03               	movwf	___lwdiv@divisor^0,c
  4711   001B68  ECCC  F013         	call	___lwdiv	;wreg free
  4712   001B6C  5001               	movf	?___lwdiv^0,w,c
  4713   001B6E  0F30               	addlw	48
  4714   001B70  ECFE  F015         	call	_putch
  4715   001B74                     
  4716                           ;common.c: 280:             putch((pk % 10) + '0');
  4717   001B74  C0AF  F001         	movff	_pk,___lwmod@dividend
  4718   001B78  C0B0  F002         	movff	_pk+1,___lwmod@dividend+1
  4719   001B7C  0E00               	movlw	0
  4720   001B7E  6E04               	movwf	(___lwmod@divisor+1)^0,c
  4721   001B80  0E0A               	movlw	10
  4722   001B82  6E03               	movwf	___lwmod@divisor^0,c
  4723   001B84  EC3C  F014         	call	___lwmod	;wreg free
  4724   001B88  5001               	movf	?___lwmod^0,w,c
  4725   001B8A  0F30               	addlw	48
  4726   001B8C  ECFE  F015         	call	_putch
  4727   001B90                     
  4728                           ;common.c: 281:             puts("\n\r");
  4729   001B90  0E22               	movlw	low (STR_13+13)
  4730   001B92  6E02               	movwf	puts@s^0,c
  4731   001B94  0E2F               	movlw	high (STR_13+13)
  4732   001B96  6E03               	movwf	(puts@s+1)^0,c
  4733   001B98  EC6E  F014         	call	_puts	;wreg free
  4734   001B9C                     
  4735                           ;common.c: 282:             address = address + 11;
  4736   001B9C  0E0B               	movlw	11
  4737   001B9E  2443               	addwf	_address^0,w,c
  4738   001BA0  6E43               	movwf	_address^0,c
  4739   001BA2  0E00               	movlw	0
  4740   001BA4  2044               	addwfc	(_address+1)^0,w,c
  4741   001BA6  6E44               	movwf	(_address+1)^0,c
  4742   001BA8                     
  4743                           ;common.c: 283:         }
  4744   001BA8  4A13               	infsnz	download_log@i^0,f,c
  4745   001BAA  2A14               	incf	(download_log@i+1)^0,f,c
  4746   001BAC                     l4436:
  4747   001BAC  505A               	movf	_no_of_event^0,w,c
  4748   001BAE  5C13               	subwf	download_log@i^0,w,c
  4749   001BB0  505B               	movf	(_no_of_event+1)^0,w,c
  4750   001BB2  5814               	subwfb	(download_log@i+1)^0,w,c
  4751   001BB4  A0D8               	btfss	status,0,c
  4752   001BB6  EFDF  F00D         	goto	u3781
  4753   001BBA  EFE1  F00D         	goto	u3780
  4754   001BBE                     u3781:
  4755   001BBE  EF53  F00D         	goto	l4392
  4756   001BC2                     u3780:
  4757   001BC2                     
  4758                           ;common.c: 284:         clcd_print("DOWNLOAD COMPLETED", (0x80 + (0)));
  4759   001BC2  0EAD               	movlw	low STR_17
  4760   001BC4  6E07               	movwf	clcd_print@data^0,c
  4761   001BC6  0E2E               	movlw	high STR_17
  4762   001BC8  6E08               	movwf	(clcd_print@data+1)^0,c
  4763   001BCA  0E80               	movlw	128
  4764   001BCC  6E09               	movwf	clcd_print@addr^0,c
  4765   001BCE  EC06  F014         	call	_clcd_print	;wreg free
  4766   001BD2                     
  4767                           ;common.c: 285:         for (unsigned long y = 0xFFFFA; --y;);
  4768   001BD2  0EFA               	movlw	250
  4769   001BD4  6E0F               	movwf	download_log@y_378^0,c
  4770   001BD6  0EFF               	movlw	255
  4771   001BD8  6E10               	movwf	(download_log@y_378+1)^0,c
  4772   001BDA  0E0F               	movlw	15
  4773   001BDC  6E11               	movwf	(download_log@y_378+2)^0,c
  4774   001BDE  0E00               	movlw	0
  4775   001BE0  6E12               	movwf	(download_log@y_378+3)^0,c
  4776   001BE2                     l4442:
  4777   001BE2  060F               	decf	download_log@y_378^0,f,c
  4778   001BE4  0E00               	movlw	0
  4779   001BE6  5A10               	subwfb	(download_log@y_378+1)^0,f,c
  4780   001BE8  5A11               	subwfb	(download_log@y_378+2)^0,f,c
  4781   001BEA  5A12               	subwfb	(download_log@y_378+3)^0,f,c
  4782   001BEC  500F               	movf	download_log@y_378^0,w,c
  4783   001BEE  1010               	iorwf	(download_log@y_378+1)^0,w,c
  4784   001BF0  1011               	iorwf	(download_log@y_378+2)^0,w,c
  4785   001BF2  1012               	iorwf	(download_log@y_378+3)^0,w,c
  4786   001BF4  A4D8               	btfss	status,2,c
  4787   001BF6  EFFF  F00D         	goto	u3791
  4788   001BFA  EF01  F00E         	goto	u3790
  4789   001BFE                     u3791:
  4790   001BFE  EFF1  F00D         	goto	l4442
  4791   001C02                     u3790:
  4792   001C02  EF09  F00E         	goto	l4446
  4793   001C06                     l4444:
  4794                           
  4795                           ;common.c: 287:         puts("DOWNLOAD LOG IS EMPTY\n\r");
  4796   001C06  0E95               	movlw	low STR_18
  4797   001C08  6E02               	movwf	puts@s^0,c
  4798   001C0A  0E2E               	movlw	high STR_18
  4799   001C0C  6E03               	movwf	(puts@s+1)^0,c
  4800   001C0E  EC6E  F014         	call	_puts	;wreg free
  4801   001C12                     l4446:
  4802                           
  4803                           ;common.c: 289:     SCREEN_FLAG = 0;
  4804   001C12  0E00               	movlw	0
  4805   001C14  6E52               	movwf	(_SCREEN_FLAG+1)^0,c
  4806   001C16  0E00               	movlw	0
  4807   001C18  6E51               	movwf	_SCREEN_FLAG^0,c
  4808   001C1A                     
  4809                           ;common.c: 290:     clcd_write(0x01, 0);
  4810   001C1A  0E00               	movlw	0
  4811   001C1C  6E01               	movwf	clcd_write@control_bit^0,c
  4812   001C1E  0E01               	movlw	1
  4813   001C20  EC25  F015         	call	_clcd_write
  4814   001C24                     
  4815                           ;common.c: 291:     flag = 1;
  4816   001C24  0E01               	movlw	1
  4817   001C26  0100               	movlb	0	; () banked
  4818   001C28  6FEF               	movwf	_flag& (0+255),b
  4819   001C2A                     
  4820                           ; BSR set to: 0
  4821                           ;common.c: 292:     NEW_KEY = 0;
  4822   001C2A  0E00               	movlw	0
  4823   001C2C  6E56               	movwf	_NEW_KEY^0,c
  4824   001C2E                     
  4825                           ; BSR set to: 0
  4826                           ;common.c: 293:     MENU_FLAG = 0;
  4827   001C2E  0E00               	movlw	0
  4828   001C30  6E50               	movwf	(_MENU_FLAG+1)^0,c
  4829   001C32  0E00               	movlw	0
  4830   001C34  6E4F               	movwf	_MENU_FLAG^0,c
  4831   001C36                     
  4832                           ; BSR set to: 0
  4833                           ;common.c: 294:     address = 0x00;
  4834   001C36  0E00               	movlw	0
  4835   001C38  6E44               	movwf	(_address+1)^0,c
  4836   001C3A  0E00               	movlw	0
  4837   001C3C  6E43               	movwf	_address^0,c
  4838   001C3E                     
  4839                           ; BSR set to: 0
  4840   001C3E  0012               	return		;funcret
  4841   001C40                     __end_of_download_log:
  4842                           	callstack 0
  4843                           
  4844 ;; *************** function _puts *****************
  4845 ;; Defined at:
  4846 ;;		line 40 in file "uart.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;  s               2    1[COMRAM] PTR const unsigned char 
  4849 ;;		 -> STR_18(24), STR_16(3), STR_15(3), STR_14(3), 
  4850 ;;		 -> STR_13(16), print(12), 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  2    1[COMRAM] int 
  4855 ;; Registers used:
  4856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4862 ;;      Params:         2       0       0       0       0       0       0
  4863 ;;      Locals:         0       0       0       0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0       0       0
  4865 ;;      Totals:         2       0       0       0       0       0       0
  4866 ;;Total ram usage:        2 bytes
  4867 ;; Hardware stack levels used: 1
  4868 ;; Hardware stack levels required when called: 2
  4869 ;; This function calls:
  4870 ;;		_putch
  4871 ;; This function is called by:
  4872 ;;		_download_log
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           	psect	text15
  4877   0028DC                     __ptext15:
  4878                           	callstack 0
  4879   0028DC                     _puts:
  4880                           	callstack 27
  4881   0028DC                     
  4882                           ;uart.c: 40: int puts(const char *s);uart.c: 41: {;uart.c: 42:  while(*s)
  4883   0028DC  EF84  F014         	goto	l3662
  4884   0028E0                     l3658:
  4885                           
  4886                           ;uart.c: 43:  {;uart.c: 44:   putch(*s++);
  4887   0028E0  C002  FFF6         	movff	puts@s,tblptrl
  4888   0028E4  C003  FFF7         	movff	puts@s+1,tblptrh
  4889   0028E8  6AF8               	clrf	tblptru,c
  4890   0028EA  0E05               	movlw	(high __ramtop+-1)
  4891   0028EC  64F7               	cpfsgt	tblptrh,c
  4892   0028EE  D003               	bra	u2637
  4893   0028F0  0008               	tblrd		*
  4894   0028F2  50F5               	movf	tablat,w,c
  4895   0028F4  D005               	bra	u2630
  4896   0028F6                     u2637:
  4897   0028F6  CFF6 FFE9          	movff	tblptrl,fsr0l
  4898   0028FA  CFF7 FFEA          	movff	tblptrh,fsr0h
  4899   0028FE  50EF               	movf	indf0,w,c
  4900   002900                     u2630:
  4901   002900  ECFE  F015         	call	_putch
  4902   002904  4A02               	infsnz	puts@s^0,f,c
  4903   002906  2A03               	incf	(puts@s+1)^0,f,c
  4904   002908                     l3662:
  4905                           
  4906                           ;uart.c: 42:  while(*s)
  4907   002908  C002  FFF6         	movff	puts@s,tblptrl
  4908   00290C  C003  FFF7         	movff	puts@s+1,tblptrh
  4909   002910  6AF8               	clrf	tblptru,c
  4910   002912  0E05               	movlw	(high __ramtop+-1)
  4911   002914  64F7               	cpfsgt	tblptrh,c
  4912   002916  D003               	bra	u2647
  4913   002918  0008               	tblrd		*
  4914   00291A  50F5               	movf	tablat,w,c
  4915   00291C  D005               	bra	u2640
  4916   00291E                     u2647:
  4917   00291E  CFF6 FFE9          	movff	tblptrl,fsr0l
  4918   002922  CFF7 FFEA          	movff	tblptrh,fsr0h
  4919   002926  50EF               	movf	indf0,w,c
  4920   002928                     u2640:
  4921   002928  0900               	iorlw	0
  4922   00292A  A4D8               	btfss	status,2,c
  4923   00292C  EF9A  F014         	goto	u2651
  4924   002930  EF9C  F014         	goto	u2650
  4925   002934                     u2651:
  4926   002934  EF70  F014         	goto	l3658
  4927   002938                     u2650:
  4928   002938  0012               	return		;funcret
  4929   00293A                     __end_of_puts:
  4930                           	callstack 0
  4931                           
  4932 ;; *************** function _putch *****************
  4933 ;; Defined at:
  4934 ;;		line 29 in file "uart.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  byte            1    wreg     unsigned char 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  byte            1    0[COMRAM] unsigned char 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      void 
  4941 ;; Registers used:
  4942 ;;		wreg
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4948 ;;      Params:         0       0       0       0       0       0       0
  4949 ;;      Locals:         1       0       0       0       0       0       0
  4950 ;;      Temps:          0       0       0       0       0       0       0
  4951 ;;      Totals:         1       0       0       0       0       0       0
  4952 ;;Total ram usage:        1 bytes
  4953 ;; Hardware stack levels used: 1
  4954 ;; Hardware stack levels required when called: 1
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_download_log
  4959 ;;		_puts
  4960 ;;		_getche
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text16
  4965   002BFC                     __ptext16:
  4966                           	callstack 0
  4967   002BFC                     _putch:
  4968                           	callstack 27
  4969                           
  4970                           ;incstack = 0
  4971                           ;putch@byte stored from wreg
  4972   002BFC  6E01               	movwf	putch@byte^0,c
  4973   002BFE                     l870:
  4974                           
  4975                           ;uart.c: 33:  while(!TXIF)
  4976   002BFE  A89E               	btfss	3998,4,c	;volatile
  4977   002C00  EF04  F016         	goto	u2471
  4978   002C04  EF06  F016         	goto	u2470
  4979   002C08                     u2471:
  4980   002C08  EFFF  F015         	goto	l870
  4981   002C0C                     u2470:
  4982   002C0C                     
  4983                           ;uart.c: 37:  TXREG = byte;
  4984   002C0C  C001  FFAD         	movff	putch@byte,4013	;volatile
  4985   002C10  0012               	return		;funcret
  4986   002C12                     __end_of_putch:
  4987                           	callstack 0
  4988                           
  4989 ;; *************** function _init_uart *****************
  4990 ;; Defined at:
  4991 ;;		line 4 in file "uart.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;		None
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;		None
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      void 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5005 ;;      Params:         0       0       0       0       0       0       0
  5006 ;;      Locals:         0       0       0       0       0       0       0
  5007 ;;      Temps:          0       0       0       0       0       0       0
  5008 ;;      Totals:         0       0       0       0       0       0       0
  5009 ;;Total ram usage:        0 bytes
  5010 ;; Hardware stack levels used: 1
  5011 ;; Hardware stack levels required when called: 1
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_download_log
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           	psect	text17
  5020   002C24                     __ptext17:
  5021                           	callstack 0
  5022   002C24                     _init_uart:
  5023                           	callstack 28
  5024   002C24                     
  5025                           ;uart.c: 7:  TRISC7 = 1;
  5026   002C24  8E94               	bsf	3988,7,c	;volatile
  5027                           
  5028                           ;uart.c: 8:  TRISC6 = 0;
  5029   002C26  9C94               	bcf	3988,6,c	;volatile
  5030                           
  5031                           ;uart.c: 11:  BRGH = 1;
  5032   002C28  84AC               	bsf	4012,2,c	;volatile
  5033                           
  5034                           ;uart.c: 12:  SPEN = 1;
  5035   002C2A  8EAB               	bsf	4011,7,c	;volatile
  5036                           
  5037                           ;uart.c: 16:  CREN = 1;
  5038   002C2C  88AB               	bsf	4011,4,c	;volatile
  5039   002C2E                     
  5040                           ;uart.c: 22:  SPBRG = 129;
  5041   002C2E  0E81               	movlw	129
  5042   002C30  6EAF               	movwf	175,c	;volatile
  5043   002C32                     
  5044                           ;uart.c: 24:     RCIE = 1;
  5045   002C32  8A9D               	bsf	3997,5,c	;volatile
  5046   002C34  0012               	return		;funcret
  5047   002C36                     __end_of_init_uart:
  5048                           	callstack 0
  5049                           
  5050 ;; *************** function _display_menu *****************
  5051 ;; Defined at:
  5052 ;;		line 509 in file "common.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5066 ;;      Params:         0       0       0       0       0       0       0
  5067 ;;      Locals:         0       0       0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0
  5069 ;;      Totals:         0       0       0       0       0       0       0
  5070 ;;Total ram usage:        0 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; Hardware stack levels required when called: 3
  5073 ;; This function calls:
  5074 ;;		___wmul
  5075 ;;		_clcd_print
  5076 ;;		_clcd_write
  5077 ;;		_read_switches
  5078 ;; This function is called by:
  5079 ;;		_main
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           	psect	text18
  5084   001746                     __ptext18:
  5085                           	callstack 0
  5086   001746                     _display_menu:
  5087                           	callstack 27
  5088   001746                     
  5089                           ;common.c: 510:     key = read_switches(0);
  5090   001746  0E00               	movlw	0
  5091   001748  EC52  F013         	call	_read_switches
  5092   00174C  6E59               	movwf	_key^0,c
  5093   00174E                     
  5094                           ;common.c: 511:     if (key == 5 || key == 6) {
  5095   00174E  0E05               	movlw	5
  5096   001750  1859               	xorwf	_key^0,w,c
  5097   001752  B4D8               	btfsc	status,2,c
  5098   001754  EFAE  F00B         	goto	u4181
  5099   001758  EFB0  F00B         	goto	u4180
  5100   00175C                     u4181:
  5101   00175C  EFB9  F00B         	goto	l4756
  5102   001760                     u4180:
  5103   001760  0E06               	movlw	6
  5104   001762  1859               	xorwf	_key^0,w,c
  5105   001764  A4D8               	btfss	status,2,c
  5106   001766  EFB7  F00B         	goto	u4191
  5107   00176A  EFB9  F00B         	goto	u4190
  5108   00176E                     u4191:
  5109   00176E  EFC1  F00B         	goto	l543
  5110   001772                     u4190:
  5111   001772                     l4756:
  5112                           
  5113                           ;common.c: 512:         delay++;
  5114   001772  0E01               	movlw	1
  5115   001774  2639               	addwf	_delay^0,f,c
  5116   001776  0E00               	movlw	0
  5117   001778  223A               	addwfc	(_delay+1)^0,f,c
  5118   00177A  223B               	addwfc	(_delay+2)^0,f,c
  5119   00177C  223C               	addwfc	(_delay+3)^0,f,c
  5120   00177E                     
  5121                           ;common.c: 513:         NEW_KEY = key;
  5122   00177E  C059  F056         	movff	_key,_NEW_KEY
  5123   001782                     l543:
  5124                           
  5125                           ;common.c: 515:     if (delay < 500 && key == 0xFF) {
  5126   001782  503C               	movf	(_delay+3)^0,w,c
  5127   001784  103B               	iorwf	(_delay+2)^0,w,c
  5128   001786  E109               	bnz	u4201
  5129   001788  0EF4               	movlw	244
  5130   00178A  5C39               	subwf	_delay^0,w,c
  5131   00178C  0E01               	movlw	1
  5132   00178E  583A               	subwfb	(_delay+1)^0,w,c
  5133   001790  B0D8               	btfsc	status,0,c
  5134   001792  EFCD  F00B         	goto	u4201
  5135   001796  EFCF  F00B         	goto	u4200
  5136   00179A                     u4201:
  5137   00179A  EF58  F00C         	goto	l4794
  5138   00179E                     u4200:
  5139   00179E  2859               	incf	_key^0,w,c
  5140   0017A0  A4D8               	btfss	status,2,c
  5141   0017A2  EFD5  F00B         	goto	u4211
  5142   0017A6  EFD7  F00B         	goto	u4210
  5143   0017AA                     u4211:
  5144   0017AA  EF58  F00C         	goto	l4794
  5145   0017AE                     u4210:
  5146   0017AE                     
  5147                           ;common.c: 516:         if (M_index < 3 && NEW_KEY == 5) {
  5148   0017AE  5040               	movf	(_M_index+1)^0,w,c
  5149   0017B0  E107               	bnz	u4221
  5150   0017B2  0E03               	movlw	3
  5151   0017B4  5C3F               	subwf	_M_index^0,w,c
  5152   0017B6  B0D8               	btfsc	status,0,c
  5153   0017B8  EFE0  F00B         	goto	u4221
  5154   0017BC  EFE2  F00B         	goto	u4220
  5155   0017C0                     u4221:
  5156   0017C0  EFFC  F00B         	goto	l4772
  5157   0017C4                     u4220:
  5158   0017C4  0E05               	movlw	5
  5159   0017C6  1856               	xorwf	_NEW_KEY^0,w,c
  5160   0017C8  A4D8               	btfss	status,2,c
  5161   0017CA  EFE9  F00B         	goto	u4231
  5162   0017CE  EFEB  F00B         	goto	u4230
  5163   0017D2                     u4231:
  5164   0017D2  EFFC  F00B         	goto	l4772
  5165   0017D6                     u4230:
  5166   0017D6                     
  5167                           ;common.c: 517:             (ARROW) ? (M_index++) : (ARROW = 1);
  5168   0017D6  503D               	movf	_ARROW^0,w,c
  5169   0017D8  103E               	iorwf	(_ARROW+1)^0,w,c
  5170   0017DA  B4D8               	btfsc	status,2,c
  5171   0017DC  EFF2  F00B         	goto	u4241
  5172   0017E0  EFF4  F00B         	goto	u4240
  5173   0017E4                     u4241:
  5174   0017E4  EFF8  F00B         	goto	l4770
  5175   0017E8                     u4240:
  5176   0017E8  4A3F               	infsnz	_M_index^0,f,c
  5177   0017EA  2A40               	incf	(_M_index+1)^0,f,c
  5178   0017EC  EFFC  F00B         	goto	l4772
  5179   0017F0                     l4770:
  5180   0017F0  0E00               	movlw	0
  5181   0017F2  6E3E               	movwf	(_ARROW+1)^0,c
  5182   0017F4  0E01               	movlw	1
  5183   0017F6  6E3D               	movwf	_ARROW^0,c
  5184   0017F8                     l4772:
  5185                           
  5186                           ;common.c: 519:         if (M_index > 0 && NEW_KEY == 6) {
  5187   0017F8  503F               	movf	_M_index^0,w,c
  5188   0017FA  1040               	iorwf	(_M_index+1)^0,w,c
  5189   0017FC  B4D8               	btfsc	status,2,c
  5190   0017FE  EF03  F00C         	goto	u4251
  5191   001802  EF05  F00C         	goto	u4250
  5192   001806                     u4251:
  5193   001806  EF22  F00C         	goto	l4782
  5194   00180A                     u4250:
  5195   00180A  0E06               	movlw	6
  5196   00180C  1856               	xorwf	_NEW_KEY^0,w,c
  5197   00180E  A4D8               	btfss	status,2,c
  5198   001810  EF0C  F00C         	goto	u4261
  5199   001814  EF0E  F00C         	goto	u4260
  5200   001818                     u4261:
  5201   001818  EF22  F00C         	goto	l4782
  5202   00181C                     u4260:
  5203   00181C                     
  5204                           ;common.c: 520:             (!ARROW) ? (M_index--) : (ARROW = 0);
  5205   00181C  503D               	movf	_ARROW^0,w,c
  5206   00181E  103E               	iorwf	(_ARROW+1)^0,w,c
  5207   001820  A4D8               	btfss	status,2,c
  5208   001822  EF15  F00C         	goto	u4271
  5209   001826  EF17  F00C         	goto	u4270
  5210   00182A                     u4271:
  5211   00182A  EF1C  F00C         	goto	l4780
  5212   00182E                     u4270:
  5213   00182E  063F               	decf	_M_index^0,f,c
  5214   001830  A0D8               	btfss	status,0,c
  5215   001832  0640               	decf	(_M_index+1)^0,f,c
  5216   001834  EF4E  F00C         	goto	l557
  5217   001838                     l4780:
  5218   001838  0E00               	movlw	0
  5219   00183A  6E3E               	movwf	(_ARROW+1)^0,c
  5220   00183C  0E00               	movlw	0
  5221   00183E  6E3D               	movwf	_ARROW^0,c
  5222   001840  EF4E  F00C         	goto	l557
  5223   001844                     l4782:
  5224   001844  0E05               	movlw	5
  5225   001846  1856               	xorwf	_NEW_KEY^0,w,c
  5226   001848  A4D8               	btfss	status,2,c
  5227   00184A  EF29  F00C         	goto	u4281
  5228   00184E  EF2B  F00C         	goto	u4280
  5229   001852                     u4281:
  5230   001852  EF3A  F00C         	goto	l4788
  5231   001856                     u4280:
  5232   001856  503D               	movf	_ARROW^0,w,c
  5233   001858  103E               	iorwf	(_ARROW+1)^0,w,c
  5234   00185A  A4D8               	btfss	status,2,c
  5235   00185C  EF32  F00C         	goto	u4291
  5236   001860  EF34  F00C         	goto	u4290
  5237   001864                     u4291:
  5238   001864  EF3A  F00C         	goto	l4788
  5239   001868                     u4290:
  5240   001868                     
  5241                           ;common.c: 522:             ARROW = 1;
  5242   001868  0E00               	movlw	0
  5243   00186A  6E3E               	movwf	(_ARROW+1)^0,c
  5244   00186C  0E01               	movlw	1
  5245   00186E  6E3D               	movwf	_ARROW^0,c
  5246                           
  5247                           ;common.c: 523:         } else if (NEW_KEY == 6 && ARROW) {
  5248   001870  EF4E  F00C         	goto	l557
  5249   001874                     l4788:
  5250   001874  0E06               	movlw	6
  5251   001876  1856               	xorwf	_NEW_KEY^0,w,c
  5252   001878  A4D8               	btfss	status,2,c
  5253   00187A  EF41  F00C         	goto	u4301
  5254   00187E  EF43  F00C         	goto	u4300
  5255   001882                     u4301:
  5256   001882  EF4E  F00C         	goto	l557
  5257   001886                     u4300:
  5258   001886  503D               	movf	_ARROW^0,w,c
  5259   001888  103E               	iorwf	(_ARROW+1)^0,w,c
  5260   00188A  B4D8               	btfsc	status,2,c
  5261   00188C  EF4A  F00C         	goto	u4311
  5262   001890  EF4C  F00C         	goto	u4310
  5263   001894                     u4311:
  5264   001894  EF4E  F00C         	goto	l557
  5265   001898                     u4310:
  5266   001898  EF1C  F00C         	goto	l4780
  5267   00189C                     l557:
  5268                           
  5269                           ;common.c: 526:         delay = 0;
  5270   00189C  0E00               	movlw	0
  5271   00189E  6E39               	movwf	_delay^0,c
  5272   0018A0  0E00               	movlw	0
  5273   0018A2  6E3A               	movwf	(_delay+1)^0,c
  5274   0018A4  0E00               	movlw	0
  5275   0018A6  6E3B               	movwf	(_delay+2)^0,c
  5276   0018A8  0E00               	movlw	0
  5277   0018AA  6E3C               	movwf	(_delay+3)^0,c
  5278                           
  5279                           ;common.c: 527:         NEW_KEY = 0;
  5280   0018AC  0E00               	movlw	0
  5281   0018AE  6E56               	movwf	_NEW_KEY^0,c
  5282   0018B0                     l4794:
  5283                           
  5284                           ;common.c: 530:     if (ARROW == 0) {
  5285   0018B0  503D               	movf	_ARROW^0,w,c
  5286   0018B2  103E               	iorwf	(_ARROW+1)^0,w,c
  5287   0018B4  A4D8               	btfss	status,2,c
  5288   0018B6  EF5F  F00C         	goto	u4321
  5289   0018BA  EF61  F00C         	goto	u4320
  5290   0018BE                     u4321:
  5291   0018BE  EF73  F00C         	goto	l4798
  5292   0018C2                     u4320:
  5293   0018C2                     
  5294                           ;common.c: 531:         clcd_print("->", (0x80 + (0)));
  5295   0018C2  0EFC               	movlw	low STR_34
  5296   0018C4  6E07               	movwf	clcd_print@data^0,c
  5297   0018C6  0E2F               	movlw	high STR_34
  5298   0018C8  6E08               	movwf	(clcd_print@data+1)^0,c
  5299   0018CA  0E80               	movlw	128
  5300   0018CC  6E09               	movwf	clcd_print@addr^0,c
  5301   0018CE  EC06  F014         	call	_clcd_print	;wreg free
  5302                           
  5303                           ;common.c: 532:         clcd_print("  ", (0xC0 + (0)));
  5304   0018D2  0ECE               	movlw	low (STR_8+14)
  5305   0018D4  6E07               	movwf	clcd_print@data^0,c
  5306   0018D6  0E2E               	movlw	high (STR_8+14)
  5307   0018D8  6E08               	movwf	(clcd_print@data+1)^0,c
  5308   0018DA  0EC0               	movlw	192
  5309   0018DC  6E09               	movwf	clcd_print@addr^0,c
  5310   0018DE  EC06  F014         	call	_clcd_print	;wreg free
  5311                           
  5312                           ;common.c: 533:     } else {
  5313   0018E2  EF83  F00C         	goto	l4800
  5314   0018E6                     l4798:
  5315                           
  5316                           ;common.c: 534:         clcd_print("  ", (0x80 + (0)));
  5317   0018E6  0ECE               	movlw	low (STR_8+14)
  5318   0018E8  6E07               	movwf	clcd_print@data^0,c
  5319   0018EA  0E2E               	movlw	high (STR_8+14)
  5320   0018EC  6E08               	movwf	(clcd_print@data+1)^0,c
  5321   0018EE  0E80               	movlw	128
  5322   0018F0  6E09               	movwf	clcd_print@addr^0,c
  5323   0018F2  EC06  F014         	call	_clcd_print	;wreg free
  5324                           
  5325                           ;common.c: 535:         clcd_print("->", (0xC0 + (0)));
  5326   0018F6  0EFC               	movlw	low STR_34
  5327   0018F8  6E07               	movwf	clcd_print@data^0,c
  5328   0018FA  0E2F               	movlw	high STR_34
  5329   0018FC  6E08               	movwf	(clcd_print@data+1)^0,c
  5330   0018FE  0EC0               	movlw	192
  5331   001900  6E09               	movwf	clcd_print@addr^0,c
  5332   001902  EC06  F014         	call	_clcd_print	;wreg free
  5333   001906                     l4800:
  5334                           
  5335                           ;common.c: 537:     clcd_print(diplay[M_index], (0x80 + (3)));
  5336   001906  C03F  F001         	movff	_M_index,___wmul@multiplier
  5337   00190A  C040  F002         	movff	_M_index+1,___wmul@multiplier+1
  5338   00190E  0E00               	movlw	0
  5339   001910  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5340   001912  0E14               	movlw	20
  5341   001914  6E03               	movwf	___wmul@multiplicand^0,c
  5342   001916  EC87  F015         	call	___wmul	;wreg free
  5343   00191A  0E00               	movlw	low _diplay
  5344   00191C  2401               	addwf	?___wmul^0,w,c
  5345   00191E  6E07               	movwf	clcd_print@data^0,c
  5346   001920  0E01               	movlw	high _diplay
  5347   001922  2002               	addwfc	(?___wmul+1)^0,w,c
  5348   001924  6E08               	movwf	(clcd_print@data+1)^0,c
  5349   001926  0E83               	movlw	131
  5350   001928  6E09               	movwf	clcd_print@addr^0,c
  5351   00192A  EC06  F014         	call	_clcd_print	;wreg free
  5352   00192E                     
  5353                           ;common.c: 538:     clcd_print(diplay[M_index + 1], (0xC0 + (3)));
  5354   00192E  C03F  F001         	movff	_M_index,___wmul@multiplier
  5355   001932  C040  F002         	movff	_M_index+1,___wmul@multiplier+1
  5356   001936  0E00               	movlw	0
  5357   001938  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5358   00193A  0E14               	movlw	20
  5359   00193C  6E03               	movwf	___wmul@multiplicand^0,c
  5360   00193E  EC87  F015         	call	___wmul	;wreg free
  5361   001942  0E14               	movlw	low (_diplay+20)
  5362   001944  2401               	addwf	?___wmul^0,w,c
  5363   001946  6E07               	movwf	clcd_print@data^0,c
  5364   001948  0E01               	movlw	high (_diplay+20)
  5365   00194A  2002               	addwfc	(?___wmul+1)^0,w,c
  5366   00194C  6E08               	movwf	(clcd_print@data+1)^0,c
  5367   00194E  0EC3               	movlw	195
  5368   001950  6E09               	movwf	clcd_print@addr^0,c
  5369   001952  EC06  F014         	call	_clcd_print	;wreg free
  5370   001956                     
  5371                           ;common.c: 541:     if (delay >= 500) {
  5372   001956  503C               	movf	(_delay+3)^0,w,c
  5373   001958  103B               	iorwf	(_delay+2)^0,w,c
  5374   00195A  E10B               	bnz	u4330
  5375   00195C  0EF4               	movlw	244
  5376   00195E  5C39               	subwf	_delay^0,w,c
  5377   001960  0E01               	movlw	1
  5378   001962  583A               	subwfb	(_delay+1)^0,w,c
  5379   001964  A0D8               	btfss	status,0,c
  5380   001966  EFB7  F00C         	goto	u4331
  5381   00196A  EFB9  F00C         	goto	u4330
  5382   00196E                     u4331:
  5383   00196E  EF11  F00D         	goto	l571
  5384   001972                     u4330:
  5385   001972                     
  5386                           ;common.c: 542:         if (NEW_KEY == 6) {
  5387   001972  0E06               	movlw	6
  5388   001974  1856               	xorwf	_NEW_KEY^0,w,c
  5389   001976  A4D8               	btfss	status,2,c
  5390   001978  EFC0  F00C         	goto	u4341
  5391   00197C  EFC2  F00C         	goto	u4340
  5392   001980                     u4341:
  5393   001980  EFE2  F00C         	goto	l4822
  5394   001984                     u4340:
  5395   001984                     
  5396                           ;common.c: 543:             clcd_write(0x01, 0);
  5397   001984  0E00               	movlw	0
  5398   001986  6E01               	movwf	clcd_write@control_bit^0,c
  5399   001988  0E01               	movlw	1
  5400   00198A  EC25  F015         	call	_clcd_write
  5401   00198E                     
  5402                           ;common.c: 544:             SCREEN_FLAG = 0;
  5403   00198E  0E00               	movlw	0
  5404   001990  6E52               	movwf	(_SCREEN_FLAG+1)^0,c
  5405   001992  0E00               	movlw	0
  5406   001994  6E51               	movwf	_SCREEN_FLAG^0,c
  5407   001996                     
  5408                           ;common.c: 545:             delay = 0;
  5409   001996  0E00               	movlw	0
  5410   001998  6E39               	movwf	_delay^0,c
  5411   00199A  0E00               	movlw	0
  5412   00199C  6E3A               	movwf	(_delay+1)^0,c
  5413   00199E  0E00               	movlw	0
  5414   0019A0  6E3B               	movwf	(_delay+2)^0,c
  5415   0019A2  0E00               	movlw	0
  5416   0019A4  6E3C               	movwf	(_delay+3)^0,c
  5417   0019A6                     
  5418                           ;common.c: 546:             flag = 1;
  5419   0019A6  0E01               	movlw	1
  5420   0019A8  0100               	movlb	0	; () banked
  5421   0019AA  6FEF               	movwf	_flag& (0+255),b
  5422   0019AC                     l4816:
  5423                           
  5424                           ;common.c: 547:             M_index = 0;
  5425   0019AC  0E00               	movlw	0
  5426   0019AE  6E40               	movwf	(_M_index+1)^0,c
  5427   0019B0  0E00               	movlw	0
  5428   0019B2  6E3F               	movwf	_M_index^0,c
  5429   0019B4                     
  5430                           ;common.c: 548:             ARROW = 0;
  5431   0019B4  0E00               	movlw	0
  5432   0019B6  6E3E               	movwf	(_ARROW+1)^0,c
  5433   0019B8  0E00               	movlw	0
  5434   0019BA  6E3D               	movwf	_ARROW^0,c
  5435   0019BC                     
  5436                           ;common.c: 549:             NEW_KEY = 0;
  5437   0019BC  0E00               	movlw	0
  5438   0019BE  6E56               	movwf	_NEW_KEY^0,c
  5439                           
  5440                           ;common.c: 550:         } else if (NEW_KEY == 5) {
  5441   0019C0  EF11  F00D         	goto	l571
  5442   0019C4                     l4822:
  5443   0019C4  0E05               	movlw	5
  5444   0019C6  1856               	xorwf	_NEW_KEY^0,w,c
  5445   0019C8  A4D8               	btfss	status,2,c
  5446   0019CA  EFE9  F00C         	goto	u4351
  5447   0019CE  EFEB  F00C         	goto	u4350
  5448   0019D2                     u4351:
  5449   0019D2  EF11  F00D         	goto	l571
  5450   0019D6                     u4350:
  5451   0019D6                     
  5452                           ;common.c: 551:             clcd_write(0x01, 0);
  5453   0019D6  0E00               	movlw	0
  5454   0019D8  6E01               	movwf	clcd_write@control_bit^0,c
  5455   0019DA  0E01               	movlw	1
  5456   0019DC  EC25  F015         	call	_clcd_write
  5457   0019E0                     
  5458                           ;common.c: 552:             MENU_FLAG = ARROW ? (M_index + 4) : (M_index + 3);
  5459   0019E0  503D               	movf	_ARROW^0,w,c
  5460   0019E2  103E               	iorwf	(_ARROW+1)^0,w,c
  5461   0019E4  A4D8               	btfss	status,2,c
  5462   0019E6  EFF7  F00C         	goto	u4361
  5463   0019EA  EFF9  F00C         	goto	u4360
  5464   0019EE                     u4361:
  5465   0019EE  EF01  F00D         	goto	l4830
  5466   0019F2                     u4360:
  5467   0019F2  0E03               	movlw	3
  5468   0019F4  243F               	addwf	_M_index^0,w,c
  5469   0019F6  6E4F               	movwf	_MENU_FLAG^0,c
  5470   0019F8  0E00               	movlw	0
  5471   0019FA  2040               	addwfc	(_M_index+1)^0,w,c
  5472   0019FC  6E50               	movwf	(_MENU_FLAG+1)^0,c
  5473   0019FE  EF07  F00D         	goto	l4832
  5474   001A02                     l4830:
  5475   001A02  0E04               	movlw	4
  5476   001A04  243F               	addwf	_M_index^0,w,c
  5477   001A06  6E4F               	movwf	_MENU_FLAG^0,c
  5478   001A08  0E00               	movlw	0
  5479   001A0A  2040               	addwfc	(_M_index+1)^0,w,c
  5480   001A0C  6E50               	movwf	(_MENU_FLAG+1)^0,c
  5481   001A0E                     l4832:
  5482                           
  5483                           ;common.c: 553:             delay = 0;
  5484   001A0E  0E00               	movlw	0
  5485   001A10  6E39               	movwf	_delay^0,c
  5486   001A12  0E00               	movlw	0
  5487   001A14  6E3A               	movwf	(_delay+1)^0,c
  5488   001A16  0E00               	movlw	0
  5489   001A18  6E3B               	movwf	(_delay+2)^0,c
  5490   001A1A  0E00               	movlw	0
  5491   001A1C  6E3C               	movwf	(_delay+3)^0,c
  5492   001A1E  EFD6  F00C         	goto	l4816
  5493   001A22                     l571:
  5494   001A22  0012               	return		;funcret
  5495   001A24                     __end_of_display_menu:
  5496                           	callstack 0
  5497                           
  5498 ;; *************** function _read_switches *****************
  5499 ;; Defined at:
  5500 ;;		line 88 in file "matrix_keypad.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;  detection_ty    1    wreg     unsigned char 
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;  detection_ty    1    0[COMRAM] unsigned char 
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      unsigned char 
  5507 ;; Registers used:
  5508 ;;		wreg, status,2, status,0, cstack
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5514 ;;      Params:         0       0       0       0       0       0       0
  5515 ;;      Locals:         1       0       0       0       0       0       0
  5516 ;;      Temps:          0       0       0       0       0       0       0
  5517 ;;      Totals:         1       0       0       0       0       0       0
  5518 ;;Total ram usage:        1 bytes
  5519 ;; Hardware stack levels used: 1
  5520 ;; Hardware stack levels required when called: 2
  5521 ;; This function calls:
  5522 ;;		_scan_key
  5523 ;; This function is called by:
  5524 ;;		_main
  5525 ;;		_view_log
  5526 ;;		_display_menu
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           	psect	text19
  5531   0026A4                     __ptext19:
  5532                           	callstack 0
  5533   0026A4                     _read_switches:
  5534                           	callstack 27
  5535                           
  5536                           ;incstack = 0
  5537                           ;read_switches@detection_type stored from wreg
  5538   0026A4  6E01               	movwf	read_switches@detection_type^0,c
  5539   0026A6                     
  5540                           ;matrix_keypad.c: 88: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 89: {;matrix_keypad.c: 90:  static unsigned char once = 1, key;;matrix_keypad.c
      +                          : 92:  if (detection_type == 1)
  5541   0026A6  0401               	decf	read_switches@detection_type^0,w,c
  5542   0026A8  A4D8               	btfss	status,2,c
  5543   0026AA  EF59  F013         	goto	u2561
  5544   0026AE  EF5B  F013         	goto	u2560
  5545   0026B2                     u2561:
  5546   0026B2  EF81  F013         	goto	l3610
  5547   0026B6                     u2560:
  5548   0026B6                     
  5549                           ;matrix_keypad.c: 93:  {;matrix_keypad.c: 94:   key = scan_key();
  5550   0026B6  EC71  F010         	call	_scan_key	;wreg free
  5551   0026BA  6E58               	movwf	read_switches@key^0,c
  5552   0026BC                     
  5553                           ;matrix_keypad.c: 95:   if(key != 0xFF && once )
  5554   0026BC  2858               	incf	read_switches@key^0,w,c
  5555   0026BE  B4D8               	btfsc	status,2,c
  5556   0026C0  EF64  F013         	goto	u2571
  5557   0026C4  EF66  F013         	goto	u2570
  5558   0026C8                     u2571:
  5559   0026C8  EF74  F013         	goto	l3606
  5560   0026CC                     u2570:
  5561   0026CC  0100               	movlb	0	; () banked
  5562   0026CE  51EE               	movf	read_switches@once& (0+255),w,b
  5563   0026D0  B4D8               	btfsc	status,2,c
  5564   0026D2  EF6D  F013         	goto	u2581
  5565   0026D6  EF6F  F013         	goto	u2580
  5566   0026DA                     u2581:
  5567   0026DA  EF74  F013         	goto	l3606
  5568   0026DE                     u2580:
  5569   0026DE                     
  5570                           ; BSR set to: 0
  5571                           ;matrix_keypad.c: 96:   {;matrix_keypad.c: 97:    once = 0;
  5572   0026DE  0E00               	movlw	0
  5573   0026E0  6FEE               	movwf	read_switches@once& (0+255),b
  5574                           
  5575                           ;matrix_keypad.c: 98:    return key;
  5576   0026E2  5058               	movf	read_switches@key^0,w,c
  5577   0026E4  EF8E  F013         	goto	l216
  5578   0026E8                     l3606:
  5579   0026E8  2858               	incf	read_switches@key^0,w,c
  5580   0026EA  A4D8               	btfss	status,2,c
  5581   0026EC  EF7A  F013         	goto	u2591
  5582   0026F0  EF7C  F013         	goto	u2590
  5583   0026F4                     u2591:
  5584   0026F4  EF8D  F013         	goto	l3616
  5585   0026F8                     u2590:
  5586   0026F8                     
  5587                           ;matrix_keypad.c: 101:   {;matrix_keypad.c: 102:    once = 1;
  5588   0026F8  0E01               	movlw	1
  5589   0026FA  0100               	movlb	0	; () banked
  5590   0026FC  6FEE               	movwf	read_switches@once& (0+255),b
  5591   0026FE  EF8D  F013         	goto	l3616
  5592   002702                     l3610:
  5593   002702  5001               	movf	read_switches@detection_type^0,w,c
  5594   002704  A4D8               	btfss	status,2,c
  5595   002706  EF87  F013         	goto	u2601
  5596   00270A  EF89  F013         	goto	u2600
  5597   00270E                     u2601:
  5598   00270E  EF8D  F013         	goto	l3616
  5599   002712                     u2600:
  5600   002712                     
  5601                           ;matrix_keypad.c: 106:  {;matrix_keypad.c: 107:   return scan_key();
  5602   002712  EC71  F010         	call	_scan_key	;wreg free
  5603   002716  EF8E  F013         	goto	l216
  5604   00271A                     l3616:
  5605                           
  5606                           ;matrix_keypad.c: 110:  return 0xFF;
  5607   00271A  0EFF               	movlw	255
  5608   00271C                     l216:
  5609   00271C  0012               	return		;funcret
  5610   00271E                     __end_of_read_switches:
  5611                           	callstack 0
  5612                           
  5613 ;; *************** function _scan_key *****************
  5614 ;; Defined at:
  5615 ;;		line 18 in file "matrix_keypad.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;		None
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;		None
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      unsigned char 
  5622 ;; Registers used:
  5623 ;;		wreg
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5629 ;;      Params:         0       0       0       0       0       0       0
  5630 ;;      Locals:         0       0       0       0       0       0       0
  5631 ;;      Temps:          0       0       0       0       0       0       0
  5632 ;;      Totals:         0       0       0       0       0       0       0
  5633 ;;Total ram usage:        0 bytes
  5634 ;; Hardware stack levels used: 1
  5635 ;; Hardware stack levels required when called: 1
  5636 ;; This function calls:
  5637 ;;		Nothing
  5638 ;; This function is called by:
  5639 ;;		_read_switches
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text20
  5644   0020E2                     __ptext20:
  5645                           	callstack 0
  5646   0020E2                     _scan_key:
  5647                           	callstack 27
  5648   0020E2                     
  5649                           ;matrix_keypad.c: 20:  PORTBbits.RB5 = 0;
  5650   0020E2  9A81               	bcf	129,5,c	;volatile
  5651                           
  5652                           ;matrix_keypad.c: 21:  PORTBbits.RB6 = 1;
  5653   0020E4  8C81               	bsf	129,6,c	;volatile
  5654                           
  5655                           ;matrix_keypad.c: 22:  PORTBbits.RB7 = 1;
  5656   0020E6  8E81               	bsf	129,7,c	;volatile
  5657                           
  5658                           ;matrix_keypad.c: 24:  if (PORTBbits.RB1 == 0)
  5659   0020E8  B281               	btfsc	129,1,c	;volatile
  5660   0020EA  EF79  F010         	goto	u2351
  5661   0020EE  EF7B  F010         	goto	u2350
  5662   0020F2                     u2351:
  5663   0020F2  EF7E  F010         	goto	l186
  5664   0020F6                     u2350:
  5665   0020F6                     
  5666                           ;matrix_keypad.c: 25:  {;matrix_keypad.c: 26:   return 1;
  5667   0020F6  0E01               	movlw	1
  5668   0020F8  EFF4  F010         	goto	l187
  5669   0020FC                     l186:
  5670   0020FC  B481               	btfsc	129,2,c	;volatile
  5671   0020FE  EF83  F010         	goto	u2361
  5672   002102  EF85  F010         	goto	u2360
  5673   002106                     u2361:
  5674   002106  EF88  F010         	goto	l189
  5675   00210A                     u2360:
  5676   00210A                     
  5677                           ;matrix_keypad.c: 29:  {;matrix_keypad.c: 30:   return 4;
  5678   00210A  0E04               	movlw	4
  5679   00210C  EFF4  F010         	goto	l187
  5680   002110                     l189:
  5681   002110  B681               	btfsc	129,3,c	;volatile
  5682   002112  EF8D  F010         	goto	u2371
  5683   002116  EF8F  F010         	goto	u2370
  5684   00211A                     u2371:
  5685   00211A  EF92  F010         	goto	l191
  5686   00211E                     u2370:
  5687   00211E                     
  5688                           ;matrix_keypad.c: 33:  {;matrix_keypad.c: 34:   return 7;
  5689   00211E  0E07               	movlw	7
  5690   002120  EFF4  F010         	goto	l187
  5691   002124                     l191:
  5692   002124  B881               	btfsc	129,4,c	;volatile
  5693   002126  EF97  F010         	goto	u2381
  5694   00212A  EF99  F010         	goto	u2380
  5695   00212E                     u2381:
  5696   00212E  EF9C  F010         	goto	l188
  5697   002132                     u2380:
  5698   002132                     
  5699                           ;matrix_keypad.c: 37:  {;matrix_keypad.c: 38:   return 10;
  5700   002132  0E0A               	movlw	10
  5701   002134  EFF4  F010         	goto	l187
  5702   002138                     l188:
  5703                           
  5704                           ;matrix_keypad.c: 41:  PORTBbits.RB5 = 1;
  5705   002138  8A81               	bsf	129,5,c	;volatile
  5706                           
  5707                           ;matrix_keypad.c: 42:  PORTBbits.RB6 = 0;
  5708   00213A  9C81               	bcf	129,6,c	;volatile
  5709                           
  5710                           ;matrix_keypad.c: 43:  PORTBbits.RB7 = 1;
  5711   00213C  8E81               	bsf	129,7,c	;volatile
  5712                           
  5713                           ;matrix_keypad.c: 45:  if (PORTBbits.RB1 == 0)
  5714   00213E  B281               	btfsc	129,1,c	;volatile
  5715   002140  EFA4  F010         	goto	u2391
  5716   002144  EFA6  F010         	goto	u2390
  5717   002148                     u2391:
  5718   002148  EFA9  F010         	goto	l194
  5719   00214C                     u2390:
  5720   00214C                     
  5721                           ;matrix_keypad.c: 46:  {;matrix_keypad.c: 47:   return 2;
  5722   00214C  0E02               	movlw	2
  5723   00214E  EFF4  F010         	goto	l187
  5724   002152                     l194:
  5725   002152  B481               	btfsc	129,2,c	;volatile
  5726   002154  EFAE  F010         	goto	u2401
  5727   002158  EFB0  F010         	goto	u2400
  5728   00215C                     u2401:
  5729   00215C  EFB3  F010         	goto	l196
  5730   002160                     u2400:
  5731   002160                     
  5732                           ;matrix_keypad.c: 50:  {;matrix_keypad.c: 51:   return 5;
  5733   002160  0E05               	movlw	5
  5734   002162  EFF4  F010         	goto	l187
  5735   002166                     l196:
  5736   002166  B681               	btfsc	129,3,c	;volatile
  5737   002168  EFB8  F010         	goto	u2411
  5738   00216C  EFBA  F010         	goto	u2410
  5739   002170                     u2411:
  5740   002170  EFBD  F010         	goto	l198
  5741   002174                     u2410:
  5742   002174                     
  5743                           ;matrix_keypad.c: 54:  {;matrix_keypad.c: 55:   return 8;
  5744   002174  0E08               	movlw	8
  5745   002176  EFF4  F010         	goto	l187
  5746   00217A                     l198:
  5747   00217A  B881               	btfsc	129,4,c	;volatile
  5748   00217C  EFC2  F010         	goto	u2421
  5749   002180  EFC4  F010         	goto	u2420
  5750   002184                     u2421:
  5751   002184  EFC7  F010         	goto	l195
  5752   002188                     u2420:
  5753   002188                     
  5754                           ;matrix_keypad.c: 58:  {;matrix_keypad.c: 59:   return 11;
  5755   002188  0E0B               	movlw	11
  5756   00218A  EFF4  F010         	goto	l187
  5757   00218E                     l195:
  5758                           
  5759                           ;matrix_keypad.c: 62:  PORTBbits.RB5 = 1;
  5760   00218E  8A81               	bsf	129,5,c	;volatile
  5761                           
  5762                           ;matrix_keypad.c: 63:  PORTBbits.RB6 = 1;
  5763   002190  8C81               	bsf	129,6,c	;volatile
  5764                           
  5765                           ;matrix_keypad.c: 64:  PORTBbits.RB7 = 0;
  5766   002192  9E81               	bcf	129,7,c	;volatile
  5767                           
  5768                           ;matrix_keypad.c: 66:  PORTBbits.RB7 = 0;
  5769   002194  9E81               	bcf	129,7,c	;volatile
  5770                           
  5771                           ;matrix_keypad.c: 68:  if (PORTBbits.RB1 == 0)
  5772   002196  B281               	btfsc	129,1,c	;volatile
  5773   002198  EFD0  F010         	goto	u2431
  5774   00219C  EFD2  F010         	goto	u2430
  5775   0021A0                     u2431:
  5776   0021A0  EFD5  F010         	goto	l201
  5777   0021A4                     u2430:
  5778   0021A4                     
  5779                           ;matrix_keypad.c: 69:  {;matrix_keypad.c: 70:   return 3;
  5780   0021A4  0E03               	movlw	3
  5781   0021A6  EFF4  F010         	goto	l187
  5782   0021AA                     l201:
  5783   0021AA  B481               	btfsc	129,2,c	;volatile
  5784   0021AC  EFDA  F010         	goto	u2441
  5785   0021B0  EFDC  F010         	goto	u2440
  5786   0021B4                     u2441:
  5787   0021B4  EFDF  F010         	goto	l203
  5788   0021B8                     u2440:
  5789   0021B8                     
  5790                           ;matrix_keypad.c: 73:  {;matrix_keypad.c: 74:   return 6;
  5791   0021B8  0E06               	movlw	6
  5792   0021BA  EFF4  F010         	goto	l187
  5793   0021BE                     l203:
  5794   0021BE  B681               	btfsc	129,3,c	;volatile
  5795   0021C0  EFE4  F010         	goto	u2451
  5796   0021C4  EFE6  F010         	goto	u2450
  5797   0021C8                     u2451:
  5798   0021C8  EFE9  F010         	goto	l205
  5799   0021CC                     u2450:
  5800   0021CC                     
  5801                           ;matrix_keypad.c: 77:  {;matrix_keypad.c: 78:   return 9;
  5802   0021CC  0E09               	movlw	9
  5803   0021CE  EFF4  F010         	goto	l187
  5804   0021D2                     l205:
  5805   0021D2  B881               	btfsc	129,4,c	;volatile
  5806   0021D4  EFEE  F010         	goto	u2461
  5807   0021D8  EFF0  F010         	goto	u2460
  5808   0021DC                     u2461:
  5809   0021DC  EFF3  F010         	goto	l204
  5810   0021E0                     u2460:
  5811   0021E0                     
  5812                           ;matrix_keypad.c: 81:  {;matrix_keypad.c: 82:   return 12;
  5813   0021E0  0E0C               	movlw	12
  5814   0021E2  EFF4  F010         	goto	l187
  5815   0021E6                     l204:
  5816   0021E6                     
  5817                           ;matrix_keypad.c: 85:  return 0xFF;
  5818   0021E6  0EFF               	movlw	255
  5819   0021E8                     l187:
  5820   0021E8  0012               	return		;funcret
  5821   0021EA                     __end_of_scan_key:
  5822                           	callstack 0
  5823                           
  5824 ;; *************** function _display_dashboard *****************
  5825 ;; Defined at:
  5826 ;;		line 16 in file "common.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;		None
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;		None
  5831 ;; Return value:  Size  Location     Type
  5832 ;;                  1    wreg      void 
  5833 ;; Registers used:
  5834 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5835 ;; Tracked objects:
  5836 ;;		On entry : 0/0
  5837 ;;		On exit  : 0/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5840 ;;      Params:         0       0       0       0       0       0       0
  5841 ;;      Locals:         0       0       0       0       0       0       0
  5842 ;;      Temps:          0       0       0       0       0       0       0
  5843 ;;      Totals:         0       0       0       0       0       0       0
  5844 ;;Total ram usage:        0 bytes
  5845 ;; Hardware stack levels used: 1
  5846 ;; Hardware stack levels required when called: 7
  5847 ;; This function calls:
  5848 ;;		___fldiv
  5849 ;;		___fltol
  5850 ;;		___lwdiv
  5851 ;;		___lwmod
  5852 ;;		___wmul
  5853 ;;		___xxtofl
  5854 ;;		_clcd_print
  5855 ;;		_clcd_putch
  5856 ;;		_get_time
  5857 ;;		_read_adc
  5858 ;;		_store_event_in_eeprom
  5859 ;; This function is called by:
  5860 ;;		_main
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text21
  5865   00095A                     __ptext21:
  5866                           	callstack 0
  5867   00095A                     _display_dashboard:
  5868                           	callstack 23
  5869   00095A                     
  5870                           ;common.c: 17:     clcd_print(" TIME     EV  SP", (0x80 + (0)));
  5871   00095A  0EF3               	movlw	low STR_1
  5872   00095C  6E07               	movwf	clcd_print@data^0,c
  5873   00095E  0E2E               	movlw	high STR_1
  5874   000960  6E08               	movwf	(clcd_print@data+1)^0,c
  5875   000962  0E80               	movlw	128
  5876   000964  6E09               	movwf	clcd_print@addr^0,c
  5877   000966  EC06  F014         	call	_clcd_print	;wreg free
  5878                           
  5879                           ;common.c: 18:     get_time();
  5880   00096A  EC7F  F012         	call	_get_time	;wreg free
  5881   00096E                     
  5882                           ;common.c: 19:     speed = (read_adc(0x04) / 10.23);
  5883   00096E  0E14               	movlw	20
  5884   000970  6E1A               	movwf	___fldiv@a^0,c
  5885   000972  0EAE               	movlw	174
  5886   000974  6E1B               	movwf	(___fldiv@a+1)^0,c
  5887   000976  0E23               	movlw	35
  5888   000978  6E1C               	movwf	(___fldiv@a+2)^0,c
  5889   00097A  0E41               	movlw	65
  5890   00097C  6E1D               	movwf	(___fldiv@a+3)^0,c
  5891   00097E  0E04               	movlw	4
  5892   000980  ECC1  F014         	call	_read_adc
  5893   000984  C001  F008         	movff	?_read_adc,___xxtofl@val
  5894   000988  C002  F009         	movff	?_read_adc+1,___xxtofl@val+1
  5895   00098C  6A0A               	clrf	(___xxtofl@val+2)^0,c
  5896   00098E  6A0B               	clrf	(___xxtofl@val+3)^0,c
  5897   000990  0E00               	movlw	0
  5898   000992  ECFF  F00E         	call	___xxtofl
  5899   000996  C008  F016         	movff	?___xxtofl,___fldiv@b
  5900   00099A  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  5901   00099E  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  5902   0009A2  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  5903   0009A6  EC67  F008         	call	___fldiv	;wreg free
  5904   0009AA  C016  F02F         	movff	?___fldiv,___fltol@f1
  5905   0009AE  C017  F030         	movff	?___fldiv+1,___fltol@f1+1
  5906   0009B2  C018  F031         	movff	?___fldiv+2,___fltol@f1+2
  5907   0009B6  C019  F032         	movff	?___fldiv+3,___fltol@f1+3
  5908   0009BA  ECF5  F010         	call	___fltol	;wreg free
  5909   0009BE  C02F  F04D         	movff	?___fltol,_speed
  5910   0009C2  C030  F04E         	movff	?___fltol+1,_speed+1
  5911   0009C6                     
  5912                           ;common.c: 22:     if (g_index == 1 && speed >= 20) {
  5913   0009C6  044B               	decf	_g_index^0,w,c
  5914   0009C8  104C               	iorwf	(_g_index+1)^0,w,c
  5915   0009CA  A4D8               	btfss	status,2,c
  5916   0009CC  EFEA  F004         	goto	u3241
  5917   0009D0  EFEC  F004         	goto	u3240
  5918   0009D4                     u3241:
  5919   0009D4  EFFD  F004         	goto	l4036
  5920   0009D8                     u3240:
  5921   0009D8  504E               	movf	(_speed+1)^0,w,c
  5922   0009DA  E109               	bnz	u3250
  5923   0009DC  0E14               	movlw	20
  5924   0009DE  5C4D               	subwf	_speed^0,w,c
  5925   0009E0  A0D8               	btfss	status,0,c
  5926   0009E2  EFF5  F004         	goto	u3251
  5927   0009E6  EFF7  F004         	goto	u3250
  5928   0009EA                     u3251:
  5929   0009EA  EFFD  F004         	goto	l4036
  5930   0009EE                     u3250:
  5931   0009EE                     
  5932                           ;common.c: 23:         speed = 20;
  5933   0009EE  0E00               	movlw	0
  5934   0009F0  6E4E               	movwf	(_speed+1)^0,c
  5935   0009F2  0E14               	movlw	20
  5936   0009F4  6E4D               	movwf	_speed^0,c
  5937                           
  5938                           ;common.c: 24:     } else if (g_index == 2 || g_index == 0 || g_index == 8) {
  5939   0009F6  EFA7  F005         	goto	l343
  5940   0009FA                     l4036:
  5941   0009FA  0E02               	movlw	2
  5942   0009FC  184B               	xorwf	_g_index^0,w,c
  5943   0009FE  104C               	iorwf	(_g_index+1)^0,w,c
  5944   000A00  B4D8               	btfsc	status,2,c
  5945   000A02  EF05  F005         	goto	u3261
  5946   000A06  EF07  F005         	goto	u3260
  5947   000A0A                     u3261:
  5948   000A0A  EF1A  F005         	goto	l4042
  5949   000A0E                     u3260:
  5950   000A0E  504B               	movf	_g_index^0,w,c
  5951   000A10  104C               	iorwf	(_g_index+1)^0,w,c
  5952   000A12  B4D8               	btfsc	status,2,c
  5953   000A14  EF0E  F005         	goto	u3271
  5954   000A18  EF10  F005         	goto	u3270
  5955   000A1C                     u3271:
  5956   000A1C  EF1A  F005         	goto	l4042
  5957   000A20                     u3270:
  5958   000A20  0E08               	movlw	8
  5959   000A22  184B               	xorwf	_g_index^0,w,c
  5960   000A24  104C               	iorwf	(_g_index+1)^0,w,c
  5961   000A26  A4D8               	btfss	status,2,c
  5962   000A28  EF18  F005         	goto	u3281
  5963   000A2C  EF1A  F005         	goto	u3280
  5964   000A30                     u3281:
  5965   000A30  EF20  F005         	goto	l4044
  5966   000A34                     u3280:
  5967   000A34                     l4042:
  5968                           
  5969                           ;common.c: 25:         speed = 0;
  5970   000A34  0E00               	movlw	0
  5971   000A36  6E4E               	movwf	(_speed+1)^0,c
  5972   000A38  0E00               	movlw	0
  5973   000A3A  6E4D               	movwf	_speed^0,c
  5974                           
  5975                           ;common.c: 26:     } else if (g_index == 3 && speed >= 30) {
  5976   000A3C  EFA7  F005         	goto	l343
  5977   000A40                     l4044:
  5978   000A40  0E03               	movlw	3
  5979   000A42  184B               	xorwf	_g_index^0,w,c
  5980   000A44  104C               	iorwf	(_g_index+1)^0,w,c
  5981   000A46  A4D8               	btfss	status,2,c
  5982   000A48  EF28  F005         	goto	u3291
  5983   000A4C  EF2A  F005         	goto	u3290
  5984   000A50                     u3291:
  5985   000A50  EF3B  F005         	goto	l4050
  5986   000A54                     u3290:
  5987   000A54  504E               	movf	(_speed+1)^0,w,c
  5988   000A56  E109               	bnz	u3300
  5989   000A58  0E1E               	movlw	30
  5990   000A5A  5C4D               	subwf	_speed^0,w,c
  5991   000A5C  A0D8               	btfss	status,0,c
  5992   000A5E  EF33  F005         	goto	u3301
  5993   000A62  EF35  F005         	goto	u3300
  5994   000A66                     u3301:
  5995   000A66  EF3B  F005         	goto	l4050
  5996   000A6A                     u3300:
  5997   000A6A                     
  5998                           ;common.c: 27:         speed = 30;
  5999   000A6A  0E00               	movlw	0
  6000   000A6C  6E4E               	movwf	(_speed+1)^0,c
  6001   000A6E  0E1E               	movlw	30
  6002   000A70  6E4D               	movwf	_speed^0,c
  6003                           
  6004                           ;common.c: 28:     } else if (g_index == 4 && speed >= 40) {
  6005   000A72  EFA7  F005         	goto	l343
  6006   000A76                     l4050:
  6007   000A76  0E04               	movlw	4
  6008   000A78  184B               	xorwf	_g_index^0,w,c
  6009   000A7A  104C               	iorwf	(_g_index+1)^0,w,c
  6010   000A7C  A4D8               	btfss	status,2,c
  6011   000A7E  EF43  F005         	goto	u3311
  6012   000A82  EF45  F005         	goto	u3310
  6013   000A86                     u3311:
  6014   000A86  EF56  F005         	goto	l4056
  6015   000A8A                     u3310:
  6016   000A8A  504E               	movf	(_speed+1)^0,w,c
  6017   000A8C  E109               	bnz	u3320
  6018   000A8E  0E28               	movlw	40
  6019   000A90  5C4D               	subwf	_speed^0,w,c
  6020   000A92  A0D8               	btfss	status,0,c
  6021   000A94  EF4E  F005         	goto	u3321
  6022   000A98  EF50  F005         	goto	u3320
  6023   000A9C                     u3321:
  6024   000A9C  EF56  F005         	goto	l4056
  6025   000AA0                     u3320:
  6026   000AA0                     
  6027                           ;common.c: 29:         speed = 40;
  6028   000AA0  0E00               	movlw	0
  6029   000AA2  6E4E               	movwf	(_speed+1)^0,c
  6030   000AA4  0E28               	movlw	40
  6031   000AA6  6E4D               	movwf	_speed^0,c
  6032                           
  6033                           ;common.c: 30:     } else if (g_index == 5 && speed >= 60) {
  6034   000AA8  EFA7  F005         	goto	l343
  6035   000AAC                     l4056:
  6036   000AAC  0E05               	movlw	5
  6037   000AAE  184B               	xorwf	_g_index^0,w,c
  6038   000AB0  104C               	iorwf	(_g_index+1)^0,w,c
  6039   000AB2  A4D8               	btfss	status,2,c
  6040   000AB4  EF5E  F005         	goto	u3331
  6041   000AB8  EF60  F005         	goto	u3330
  6042   000ABC                     u3331:
  6043   000ABC  EF71  F005         	goto	l4062
  6044   000AC0                     u3330:
  6045   000AC0  504E               	movf	(_speed+1)^0,w,c
  6046   000AC2  E109               	bnz	u3340
  6047   000AC4  0E3C               	movlw	60
  6048   000AC6  5C4D               	subwf	_speed^0,w,c
  6049   000AC8  A0D8               	btfss	status,0,c
  6050   000ACA  EF69  F005         	goto	u3341
  6051   000ACE  EF6B  F005         	goto	u3340
  6052   000AD2                     u3341:
  6053   000AD2  EF71  F005         	goto	l4062
  6054   000AD6                     u3340:
  6055   000AD6                     
  6056                           ;common.c: 31:         speed = 60;
  6057   000AD6  0E00               	movlw	0
  6058   000AD8  6E4E               	movwf	(_speed+1)^0,c
  6059   000ADA  0E3C               	movlw	60
  6060   000ADC  6E4D               	movwf	_speed^0,c
  6061                           
  6062                           ;common.c: 32:     } else if (g_index == 6 && speed >= 80) {
  6063   000ADE  EFA7  F005         	goto	l343
  6064   000AE2                     l4062:
  6065   000AE2  0E06               	movlw	6
  6066   000AE4  184B               	xorwf	_g_index^0,w,c
  6067   000AE6  104C               	iorwf	(_g_index+1)^0,w,c
  6068   000AE8  A4D8               	btfss	status,2,c
  6069   000AEA  EF79  F005         	goto	u3351
  6070   000AEE  EF7B  F005         	goto	u3350
  6071   000AF2                     u3351:
  6072   000AF2  EF8C  F005         	goto	l4068
  6073   000AF6                     u3350:
  6074   000AF6  504E               	movf	(_speed+1)^0,w,c
  6075   000AF8  E109               	bnz	u3360
  6076   000AFA  0E50               	movlw	80
  6077   000AFC  5C4D               	subwf	_speed^0,w,c
  6078   000AFE  A0D8               	btfss	status,0,c
  6079   000B00  EF84  F005         	goto	u3361
  6080   000B04  EF86  F005         	goto	u3360
  6081   000B08                     u3361:
  6082   000B08  EF8C  F005         	goto	l4068
  6083   000B0C                     u3360:
  6084   000B0C                     
  6085                           ;common.c: 33:         speed = 80;
  6086   000B0C  0E00               	movlw	0
  6087   000B0E  6E4E               	movwf	(_speed+1)^0,c
  6088   000B10  0E50               	movlw	80
  6089   000B12  6E4D               	movwf	_speed^0,c
  6090                           
  6091                           ;common.c: 34:     } else if (g_index == 7 && speed >= 99) {
  6092   000B14  EFA7  F005         	goto	l343
  6093   000B18                     l4068:
  6094   000B18  0E07               	movlw	7
  6095   000B1A  184B               	xorwf	_g_index^0,w,c
  6096   000B1C  104C               	iorwf	(_g_index+1)^0,w,c
  6097   000B1E  A4D8               	btfss	status,2,c
  6098   000B20  EF94  F005         	goto	u3371
  6099   000B24  EF96  F005         	goto	u3370
  6100   000B28                     u3371:
  6101   000B28  EFA7  F005         	goto	l351
  6102   000B2C                     u3370:
  6103   000B2C  504E               	movf	(_speed+1)^0,w,c
  6104   000B2E  E109               	bnz	u3380
  6105   000B30  0E63               	movlw	99
  6106   000B32  5C4D               	subwf	_speed^0,w,c
  6107   000B34  A0D8               	btfss	status,0,c
  6108   000B36  EF9F  F005         	goto	u3381
  6109   000B3A  EFA1  F005         	goto	u3380
  6110   000B3E                     u3381:
  6111   000B3E  EFA7  F005         	goto	l351
  6112   000B42                     u3380:
  6113   000B42                     
  6114                           ;common.c: 35:         speed = 99;
  6115   000B42  0E00               	movlw	0
  6116   000B44  6E4E               	movwf	(_speed+1)^0,c
  6117   000B46  0E63               	movlw	99
  6118   000B48  6E4D               	movwf	_speed^0,c
  6119   000B4A  EFA7  F005         	goto	l343
  6120   000B4E                     l351:
  6121   000B4E                     l343:
  6122                           
  6123                           ;common.c: 37:     if (write_eeprom) {
  6124   000B4E  0100               	movlb	0	; () banked
  6125   000B50  51ED               	movf	_write_eeprom& (0+255),w,b
  6126   000B52  B4D8               	btfsc	status,2,c
  6127   000B54  EFAE  F005         	goto	u3391
  6128   000B58  EFB0  F005         	goto	u3390
  6129   000B5C                     u3391:
  6130   000B5C  EFB4  F005         	goto	l4078
  6131   000B60                     u3390:
  6132   000B60                     
  6133                           ; BSR set to: 0
  6134                           ;common.c: 38:         write_eeprom = 0;
  6135   000B60  0E00               	movlw	0
  6136   000B62  6FED               	movwf	_write_eeprom& (0+255),b
  6137   000B64                     
  6138                           ; BSR set to: 0
  6139                           ;common.c: 39:         store_event_in_eeprom();
  6140   000B64  EC20  F00E         	call	_store_event_in_eeprom	;wreg free
  6141   000B68                     l4078:
  6142                           
  6143                           ;common.c: 42:     if (key == 1) {
  6144   000B68  0459               	decf	_key^0,w,c
  6145   000B6A  A4D8               	btfss	status,2,c
  6146   000B6C  EFBA  F005         	goto	u3401
  6147   000B70  EFBC  F005         	goto	u3400
  6148   000B74                     u3401:
  6149   000B74  EFCB  F005         	goto	l4082
  6150   000B78                     u3400:
  6151   000B78                     
  6152                           ;common.c: 43:         g_index = 8;
  6153   000B78  0E00               	movlw	0
  6154   000B7A  6E4C               	movwf	(_g_index+1)^0,c
  6155   000B7C  0E08               	movlw	8
  6156   000B7E  6E4B               	movwf	_g_index^0,c
  6157                           
  6158                           ;common.c: 44:         speed = 0;
  6159   000B80  0E00               	movlw	0
  6160   000B82  6E4E               	movwf	(_speed+1)^0,c
  6161   000B84  0E00               	movlw	0
  6162   000B86  6E4D               	movwf	_speed^0,c
  6163                           
  6164                           ;common.c: 45:         write_eeprom = 1;
  6165   000B88  0E01               	movlw	1
  6166   000B8A  0100               	movlb	0	; () banked
  6167   000B8C  6FED               	movwf	_write_eeprom& (0+255),b
  6168                           
  6169                           ;common.c: 46:         EF = 0;
  6170   000B8E  0E00               	movlw	0
  6171   000B90  6FBE               	movwf	_EF& (0+255),b
  6172                           
  6173                           ;common.c: 47:     } else if (key == 2 && g_index <= 6 || key == 2 && g_index == 8) {
  6174   000B92  EF43  F006         	goto	l4118
  6175   000B96                     l4082:
  6176   000B96  0E02               	movlw	2
  6177   000B98  1859               	xorwf	_key^0,w,c
  6178   000B9A  A4D8               	btfss	status,2,c
  6179   000B9C  EFD2  F005         	goto	u3411
  6180   000BA0  EFD4  F005         	goto	u3410
  6181   000BA4                     u3411:
  6182   000BA4  EFDF  F005         	goto	l4086
  6183   000BA8                     u3410:
  6184   000BA8  504C               	movf	(_g_index+1)^0,w,c
  6185   000BAA  E109               	bnz	u3420
  6186   000BAC  0E07               	movlw	7
  6187   000BAE  5C4B               	subwf	_g_index^0,w,c
  6188   000BB0  A0D8               	btfss	status,0,c
  6189   000BB2  EFDD  F005         	goto	u3421
  6190   000BB6  EFDF  F005         	goto	u3420
  6191   000BBA                     u3421:
  6192   000BBA  EFF2  F005         	goto	l4090
  6193   000BBE                     u3420:
  6194   000BBE                     l4086:
  6195   000BBE  0E02               	movlw	2
  6196   000BC0  1859               	xorwf	_key^0,w,c
  6197   000BC2  A4D8               	btfss	status,2,c
  6198   000BC4  EFE6  F005         	goto	u3431
  6199   000BC8  EFE8  F005         	goto	u3430
  6200   000BCC                     u3431:
  6201   000BCC  EF0B  F006         	goto	l4100
  6202   000BD0                     u3430:
  6203   000BD0  0E08               	movlw	8
  6204   000BD2  184B               	xorwf	_g_index^0,w,c
  6205   000BD4  104C               	iorwf	(_g_index+1)^0,w,c
  6206   000BD6  A4D8               	btfss	status,2,c
  6207   000BD8  EFF0  F005         	goto	u3441
  6208   000BDC  EFF2  F005         	goto	u3440
  6209   000BE0                     u3441:
  6210   000BE0  EF0B  F006         	goto	l4100
  6211   000BE4                     u3440:
  6212   000BE4                     l4090:
  6213                           
  6214                           ;common.c: 48:         if (g_index == 8)
  6215   000BE4  0E08               	movlw	8
  6216   000BE6  184B               	xorwf	_g_index^0,w,c
  6217   000BE8  104C               	iorwf	(_g_index+1)^0,w,c
  6218   000BEA  A4D8               	btfss	status,2,c
  6219   000BEC  EFFA  F005         	goto	u3451
  6220   000BF0  EFFC  F005         	goto	u3450
  6221   000BF4                     u3451:
  6222   000BF4  EF02  F006         	goto	l4094
  6223   000BF8                     u3450:
  6224   000BF8                     l4092:
  6225                           
  6226                           ;common.c: 49:             g_index = 2;
  6227   000BF8  0E00               	movlw	0
  6228   000BFA  6E4C               	movwf	(_g_index+1)^0,c
  6229   000BFC  0E02               	movlw	2
  6230   000BFE  6E4B               	movwf	_g_index^0,c
  6231   000C00  EF04  F006         	goto	l4096
  6232   000C04                     l4094:
  6233                           
  6234                           ;common.c: 51:             g_index++;
  6235   000C04  4A4B               	infsnz	_g_index^0,f,c
  6236   000C06  2A4C               	incf	(_g_index+1)^0,f,c
  6237   000C08                     l4096:
  6238                           
  6239                           ;common.c: 52:         write_eeprom = 1;
  6240   000C08  0E01               	movlw	1
  6241   000C0A  0100               	movlb	0	; () banked
  6242   000C0C  6FED               	movwf	_write_eeprom& (0+255),b
  6243   000C0E                     
  6244                           ; BSR set to: 0
  6245                           ;common.c: 53:         EF = 0;
  6246   000C0E  0E00               	movlw	0
  6247   000C10  6FBE               	movwf	_EF& (0+255),b
  6248                           
  6249                           ;common.c: 54:     } else if (key == 3 && g_index > 1 || key == 3 && g_index == 8) {
  6250   000C12  EF43  F006         	goto	l4118
  6251   000C16                     l4100:
  6252   000C16  0E03               	movlw	3
  6253   000C18  1859               	xorwf	_key^0,w,c
  6254   000C1A  A4D8               	btfss	status,2,c
  6255   000C1C  EF12  F006         	goto	u3461
  6256   000C20  EF14  F006         	goto	u3460
  6257   000C24                     u3461:
  6258   000C24  EF1F  F006         	goto	l4104
  6259   000C28                     u3460:
  6260   000C28  504C               	movf	(_g_index+1)^0,w,c
  6261   000C2A  E107               	bnz	u3471
  6262   000C2C  0E02               	movlw	2
  6263   000C2E  5C4B               	subwf	_g_index^0,w,c
  6264   000C30  B0D8               	btfsc	status,0,c
  6265   000C32  EF1D  F006         	goto	u3471
  6266   000C36  EF1F  F006         	goto	u3470
  6267   000C3A                     u3471:
  6268   000C3A  EF32  F006         	goto	l4108
  6269   000C3E                     u3470:
  6270   000C3E                     l4104:
  6271   000C3E  0E03               	movlw	3
  6272   000C40  1859               	xorwf	_key^0,w,c
  6273   000C42  A4D8               	btfss	status,2,c
  6274   000C44  EF26  F006         	goto	u3481
  6275   000C48  EF28  F006         	goto	u3480
  6276   000C4C                     u3481:
  6277   000C4C  EF43  F006         	goto	l4118
  6278   000C50                     u3480:
  6279   000C50  0E08               	movlw	8
  6280   000C52  184B               	xorwf	_g_index^0,w,c
  6281   000C54  104C               	iorwf	(_g_index+1)^0,w,c
  6282   000C56  A4D8               	btfss	status,2,c
  6283   000C58  EF30  F006         	goto	u3491
  6284   000C5C  EF32  F006         	goto	u3490
  6285   000C60                     u3491:
  6286   000C60  EF43  F006         	goto	l4118
  6287   000C64                     u3490:
  6288   000C64                     l4108:
  6289                           
  6290                           ;common.c: 55:         if (g_index == 8)
  6291   000C64  0E08               	movlw	8
  6292   000C66  184B               	xorwf	_g_index^0,w,c
  6293   000C68  104C               	iorwf	(_g_index+1)^0,w,c
  6294   000C6A  A4D8               	btfss	status,2,c
  6295   000C6C  EF3A  F006         	goto	u3501
  6296   000C70  EF3C  F006         	goto	u3500
  6297   000C74                     u3501:
  6298   000C74  EF3E  F006         	goto	l4112
  6299   000C78                     u3500:
  6300   000C78  EFFC  F005         	goto	l4092
  6301   000C7C                     l4112:
  6302                           
  6303                           ;common.c: 58:             g_index--;
  6304   000C7C  064B               	decf	_g_index^0,f,c
  6305   000C7E  A0D8               	btfss	status,0,c
  6306   000C80  064C               	decf	(_g_index+1)^0,f,c
  6307   000C82  EF04  F006         	goto	l4096
  6308   000C86                     l4118:
  6309                           
  6310                           ;common.c: 62:     if (!EF) {
  6311   000C86  0100               	movlb	0	; () banked
  6312   000C88  51BE               	movf	_EF& (0+255),w,b
  6313   000C8A  A4D8               	btfss	status,2,c
  6314   000C8C  EF4A  F006         	goto	u3511
  6315   000C90  EF4C  F006         	goto	u3510
  6316   000C94                     u3511:
  6317   000C94  EF82  F006         	goto	l4126
  6318   000C98                     u3510:
  6319   000C98                     
  6320                           ; BSR set to: 0
  6321                           ;common.c: 63:         clcd_print(gear[g_index], (0xC0 + (10)));
  6322   000C98  C04B  F001         	movff	_g_index,___wmul@multiplier
  6323   000C9C  C04C  F002         	movff	_g_index+1,___wmul@multiplier+1
  6324   000CA0  0E00               	movlw	0
  6325   000CA2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6326   000CA4  0E03               	movlw	3
  6327   000CA6  6E03               	movwf	___wmul@multiplicand^0,c
  6328   000CA8  EC87  F015         	call	___wmul	;wreg free
  6329   000CAC  0E64               	movlw	low _gear
  6330   000CAE  2401               	addwf	?___wmul^0,w,c
  6331   000CB0  6E07               	movwf	clcd_print@data^0,c
  6332   000CB2  0E01               	movlw	high _gear
  6333   000CB4  2002               	addwfc	(?___wmul+1)^0,w,c
  6334   000CB6  6E08               	movwf	(clcd_print@data+1)^0,c
  6335   000CB8  0ECA               	movlw	202
  6336   000CBA  6E09               	movwf	clcd_print@addr^0,c
  6337   000CBC  EC06  F014         	call	_clcd_print	;wreg free
  6338   000CC0                     
  6339                           ;common.c: 64:         clcd_putch((speed / 10) + '0', (0xC0 + (14)));
  6340   000CC0  0ECE               	movlw	206
  6341   000CC2  6E08               	movwf	clcd_putch@addr^0,c
  6342   000CC4  C04D  F001         	movff	_speed,___lwdiv@dividend
  6343   000CC8  C04E  F002         	movff	_speed+1,___lwdiv@dividend+1
  6344   000CCC  0E00               	movlw	0
  6345   000CCE  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  6346   000CD0  0E0A               	movlw	10
  6347   000CD2  6E03               	movwf	___lwdiv@divisor^0,c
  6348   000CD4  ECCC  F013         	call	___lwdiv	;wreg free
  6349   000CD8  5001               	movf	?___lwdiv^0,w,c
  6350   000CDA  0F30               	addlw	48
  6351   000CDC  ECDC  F015         	call	_clcd_putch
  6352   000CE0                     
  6353                           ;common.c: 65:         clcd_putch((speed % 10) + '0', (0xC0 + (15)));
  6354   000CE0  0ECF               	movlw	207
  6355   000CE2  6E08               	movwf	clcd_putch@addr^0,c
  6356   000CE4  C04D  F001         	movff	_speed,___lwmod@dividend
  6357   000CE8  C04E  F002         	movff	_speed+1,___lwmod@dividend+1
  6358   000CEC  0E00               	movlw	0
  6359   000CEE  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6360   000CF0  0E0A               	movlw	10
  6361   000CF2  6E03               	movwf	___lwmod@divisor^0,c
  6362   000CF4  EC3C  F014         	call	___lwmod	;wreg free
  6363   000CF8  5001               	movf	?___lwmod^0,w,c
  6364   000CFA  0F30               	addlw	48
  6365   000CFC  ECDC  F015         	call	_clcd_putch
  6366                           
  6367                           ;common.c: 66:     } else {
  6368   000D00  EF98  F006         	goto	l377
  6369   000D04                     l4126:
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;common.c: 67:         clcd_print(gear[EI], (0xC0 + (10)));
  6373   000D04  5057               	movf	_EI^0,w,c
  6374   000D06  0D03               	mullw	3
  6375   000D08  0E64               	movlw	low _gear
  6376   000D0A  24F3               	addwf	243,w,c
  6377   000D0C  6E07               	movwf	clcd_print@data^0,c
  6378   000D0E  0E01               	movlw	high _gear
  6379   000D10  20F4               	addwfc	prodh,w,c
  6380   000D12  6E08               	movwf	(clcd_print@data+1)^0,c
  6381   000D14  0ECA               	movlw	202
  6382   000D16  6E09               	movwf	clcd_print@addr^0,c
  6383   000D18  EC06  F014         	call	_clcd_print	;wreg free
  6384   000D1C                     
  6385                           ;common.c: 68:         clcd_putch('0', (0xC0 + (14)));
  6386   000D1C  0ECE               	movlw	206
  6387   000D1E  6E08               	movwf	clcd_putch@addr^0,c
  6388   000D20  0E30               	movlw	48
  6389   000D22  ECDC  F015         	call	_clcd_putch
  6390   000D26                     
  6391                           ;common.c: 69:         clcd_putch('0', (0xC0 + (15)));
  6392   000D26  0ECF               	movlw	207
  6393   000D28  6E08               	movwf	clcd_putch@addr^0,c
  6394   000D2A  0E30               	movlw	48
  6395   000D2C  ECDC  F015         	call	_clcd_putch
  6396   000D30                     l377:
  6397   000D30  0012               	return		;funcret
  6398   000D32                     __end_of_display_dashboard:
  6399                           	callstack 0
  6400                           
  6401 ;; *************** function _read_adc *****************
  6402 ;; Defined at:
  6403 ;;		line 43 in file "adc.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;  channel         1    wreg     unsigned char 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  channel         1    6[COMRAM] unsigned char 
  6408 ;;  reg_val         2    4[COMRAM] unsigned short 
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  2    0[COMRAM] unsigned short 
  6411 ;; Registers used:
  6412 ;;		wreg, status,2, status,0
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6418 ;;      Params:         2       0       0       0       0       0       0
  6419 ;;      Locals:         3       0       0       0       0       0       0
  6420 ;;      Temps:          2       0       0       0       0       0       0
  6421 ;;      Totals:         7       0       0       0       0       0       0
  6422 ;;Total ram usage:        7 bytes
  6423 ;; Hardware stack levels used: 1
  6424 ;; Hardware stack levels required when called: 1
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_display_dashboard
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text22
  6433   002982                     __ptext22:
  6434                           	callstack 0
  6435   002982                     _read_adc:
  6436                           	callstack 28
  6437                           
  6438                           ;incstack = 0
  6439                           ;read_adc@channel stored from wreg
  6440   002982  6E07               	movwf	read_adc@channel^0,c
  6441   002984                     
  6442                           ;adc.c: 43: unsigned short read_adc(unsigned char channel);adc.c: 44: {;adc.c: 45:  unsi
      +                          gned short reg_val;;adc.c: 48:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  6443   002984  C007  F003         	movff	read_adc@channel,??_read_adc
  6444   002988  90D8               	bcf	status,0,c
  6445   00298A  3603               	rlcf	??_read_adc^0,f,c
  6446   00298C  90D8               	bcf	status,0,c
  6447   00298E  3603               	rlcf	??_read_adc^0,f,c
  6448   002990  50C2               	movf	194,w,c	;volatile
  6449   002992  0BC3               	andlw	195
  6450   002994  1003               	iorwf	??_read_adc^0,w,c
  6451   002996  6EC2               	movwf	194,c	;volatile
  6452   002998                     
  6453                           ;adc.c: 51:  GO = 1;
  6454   002998  82C2               	bsf	4034,1,c	;volatile
  6455   00299A                     l256:
  6456   00299A  B2C2               	btfsc	4034,1,c	;volatile
  6457   00299C  EFD2  F014         	goto	u2611
  6458   0029A0  EFD4  F014         	goto	u2610
  6459   0029A4                     u2611:
  6460   0029A4  EFCD  F014         	goto	l256
  6461   0029A8                     u2610:
  6462   0029A8                     
  6463                           ;adc.c: 53:  reg_val = (ADRESH << 8) | ADRESL;
  6464   0029A8  50C3               	movf	195,w,c	;volatile
  6465   0029AA  CFC4 F003          	movff	4036,??_read_adc	;volatile
  6466   0029AE  6A04               	clrf	(??_read_adc+1)^0,c
  6467   0029B0  C003  F004         	movff	??_read_adc,??_read_adc+1
  6468   0029B4  6A03               	clrf	??_read_adc^0,c
  6469   0029B6  1003               	iorwf	??_read_adc^0,w,c
  6470   0029B8  6E05               	movwf	read_adc@reg_val^0,c
  6471   0029BA  5004               	movf	(??_read_adc+1)^0,w,c
  6472   0029BC  6E06               	movwf	(read_adc@reg_val+1)^0,c
  6473   0029BE                     
  6474                           ;adc.c: 55:  return reg_val;
  6475   0029BE  C005  F001         	movff	read_adc@reg_val,?_read_adc
  6476   0029C2  C006  F002         	movff	read_adc@reg_val+1,?_read_adc+1
  6477   0029C6  0012               	return		;funcret
  6478   0029C8                     __end_of_read_adc:
  6479                           	callstack 0
  6480                           
  6481 ;; *************** function _get_time *****************
  6482 ;; Defined at:
  6483 ;;		line 14 in file "ds1307.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;		None
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;		None
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  1    wreg      void 
  6490 ;; Registers used:
  6491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6497 ;;      Params:         0       0       0       0       0       0       0
  6498 ;;      Locals:         0       0       0       0       0       0       0
  6499 ;;      Temps:          0       0       0       0       0       0       0
  6500 ;;      Totals:         0       0       0       0       0       0       0
  6501 ;;Total ram usage:        0 bytes
  6502 ;; Hardware stack levels used: 1
  6503 ;; Hardware stack levels required when called: 5
  6504 ;; This function calls:
  6505 ;;		_clcd_print
  6506 ;;		_read_ds1307
  6507 ;; This function is called by:
  6508 ;;		_display_dashboard
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text23
  6513   0024FE                     __ptext23:
  6514                           	callstack 0
  6515   0024FE                     _get_time:
  6516                           	callstack 24
  6517   0024FE                     
  6518                           ;ds1307.c: 16:  clock_reg[0] = read_ds1307(0x02);
  6519   0024FE  0E02               	movlw	2
  6520   002500  EC5D  F015         	call	_read_ds1307
  6521   002504  0100               	movlb	0	; () banked
  6522   002506  6F94               	movwf	_clock_reg& (0+255),b
  6523                           
  6524                           ;ds1307.c: 17:  clock_reg[1] = read_ds1307(0x01);
  6525   002508  0E01               	movlw	1
  6526   00250A  EC5D  F015         	call	_read_ds1307
  6527   00250E  0100               	movlb	0	; () banked
  6528   002510  6F95               	movwf	(_clock_reg+1)& (0+255),b
  6529                           
  6530                           ;ds1307.c: 18:  clock_reg[2] = read_ds1307(0x00);
  6531   002512  0E00               	movlw	0
  6532   002514  EC5D  F015         	call	_read_ds1307
  6533   002518  0100               	movlb	0	; () banked
  6534   00251A  6F96               	movwf	(_clock_reg+2)& (0+255),b
  6535   00251C                     
  6536                           ; BSR set to: 0
  6537                           ;ds1307.c: 20:  if (clock_reg[0] & 0x40)
  6538   00251C  AD94               	btfss	_clock_reg& (0+255),6,b
  6539   00251E  EF93  F012         	goto	u2621
  6540   002522  EF95  F012         	goto	u2620
  6541   002526                     u2621:
  6542   002526  EFA0  F012         	goto	l3636
  6543   00252A                     u2620:
  6544   00252A                     
  6545                           ; BSR set to: 0
  6546                           ;ds1307.c: 21:  {;ds1307.c: 22:   time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  6547   00252A  3994               	swapf	_clock_reg& (0+255),w,b
  6548   00252C  0B0F               	andlw	15
  6549   00252E  0B01               	andlw	1
  6550   002530  0F30               	addlw	48
  6551   002532  6FCC               	movwf	_time& (0+255),b
  6552                           
  6553                           ;ds1307.c: 23:   time[1] = '0' + (clock_reg[0] & 0x0F);
  6554   002534  5194               	movf	_clock_reg& (0+255),w,b
  6555   002536  0B0F               	andlw	15
  6556   002538  0F30               	addlw	48
  6557   00253A  6FCD               	movwf	(_time+1)& (0+255),b
  6558                           
  6559                           ;ds1307.c: 24:  }
  6560   00253C  EFA9  F012         	goto	l3638
  6561   002540                     l3636:
  6562                           
  6563                           ; BSR set to: 0
  6564                           ;ds1307.c: 26:  {;ds1307.c: 27:   time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  6565   002540  3994               	swapf	_clock_reg& (0+255),w,b
  6566   002542  0B0F               	andlw	15
  6567   002544  0B03               	andlw	3
  6568   002546  0F30               	addlw	48
  6569   002548  6FCC               	movwf	_time& (0+255),b
  6570                           
  6571                           ;ds1307.c: 28:   time[1] = '0' + (clock_reg[0] & 0x0F);
  6572   00254A  5194               	movf	_clock_reg& (0+255),w,b
  6573   00254C  0B0F               	andlw	15
  6574   00254E  0F30               	addlw	48
  6575   002550  6FCD               	movwf	(_time+1)& (0+255),b
  6576   002552                     l3638:
  6577                           
  6578                           ; BSR set to: 0
  6579                           ;ds1307.c: 30:  time[2] = ':';
  6580   002552  0E3A               	movlw	58
  6581   002554  6FCE               	movwf	(_time+2)& (0+255),b
  6582   002556                     
  6583                           ; BSR set to: 0
  6584                           ;ds1307.c: 31:  time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  6585   002556  3995               	swapf	(_clock_reg+1)& (0+255),w,b
  6586   002558  0B0F               	andlw	15
  6587   00255A  0B0F               	andlw	15
  6588   00255C  0F30               	addlw	48
  6589   00255E  6FCF               	movwf	(_time+3)& (0+255),b
  6590   002560                     
  6591                           ; BSR set to: 0
  6592                           ;ds1307.c: 32:  time[4] = '0' + (clock_reg[1] & 0x0F);
  6593   002560  5195               	movf	(_clock_reg+1)& (0+255),w,b
  6594   002562  0B0F               	andlw	15
  6595   002564  0F30               	addlw	48
  6596   002566  6FD0               	movwf	(_time+4)& (0+255),b
  6597   002568                     
  6598                           ; BSR set to: 0
  6599                           ;ds1307.c: 33:  time[5] = ':';
  6600   002568  0E3A               	movlw	58
  6601   00256A  6FD1               	movwf	(_time+5)& (0+255),b
  6602                           
  6603                           ;ds1307.c: 34:  time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  6604   00256C  3996               	swapf	(_clock_reg+2)& (0+255),w,b
  6605   00256E  0B0F               	andlw	15
  6606   002570  0B0F               	andlw	15
  6607   002572  0F30               	addlw	48
  6608   002574  6FD2               	movwf	(_time+6)& (0+255),b
  6609                           
  6610                           ;ds1307.c: 35:  time[7] = '0' + (clock_reg[2] & 0x0F);
  6611   002576  5196               	movf	(_clock_reg+2)& (0+255),w,b
  6612   002578  0B0F               	andlw	15
  6613   00257A  0F30               	addlw	48
  6614   00257C  6FD3               	movwf	(_time+7)& (0+255),b
  6615   00257E                     
  6616                           ; BSR set to: 0
  6617                           ;ds1307.c: 36:  time[8] = '\0';
  6618   00257E  0E00               	movlw	0
  6619   002580  6FD4               	movwf	(_time+8)& (0+255),b
  6620   002582                     
  6621                           ; BSR set to: 0
  6622                           ;ds1307.c: 38:     clcd_print(time, (0xC0 + (0)));
  6623   002582  0ECC               	movlw	low _time
  6624   002584  6E07               	movwf	clcd_print@data^0,c
  6625   002586  6A08               	clrf	(clcd_print@data+1)^0,c
  6626   002588  0EC0               	movlw	192
  6627   00258A  6E09               	movwf	clcd_print@addr^0,c
  6628   00258C  EC06  F014         	call	_clcd_print	;wreg free
  6629   002590  0012               	return		;funcret
  6630   002592                     __end_of_get_time:
  6631                           	callstack 0
  6632                           
  6633 ;; *************** function _read_ds1307 *****************
  6634 ;; Defined at:
  6635 ;;		line 83 in file "ds1307.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;  address         1    wreg     unsigned char 
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;  address         1    1[COMRAM] unsigned char 
  6640 ;;  data            1    2[COMRAM] unsigned char 
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  1    wreg      unsigned char 
  6643 ;; Registers used:
  6644 ;;		wreg, status,2, cstack
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6650 ;;      Params:         0       0       0       0       0       0       0
  6651 ;;      Locals:         2       0       0       0       0       0       0
  6652 ;;      Temps:          0       0       0       0       0       0       0
  6653 ;;      Totals:         2       0       0       0       0       0       0
  6654 ;;Total ram usage:        2 bytes
  6655 ;; Hardware stack levels used: 1
  6656 ;; Hardware stack levels required when called: 4
  6657 ;; This function calls:
  6658 ;;		_i2c_read
  6659 ;;		_i2c_rep_start
  6660 ;;		_i2c_start
  6661 ;;		_i2c_stop
  6662 ;;		_i2c_write
  6663 ;; This function is called by:
  6664 ;;		_set_time
  6665 ;;		_get_time
  6666 ;;		_init_ds1307
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text24
  6671   002ABA                     __ptext24:
  6672                           	callstack 0
  6673   002ABA                     _read_ds1307:
  6674                           	callstack 25
  6675                           
  6676                           ;incstack = 0
  6677                           ;read_ds1307@address stored from wreg
  6678   002ABA  6E02               	movwf	read_ds1307@address^0,c
  6679   002ABC                     
  6680                           ;ds1307.c: 83: unsigned char read_ds1307(unsigned char address);ds1307.c: 84: {;ds1307.c
      +                          : 85:  unsigned char data;;ds1307.c: 87:  i2c_start();
  6681   002ABC  EC34  F016         	call	_i2c_start	;wreg free
  6682   002AC0                     
  6683                           ;ds1307.c: 88:  i2c_write(0xD0);
  6684   002AC0  0ED0               	movlw	208
  6685   002AC2  EC24  F016         	call	_i2c_write
  6686   002AC6                     
  6687                           ;ds1307.c: 89:  i2c_write(address);
  6688   002AC6  5002               	movf	read_ds1307@address^0,w,c
  6689   002AC8  EC24  F016         	call	_i2c_write
  6690   002ACC                     
  6691                           ;ds1307.c: 90:  i2c_rep_start();
  6692   002ACC  EC38  F016         	call	_i2c_rep_start	;wreg free
  6693   002AD0                     
  6694                           ;ds1307.c: 91:  i2c_write(0xD1);
  6695   002AD0  0ED1               	movlw	209
  6696   002AD2  EC24  F016         	call	_i2c_write
  6697                           
  6698                           ;ds1307.c: 92:  data = i2c_read();
  6699   002AD6  EC2A  F016         	call	_i2c_read	;wreg free
  6700   002ADA  6E03               	movwf	read_ds1307@data^0,c
  6701   002ADC                     
  6702                           ;ds1307.c: 93:  i2c_stop();
  6703   002ADC  EC30  F016         	call	_i2c_stop	;wreg free
  6704                           
  6705                           ;ds1307.c: 95:  return data;
  6706   002AE0  5003               	movf	read_ds1307@data^0,w,c
  6707   002AE2  0012               	return		;funcret
  6708   002AE4                     __end_of_read_ds1307:
  6709                           	callstack 0
  6710                           
  6711 ;; *************** function ___xxtofl *****************
  6712 ;; Defined at:
  6713 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  sign            1    wreg     unsigned char 
  6716 ;;  val             4    7[COMRAM] long 
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;  sign            1   15[COMRAM] unsigned char 
  6719 ;;  arg             4   17[COMRAM] unsigned long 
  6720 ;;  exp             1   16[COMRAM] unsigned char 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  4    7[COMRAM] unsigned char 
  6723 ;; Registers used:
  6724 ;;		wreg, status,2, status,0
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6730 ;;      Params:         4       0       0       0       0       0       0
  6731 ;;      Locals:         6       0       0       0       0       0       0
  6732 ;;      Temps:          4       0       0       0       0       0       0
  6733 ;;      Totals:        14       0       0       0       0       0       0
  6734 ;;Total ram usage:       14 bytes
  6735 ;; Hardware stack levels used: 1
  6736 ;; Hardware stack levels required when called: 1
  6737 ;; This function calls:
  6738 ;;		Nothing
  6739 ;; This function is called by:
  6740 ;;		_display_dashboard
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text25
  6745   001DFE                     __ptext25:
  6746                           	callstack 0
  6747   001DFE                     ___xxtofl:
  6748                           	callstack 28
  6749                           
  6750                           ;incstack = 0
  6751                           ;___xxtofl@sign stored from wreg
  6752   001DFE  6E10               	movwf	___xxtofl@sign^0,c
  6753   001E00  5010               	movf	___xxtofl@sign^0,w,c
  6754   001E02  B4D8               	btfsc	status,2,c
  6755   001E04  EF06  F00F         	goto	u3141
  6756   001E08  EF08  F00F         	goto	u3140
  6757   001E0C                     u3141:
  6758   001E0C  EF2A  F00F         	goto	l1546
  6759   001E10                     u3140:
  6760   001E10  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  6761   001E12  EF0F  F00F         	goto	u3150
  6762   001E16  EF0D  F00F         	goto	u3151
  6763   001E1A                     u3151:
  6764   001E1A  EF2A  F00F         	goto	l1546
  6765   001E1E                     u3150:
  6766   001E1E  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  6767   001E22  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  6768   001E26  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  6769   001E2A  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  6770   001E2E  1E0C               	comf	??___xxtofl^0,f,c
  6771   001E30  1E0D               	comf	(??___xxtofl+1)^0,f,c
  6772   001E32  1E0E               	comf	(??___xxtofl+2)^0,f,c
  6773   001E34  1E0F               	comf	(??___xxtofl+3)^0,f,c
  6774   001E36  2A0C               	incf	??___xxtofl^0,f,c
  6775   001E38  0E00               	movlw	0
  6776   001E3A  220D               	addwfc	(??___xxtofl+1)^0,f,c
  6777   001E3C  220E               	addwfc	(??___xxtofl+2)^0,f,c
  6778   001E3E  220F               	addwfc	(??___xxtofl+3)^0,f,c
  6779   001E40  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  6780   001E44  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  6781   001E48  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  6782   001E4C  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  6783   001E50  EF32  F00F         	goto	l3970
  6784   001E54                     l1546:
  6785   001E54  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  6786   001E58  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6787   001E5C  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6788   001E60  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6789   001E64                     l3970:
  6790   001E64  5008               	movf	___xxtofl@val^0,w,c
  6791   001E66  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  6792   001E68  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  6793   001E6A  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  6794   001E6C  A4D8               	btfss	status,2,c
  6795   001E6E  EF3B  F00F         	goto	u3161
  6796   001E72  EF3D  F00F         	goto	u3160
  6797   001E76                     u3161:
  6798   001E76  EF47  F00F         	goto	l3976
  6799   001E7A                     u3160:
  6800   001E7A  0E00               	movlw	0
  6801   001E7C  6E08               	movwf	?___xxtofl^0,c
  6802   001E7E  0E00               	movlw	0
  6803   001E80  6E09               	movwf	(?___xxtofl+1)^0,c
  6804   001E82  0E00               	movlw	0
  6805   001E84  6E0A               	movwf	(?___xxtofl+2)^0,c
  6806   001E86  0E00               	movlw	0
  6807   001E88  6E0B               	movwf	(?___xxtofl+3)^0,c
  6808   001E8A  EFD8  F00F         	goto	l1549
  6809   001E8E                     l3976:
  6810   001E8E  0E96               	movlw	150
  6811   001E90  6E11               	movwf	___xxtofl@exp^0,c
  6812   001E92  EF51  F00F         	goto	l3980
  6813   001E96                     l3978:
  6814   001E96  2A11               	incf	___xxtofl@exp^0,f,c
  6815   001E98  90D8               	bcf	status,0,c
  6816   001E9A  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  6817   001E9C  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  6818   001E9E  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  6819   001EA0  3212               	rrcf	___xxtofl@arg^0,f,c
  6820   001EA2                     l3980:
  6821   001EA2  0E00               	movlw	0
  6822   001EA4  1412               	andwf	___xxtofl@arg^0,w,c
  6823   001EA6  6E0C               	movwf	??___xxtofl^0,c
  6824   001EA8  0E00               	movlw	0
  6825   001EAA  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  6826   001EAC  6E0D               	movwf	(??___xxtofl+1)^0,c
  6827   001EAE  0E00               	movlw	0
  6828   001EB0  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  6829   001EB2  6E0E               	movwf	(??___xxtofl+2)^0,c
  6830   001EB4  0EFE               	movlw	254
  6831   001EB6  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  6832   001EB8  6E0F               	movwf	(??___xxtofl+3)^0,c
  6833   001EBA  500C               	movf	??___xxtofl^0,w,c
  6834   001EBC  100D               	iorwf	(??___xxtofl+1)^0,w,c
  6835   001EBE  100E               	iorwf	(??___xxtofl+2)^0,w,c
  6836   001EC0  100F               	iorwf	(??___xxtofl+3)^0,w,c
  6837   001EC2  A4D8               	btfss	status,2,c
  6838   001EC4  EF66  F00F         	goto	u3171
  6839   001EC8  EF68  F00F         	goto	u3170
  6840   001ECC                     u3171:
  6841   001ECC  EF4B  F00F         	goto	l3978
  6842   001ED0                     u3170:
  6843   001ED0  EF76  F00F         	goto	l1553
  6844   001ED4                     l3982:
  6845   001ED4  2A11               	incf	___xxtofl@exp^0,f,c
  6846   001ED6  0E01               	movlw	1
  6847   001ED8  2612               	addwf	___xxtofl@arg^0,f,c
  6848   001EDA  0E00               	movlw	0
  6849   001EDC  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  6850   001EDE  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  6851   001EE0  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  6852   001EE2  90D8               	bcf	status,0,c
  6853   001EE4  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  6854   001EE6  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  6855   001EE8  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  6856   001EEA  3212               	rrcf	___xxtofl@arg^0,f,c
  6857   001EEC                     l1553:
  6858   001EEC  0E00               	movlw	0
  6859   001EEE  1412               	andwf	___xxtofl@arg^0,w,c
  6860   001EF0  6E0C               	movwf	??___xxtofl^0,c
  6861   001EF2  0E00               	movlw	0
  6862   001EF4  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  6863   001EF6  6E0D               	movwf	(??___xxtofl+1)^0,c
  6864   001EF8  0E00               	movlw	0
  6865   001EFA  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  6866   001EFC  6E0E               	movwf	(??___xxtofl+2)^0,c
  6867   001EFE  0EFF               	movlw	255
  6868   001F00  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  6869   001F02  6E0F               	movwf	(??___xxtofl+3)^0,c
  6870   001F04  500C               	movf	??___xxtofl^0,w,c
  6871   001F06  100D               	iorwf	(??___xxtofl+1)^0,w,c
  6872   001F08  100E               	iorwf	(??___xxtofl+2)^0,w,c
  6873   001F0A  100F               	iorwf	(??___xxtofl+3)^0,w,c
  6874   001F0C  A4D8               	btfss	status,2,c
  6875   001F0E  EF8B  F00F         	goto	u3181
  6876   001F12  EF8D  F00F         	goto	u3180
  6877   001F16                     u3181:
  6878   001F16  EF6A  F00F         	goto	l3982
  6879   001F1A                     u3180:
  6880   001F1A  EF95  F00F         	goto	l3990
  6881   001F1E                     l3988:
  6882   001F1E  0611               	decf	___xxtofl@exp^0,f,c
  6883   001F20  90D8               	bcf	status,0,c
  6884   001F22  3612               	rlcf	___xxtofl@arg^0,f,c
  6885   001F24  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  6886   001F26  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  6887   001F28  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  6888   001F2A                     l3990:
  6889   001F2A  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  6890   001F2C  EF9A  F00F         	goto	u3191
  6891   001F30  EF9C  F00F         	goto	u3190
  6892   001F34                     u3191:
  6893   001F34  EFA4  F00F         	goto	l1560
  6894   001F38                     u3190:
  6895   001F38  0E02               	movlw	2
  6896   001F3A  6011               	cpfslt	___xxtofl@exp^0,c
  6897   001F3C  EFA2  F00F         	goto	u3201
  6898   001F40  EFA4  F00F         	goto	u3200
  6899   001F44                     u3201:
  6900   001F44  EF8F  F00F         	goto	l3988
  6901   001F48                     u3200:
  6902   001F48                     l1560:
  6903   001F48  B011               	btfsc	___xxtofl@exp^0,0,c
  6904   001F4A  EFA9  F00F         	goto	u3211
  6905   001F4E  EFAB  F00F         	goto	u3210
  6906   001F52                     u3211:
  6907   001F52  EFAC  F00F         	goto	l3996
  6908   001F56                     u3210:
  6909   001F56  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  6910   001F58                     l3996:
  6911   001F58  90D8               	bcf	status,0,c
  6912   001F5A  3211               	rrcf	___xxtofl@exp^0,f,c
  6913   001F5C  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  6914   001F60  6A0D               	clrf	(??___xxtofl+1)^0,c
  6915   001F62  6A0E               	clrf	(??___xxtofl+2)^0,c
  6916   001F64  6A0F               	clrf	(??___xxtofl+3)^0,c
  6917   001F66  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  6918   001F6A  6A0E               	clrf	(??___xxtofl+2)^0,c
  6919   001F6C  6A0D               	clrf	(??___xxtofl+1)^0,c
  6920   001F6E  6A0C               	clrf	??___xxtofl^0,c
  6921   001F70  500C               	movf	??___xxtofl^0,w,c
  6922   001F72  1212               	iorwf	___xxtofl@arg^0,f,c
  6923   001F74  500D               	movf	(??___xxtofl+1)^0,w,c
  6924   001F76  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  6925   001F78  500E               	movf	(??___xxtofl+2)^0,w,c
  6926   001F7A  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  6927   001F7C  500F               	movf	(??___xxtofl+3)^0,w,c
  6928   001F7E  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  6929   001F80  5010               	movf	___xxtofl@sign^0,w,c
  6930   001F82  B4D8               	btfsc	status,2,c
  6931   001F84  EFC6  F00F         	goto	u3221
  6932   001F88  EFC8  F00F         	goto	u3220
  6933   001F8C                     u3221:
  6934   001F8C  EFD0  F00F         	goto	l4006
  6935   001F90                     u3220:
  6936   001F90  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  6937   001F92  EFCF  F00F         	goto	u3230
  6938   001F96  EFCD  F00F         	goto	u3231
  6939   001F9A                     u3231:
  6940   001F9A  EFD0  F00F         	goto	l4006
  6941   001F9E                     u3230:
  6942   001F9E  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  6943   001FA0                     l4006:
  6944   001FA0  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  6945   001FA4  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  6946   001FA8  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  6947   001FAC  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  6948   001FB0                     l1549:
  6949   001FB0  0012               	return		;funcret
  6950   001FB2                     __end_of___xxtofl:
  6951                           	callstack 0
  6952                           
  6953 ;; *************** function ___lwmod *****************
  6954 ;; Defined at:
  6955 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;  dividend        2    0[COMRAM] unsigned int 
  6958 ;;  divisor         2    2[COMRAM] unsigned int 
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;  counter         1    4[COMRAM] unsigned char 
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  2    0[COMRAM] unsigned int 
  6963 ;; Registers used:
  6964 ;;		wreg, status,2, status,0
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6970 ;;      Params:         4       0       0       0       0       0       0
  6971 ;;      Locals:         1       0       0       0       0       0       0
  6972 ;;      Temps:          0       0       0       0       0       0       0
  6973 ;;      Totals:         5       0       0       0       0       0       0
  6974 ;;Total ram usage:        5 bytes
  6975 ;; Hardware stack levels used: 1
  6976 ;; Hardware stack levels required when called: 1
  6977 ;; This function calls:
  6978 ;;		Nothing
  6979 ;; This function is called by:
  6980 ;;		_display_dashboard
  6981 ;;		_password_screen
  6982 ;;		_view_log
  6983 ;;		_download_log
  6984 ;; This function uses a non-reentrant model
  6985 ;;
  6986                           
  6987                           	psect	text26
  6988   002878                     __ptext26:
  6989                           	callstack 0
  6990   002878                     ___lwmod:
  6991                           	callstack 28
  6992   002878  5003               	movf	___lwmod@divisor^0,w,c
  6993   00287A  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  6994   00287C  B4D8               	btfsc	status,2,c
  6995   00287E  EF43  F014         	goto	u3111
  6996   002882  EF45  F014         	goto	u3110
  6997   002886                     u3111:
  6998   002886  EF69  F014         	goto	l1392
  6999   00288A                     u3110:
  7000   00288A  0E01               	movlw	1
  7001   00288C  6E05               	movwf	___lwmod@counter^0,c
  7002   00288E  EF4D  F014         	goto	l3954
  7003   002892                     l3952:
  7004   002892  90D8               	bcf	status,0,c
  7005   002894  3603               	rlcf	___lwmod@divisor^0,f,c
  7006   002896  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  7007   002898  2A05               	incf	___lwmod@counter^0,f,c
  7008   00289A                     l3954:
  7009   00289A  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  7010   00289C  EF52  F014         	goto	u3121
  7011   0028A0  EF54  F014         	goto	u3120
  7012   0028A4                     u3121:
  7013   0028A4  EF49  F014         	goto	l3952
  7014   0028A8                     u3120:
  7015   0028A8                     l3956:
  7016   0028A8  5003               	movf	___lwmod@divisor^0,w,c
  7017   0028AA  5C01               	subwf	___lwmod@dividend^0,w,c
  7018   0028AC  5004               	movf	(___lwmod@divisor+1)^0,w,c
  7019   0028AE  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  7020   0028B0  A0D8               	btfss	status,0,c
  7021   0028B2  EF5D  F014         	goto	u3131
  7022   0028B6  EF5F  F014         	goto	u3130
  7023   0028BA                     u3131:
  7024   0028BA  EF63  F014         	goto	l3960
  7025   0028BE                     u3130:
  7026   0028BE  5003               	movf	___lwmod@divisor^0,w,c
  7027   0028C0  5E01               	subwf	___lwmod@dividend^0,f,c
  7028   0028C2  5004               	movf	(___lwmod@divisor+1)^0,w,c
  7029   0028C4  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  7030   0028C6                     l3960:
  7031   0028C6  90D8               	bcf	status,0,c
  7032   0028C8  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  7033   0028CA  3203               	rrcf	___lwmod@divisor^0,f,c
  7034   0028CC  2E05               	decfsz	___lwmod@counter^0,f,c
  7035   0028CE  EF54  F014         	goto	l3956
  7036   0028D2                     l1392:
  7037   0028D2  C001  F001         	movff	___lwmod@dividend,?___lwmod
  7038   0028D6  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  7039   0028DA  0012               	return		;funcret
  7040   0028DC                     __end_of___lwmod:
  7041                           	callstack 0
  7042                           
  7043 ;; *************** function ___lwdiv *****************
  7044 ;; Defined at:
  7045 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  dividend        2    0[COMRAM] unsigned int 
  7048 ;;  divisor         2    2[COMRAM] unsigned int 
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;  quotient        2    4[COMRAM] unsigned int 
  7051 ;;  counter         1    6[COMRAM] unsigned char 
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  2    0[COMRAM] unsigned int 
  7054 ;; Registers used:
  7055 ;;		wreg, status,2, status,0
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7061 ;;      Params:         4       0       0       0       0       0       0
  7062 ;;      Locals:         3       0       0       0       0       0       0
  7063 ;;      Temps:          0       0       0       0       0       0       0
  7064 ;;      Totals:         7       0       0       0       0       0       0
  7065 ;;Total ram usage:        7 bytes
  7066 ;; Hardware stack levels used: 1
  7067 ;; Hardware stack levels required when called: 1
  7068 ;; This function calls:
  7069 ;;		Nothing
  7070 ;; This function is called by:
  7071 ;;		_display_dashboard
  7072 ;;		_password_screen
  7073 ;;		_view_log
  7074 ;;		_download_log
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text27
  7079   002798                     __ptext27:
  7080                           	callstack 0
  7081   002798                     ___lwdiv:
  7082                           	callstack 28
  7083   002798  0E00               	movlw	0
  7084   00279A  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  7085   00279C  0E00               	movlw	0
  7086   00279E  6E05               	movwf	___lwdiv@quotient^0,c
  7087   0027A0  5003               	movf	___lwdiv@divisor^0,w,c
  7088   0027A2  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7089   0027A4  B4D8               	btfsc	status,2,c
  7090   0027A6  EFD7  F013         	goto	u3081
  7091   0027AA  EFD9  F013         	goto	u3080
  7092   0027AE                     u3081:
  7093   0027AE  EF01  F014         	goto	l1382
  7094   0027B2                     u3080:
  7095   0027B2  0E01               	movlw	1
  7096   0027B4  6E07               	movwf	___lwdiv@counter^0,c
  7097   0027B6  EFE1  F013         	goto	l3934
  7098   0027BA                     l3932:
  7099   0027BA  90D8               	bcf	status,0,c
  7100   0027BC  3603               	rlcf	___lwdiv@divisor^0,f,c
  7101   0027BE  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7102   0027C0  2A07               	incf	___lwdiv@counter^0,f,c
  7103   0027C2                     l3934:
  7104   0027C2  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  7105   0027C4  EFE6  F013         	goto	u3091
  7106   0027C8  EFE8  F013         	goto	u3090
  7107   0027CC                     u3091:
  7108   0027CC  EFDD  F013         	goto	l3932
  7109   0027D0                     u3090:
  7110   0027D0                     l3936:
  7111   0027D0  90D8               	bcf	status,0,c
  7112   0027D2  3605               	rlcf	___lwdiv@quotient^0,f,c
  7113   0027D4  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7114   0027D6  5003               	movf	___lwdiv@divisor^0,w,c
  7115   0027D8  5C01               	subwf	___lwdiv@dividend^0,w,c
  7116   0027DA  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  7117   0027DC  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7118   0027DE  A0D8               	btfss	status,0,c
  7119   0027E0  EFF4  F013         	goto	u3101
  7120   0027E4  EFF6  F013         	goto	u3100
  7121   0027E8                     u3101:
  7122   0027E8  EFFB  F013         	goto	l3944
  7123   0027EC                     u3100:
  7124   0027EC  5003               	movf	___lwdiv@divisor^0,w,c
  7125   0027EE  5E01               	subwf	___lwdiv@dividend^0,f,c
  7126   0027F0  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  7127   0027F2  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7128   0027F4  8005               	bsf	___lwdiv@quotient^0,0,c
  7129   0027F6                     l3944:
  7130   0027F6  90D8               	bcf	status,0,c
  7131   0027F8  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7132   0027FA  3203               	rrcf	___lwdiv@divisor^0,f,c
  7133   0027FC  2E07               	decfsz	___lwdiv@counter^0,f,c
  7134   0027FE  EFE8  F013         	goto	l3936
  7135   002802                     l1382:
  7136   002802  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  7137   002806  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7138   00280A  0012               	return		;funcret
  7139   00280C                     __end_of___lwdiv:
  7140                           	callstack 0
  7141                           
  7142 ;; *************** function ___fltol *****************
  7143 ;; Defined at:
  7144 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;  f1              4   46[COMRAM] unsigned int 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;  exp1            1   55[COMRAM] unsigned char 
  7149 ;;  sign1           1   54[COMRAM] unsigned char 
  7150 ;; Return value:  Size  Location     Type
  7151 ;;                  4   46[COMRAM] long 
  7152 ;; Registers used:
  7153 ;;		wreg, status,2, status,0
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7159 ;;      Params:         4       0       0       0       0       0       0
  7160 ;;      Locals:         2       0       0       0       0       0       0
  7161 ;;      Temps:          4       0       0       0       0       0       0
  7162 ;;      Totals:        10       0       0       0       0       0       0
  7163 ;;Total ram usage:       10 bytes
  7164 ;; Hardware stack levels used: 1
  7165 ;; Hardware stack levels required when called: 1
  7166 ;; This function calls:
  7167 ;;		Nothing
  7168 ;; This function is called by:
  7169 ;;		_display_dashboard
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           	psect	text28
  7174   0021EA                     __ptext28:
  7175                           	callstack 0
  7176   0021EA                     ___fltol:
  7177                           	callstack 28
  7178   0021EA  3431               	rlcf	(___fltol@f1+2)^0,w,c
  7179   0021EC  3432               	rlcf	(___fltol@f1+3)^0,w,c
  7180   0021EE  6E38               	movwf	___fltol@exp1^0,c
  7181   0021F0  5038               	movf	___fltol@exp1^0,w,c
  7182   0021F2  A4D8               	btfss	status,2,c
  7183   0021F4  EFFE  F010         	goto	u3011
  7184   0021F8  EF00  F011         	goto	u3010
  7185   0021FC                     u3011:
  7186   0021FC  EF0A  F011         	goto	l3888
  7187   002200                     u3010:
  7188   002200                     l3884:
  7189   002200  0E00               	movlw	0
  7190   002202  6E2F               	movwf	?___fltol^0,c
  7191   002204  0E00               	movlw	0
  7192   002206  6E30               	movwf	(?___fltol+1)^0,c
  7193   002208  0E00               	movlw	0
  7194   00220A  6E31               	movwf	(?___fltol+2)^0,c
  7195   00220C  0E00               	movlw	0
  7196   00220E  6E32               	movwf	(?___fltol+3)^0,c
  7197   002210  EF77  F011         	goto	l1188
  7198   002214                     l3888:
  7199   002214  C02F  F033         	movff	___fltol@f1,??___fltol
  7200   002218  C030  F034         	movff	___fltol@f1+1,??___fltol+1
  7201   00221C  C031  F035         	movff	___fltol@f1+2,??___fltol+2
  7202   002220  C032  F036         	movff	___fltol@f1+3,??___fltol+3
  7203   002224  0E20               	movlw	32
  7204   002226  EF1A  F011         	goto	u3020
  7205   00222A                     u3025:
  7206   00222A  90D8               	bcf	status,0,c
  7207   00222C  3236               	rrcf	(??___fltol+3)^0,f,c
  7208   00222E  3235               	rrcf	(??___fltol+2)^0,f,c
  7209   002230  3234               	rrcf	(??___fltol+1)^0,f,c
  7210   002232  3233               	rrcf	??___fltol^0,f,c
  7211   002234                     u3020:
  7212   002234  2EE8               	decfsz	wreg,f,c
  7213   002236  EF15  F011         	goto	u3025
  7214   00223A  5033               	movf	??___fltol^0,w,c
  7215   00223C  6E37               	movwf	___fltol@sign1^0,c
  7216   00223E  8E31               	bsf	(___fltol@f1+2)^0,7,c
  7217   002240  0EFF               	movlw	255
  7218   002242  162F               	andwf	___fltol@f1^0,f,c
  7219   002244  0EFF               	movlw	255
  7220   002246  1630               	andwf	(___fltol@f1+1)^0,f,c
  7221   002248  0EFF               	movlw	255
  7222   00224A  1631               	andwf	(___fltol@f1+2)^0,f,c
  7223   00224C  0E00               	movlw	0
  7224   00224E  1632               	andwf	(___fltol@f1+3)^0,f,c
  7225   002250  0E96               	movlw	150
  7226   002252  5E38               	subwf	___fltol@exp1^0,f,c
  7227   002254  BE38               	btfsc	___fltol@exp1^0,7,c
  7228   002256  EF31  F011         	goto	u3030
  7229   00225A  EF2F  F011         	goto	u3031
  7230   00225E                     u3031:
  7231   00225E  EF47  F011         	goto	l3908
  7232   002262                     u3030:
  7233   002262  5038               	movf	___fltol@exp1^0,w,c
  7234   002264  0A80               	xorlw	128
  7235   002266  0F97               	addlw	151
  7236   002268  B0D8               	btfsc	status,0,c
  7237   00226A  EF39  F011         	goto	u3041
  7238   00226E  EF3B  F011         	goto	u3040
  7239   002272                     u3041:
  7240   002272  EF3D  F011         	goto	l3904
  7241   002276                     u3040:
  7242   002276  EF00  F011         	goto	l3884
  7243   00227A                     l3904:
  7244   00227A  90D8               	bcf	status,0,c
  7245   00227C  3232               	rrcf	(___fltol@f1+3)^0,f,c
  7246   00227E  3231               	rrcf	(___fltol@f1+2)^0,f,c
  7247   002280  3230               	rrcf	(___fltol@f1+1)^0,f,c
  7248   002282  322F               	rrcf	___fltol@f1^0,f,c
  7249   002284  3E38               	incfsz	___fltol@exp1^0,f,c
  7250   002286  EF3D  F011         	goto	l3904
  7251   00228A  EF5F  F011         	goto	l3918
  7252   00228E                     l3908:
  7253   00228E  0E1F               	movlw	31
  7254   002290  6438               	cpfsgt	___fltol@exp1^0,c
  7255   002292  EF4D  F011         	goto	u3051
  7256   002296  EF4F  F011         	goto	u3050
  7257   00229A                     u3051:
  7258   00229A  EF57  F011         	goto	l3916
  7259   00229E                     u3050:
  7260   00229E  EF00  F011         	goto	l3884
  7261   0022A2                     l3914:
  7262   0022A2  90D8               	bcf	status,0,c
  7263   0022A4  362F               	rlcf	___fltol@f1^0,f,c
  7264   0022A6  3630               	rlcf	(___fltol@f1+1)^0,f,c
  7265   0022A8  3631               	rlcf	(___fltol@f1+2)^0,f,c
  7266   0022AA  3632               	rlcf	(___fltol@f1+3)^0,f,c
  7267   0022AC  0638               	decf	___fltol@exp1^0,f,c
  7268   0022AE                     l3916:
  7269   0022AE  5038               	movf	___fltol@exp1^0,w,c
  7270   0022B0  A4D8               	btfss	status,2,c
  7271   0022B2  EF5D  F011         	goto	u3061
  7272   0022B6  EF5F  F011         	goto	u3060
  7273   0022BA                     u3061:
  7274   0022BA  EF51  F011         	goto	l3914
  7275   0022BE                     u3060:
  7276   0022BE                     l3918:
  7277   0022BE  5037               	movf	___fltol@sign1^0,w,c
  7278   0022C0  B4D8               	btfsc	status,2,c
  7279   0022C2  EF65  F011         	goto	u3071
  7280   0022C6  EF67  F011         	goto	u3070
  7281   0022CA                     u3071:
  7282   0022CA  EF6F  F011         	goto	l3922
  7283   0022CE                     u3070:
  7284   0022CE  1E32               	comf	(___fltol@f1+3)^0,f,c
  7285   0022D0  1E31               	comf	(___fltol@f1+2)^0,f,c
  7286   0022D2  1E30               	comf	(___fltol@f1+1)^0,f,c
  7287   0022D4  6C2F               	negf	___fltol@f1^0,c
  7288   0022D6  0E00               	movlw	0
  7289   0022D8  2230               	addwfc	(___fltol@f1+1)^0,f,c
  7290   0022DA  2231               	addwfc	(___fltol@f1+2)^0,f,c
  7291   0022DC  2232               	addwfc	(___fltol@f1+3)^0,f,c
  7292   0022DE                     l3922:
  7293   0022DE  C02F  F02F         	movff	___fltol@f1,?___fltol
  7294   0022E2  C030  F030         	movff	___fltol@f1+1,?___fltol+1
  7295   0022E6  C031  F031         	movff	___fltol@f1+2,?___fltol+2
  7296   0022EA  C032  F032         	movff	___fltol@f1+3,?___fltol+3
  7297   0022EE                     l1188:
  7298   0022EE  0012               	return		;funcret
  7299   0022F0                     __end_of___fltol:
  7300                           	callstack 0
  7301                           
  7302 ;; *************** function ___fldiv *****************
  7303 ;; Defined at:
  7304 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  b               4   21[COMRAM] long 
  7307 ;;  a               4   25[COMRAM] long 
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;  grs             4   40[COMRAM] unsigned long 
  7310 ;;  rem             4   33[COMRAM] unsigned long 
  7311 ;;  new_exp         2   38[COMRAM] short 
  7312 ;;  aexp            1   45[COMRAM] unsigned char 
  7313 ;;  bexp            1   44[COMRAM] unsigned char 
  7314 ;;  sign            1   37[COMRAM] unsigned char 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  4   21[COMRAM] unsigned char 
  7317 ;; Registers used:
  7318 ;;		wreg, status,2, status,0
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7324 ;;      Params:         8       0       0       0       0       0       0
  7325 ;;      Locals:        13       0       0       0       0       0       0
  7326 ;;      Temps:          4       0       0       0       0       0       0
  7327 ;;      Totals:        25       0       0       0       0       0       0
  7328 ;;Total ram usage:       25 bytes
  7329 ;; Hardware stack levels used: 1
  7330 ;; Hardware stack levels required when called: 1
  7331 ;; This function calls:
  7332 ;;		Nothing
  7333 ;; This function is called by:
  7334 ;;		_display_dashboard
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           	psect	text29
  7339   0010CE                     __ptext29:
  7340                           	callstack 0
  7341   0010CE                     ___fldiv:
  7342                           	callstack 28
  7343   0010CE  5019               	movf	(___fldiv@b+3)^0,w,c
  7344   0010D0  0B80               	andlw	128
  7345   0010D2  6E26               	movwf	___fldiv@sign^0,c
  7346   0010D4  5019               	movf	(___fldiv@b+3)^0,w,c
  7347   0010D6  2419               	addwf	(___fldiv@b+3)^0,w,c
  7348   0010D8  6E2D               	movwf	___fldiv@bexp^0,c
  7349   0010DA  AE18               	btfss	(___fldiv@b+2)^0,7,c
  7350   0010DC  EF72  F008         	goto	u2661
  7351   0010E0  EF74  F008         	goto	u2660
  7352   0010E4                     u2661:
  7353   0010E4  EF75  F008         	goto	l3670
  7354   0010E8                     u2660:
  7355   0010E8  802D               	bsf	___fldiv@bexp^0,0,c
  7356   0010EA                     l3670:
  7357   0010EA  502D               	movf	___fldiv@bexp^0,w,c
  7358   0010EC  B4D8               	btfsc	status,2,c
  7359   0010EE  EF7B  F008         	goto	u2671
  7360   0010F2  EF7D  F008         	goto	u2670
  7361   0010F6                     u2671:
  7362   0010F6  EF92  F008         	goto	l3680
  7363   0010FA                     u2670:
  7364   0010FA  282D               	incf	___fldiv@bexp^0,w,c
  7365   0010FC  A4D8               	btfss	status,2,c
  7366   0010FE  EF83  F008         	goto	u2681
  7367   001102  EF85  F008         	goto	u2680
  7368   001106                     u2681:
  7369   001106  EF8D  F008         	goto	l3676
  7370   00110A                     u2680:
  7371   00110A  0E00               	movlw	0
  7372   00110C  6E16               	movwf	___fldiv@b^0,c
  7373   00110E  0E00               	movlw	0
  7374   001110  6E17               	movwf	(___fldiv@b+1)^0,c
  7375   001112  0E00               	movlw	0
  7376   001114  6E18               	movwf	(___fldiv@b+2)^0,c
  7377   001116  0E00               	movlw	0
  7378   001118  6E19               	movwf	(___fldiv@b+3)^0,c
  7379   00111A                     l3676:
  7380   00111A  8E18               	bsf	(___fldiv@b+2)^0,7,c
  7381   00111C  0E00               	movlw	0
  7382   00111E  6E19               	movwf	(___fldiv@b+3)^0,c
  7383   001120  EF9A  F008         	goto	l3682
  7384   001124                     l3680:
  7385   001124  0E00               	movlw	0
  7386   001126  6E16               	movwf	___fldiv@b^0,c
  7387   001128  0E00               	movlw	0
  7388   00112A  6E17               	movwf	(___fldiv@b+1)^0,c
  7389   00112C  0E00               	movlw	0
  7390   00112E  6E18               	movwf	(___fldiv@b+2)^0,c
  7391   001130  0E00               	movlw	0
  7392   001132  6E19               	movwf	(___fldiv@b+3)^0,c
  7393   001134                     l3682:
  7394   001134  501D               	movf	(___fldiv@a+3)^0,w,c
  7395   001136  0B80               	andlw	128
  7396   001138  1A26               	xorwf	___fldiv@sign^0,f,c
  7397   00113A  501D               	movf	(___fldiv@a+3)^0,w,c
  7398   00113C  241D               	addwf	(___fldiv@a+3)^0,w,c
  7399   00113E  6E2E               	movwf	___fldiv@aexp^0,c
  7400   001140  AE1C               	btfss	(___fldiv@a+2)^0,7,c
  7401   001142  EFA5  F008         	goto	u2691
  7402   001146  EFA7  F008         	goto	u2690
  7403   00114A                     u2691:
  7404   00114A  EFA8  F008         	goto	l3690
  7405   00114E                     u2690:
  7406   00114E  802E               	bsf	___fldiv@aexp^0,0,c
  7407   001150                     l3690:
  7408   001150  502E               	movf	___fldiv@aexp^0,w,c
  7409   001152  B4D8               	btfsc	status,2,c
  7410   001154  EFAE  F008         	goto	u2701
  7411   001158  EFB0  F008         	goto	u2700
  7412   00115C                     u2701:
  7413   00115C  EFC5  F008         	goto	l3700
  7414   001160                     u2700:
  7415   001160  282E               	incf	___fldiv@aexp^0,w,c
  7416   001162  A4D8               	btfss	status,2,c
  7417   001164  EFB6  F008         	goto	u2711
  7418   001168  EFB8  F008         	goto	u2710
  7419   00116C                     u2711:
  7420   00116C  EFC0  F008         	goto	l3696
  7421   001170                     u2710:
  7422   001170  0E00               	movlw	0
  7423   001172  6E1A               	movwf	___fldiv@a^0,c
  7424   001174  0E00               	movlw	0
  7425   001176  6E1B               	movwf	(___fldiv@a+1)^0,c
  7426   001178  0E00               	movlw	0
  7427   00117A  6E1C               	movwf	(___fldiv@a+2)^0,c
  7428   00117C  0E00               	movlw	0
  7429   00117E  6E1D               	movwf	(___fldiv@a+3)^0,c
  7430   001180                     l3696:
  7431   001180  8E1C               	bsf	(___fldiv@a+2)^0,7,c
  7432   001182  0E00               	movlw	0
  7433   001184  6E1D               	movwf	(___fldiv@a+3)^0,c
  7434   001186  EFCD  F008         	goto	l3702
  7435   00118A                     l3700:
  7436   00118A  0E00               	movlw	0
  7437   00118C  6E1A               	movwf	___fldiv@a^0,c
  7438   00118E  0E00               	movlw	0
  7439   001190  6E1B               	movwf	(___fldiv@a+1)^0,c
  7440   001192  0E00               	movlw	0
  7441   001194  6E1C               	movwf	(___fldiv@a+2)^0,c
  7442   001196  0E00               	movlw	0
  7443   001198  6E1D               	movwf	(___fldiv@a+3)^0,c
  7444   00119A                     l3702:
  7445   00119A  501A               	movf	___fldiv@a^0,w,c
  7446   00119C  101B               	iorwf	(___fldiv@a+1)^0,w,c
  7447   00119E  101C               	iorwf	(___fldiv@a+2)^0,w,c
  7448   0011A0  101D               	iorwf	(___fldiv@a+3)^0,w,c
  7449   0011A2  A4D8               	btfss	status,2,c
  7450   0011A4  EFD6  F008         	goto	u2721
  7451   0011A8  EFD8  F008         	goto	u2720
  7452   0011AC                     u2721:
  7453   0011AC  EFF0  F008         	goto	l3714
  7454   0011B0                     u2720:
  7455   0011B0  0E00               	movlw	0
  7456   0011B2  6E16               	movwf	___fldiv@b^0,c
  7457   0011B4  0E00               	movlw	0
  7458   0011B6  6E17               	movwf	(___fldiv@b+1)^0,c
  7459   0011B8  0E00               	movlw	0
  7460   0011BA  6E18               	movwf	(___fldiv@b+2)^0,c
  7461   0011BC  0E00               	movlw	0
  7462   0011BE  6E19               	movwf	(___fldiv@b+3)^0,c
  7463   0011C0  0E80               	movlw	128
  7464   0011C2  1218               	iorwf	(___fldiv@b+2)^0,f,c
  7465   0011C4  0E7F               	movlw	127
  7466   0011C6  1219               	iorwf	(___fldiv@b+3)^0,f,c
  7467   0011C8                     l3708:
  7468   0011C8  5026               	movf	___fldiv@sign^0,w,c
  7469   0011CA  1219               	iorwf	(___fldiv@b+3)^0,f,c
  7470   0011CC  C016  F016         	movff	___fldiv@b,?___fldiv
  7471   0011D0  C017  F017         	movff	___fldiv@b+1,?___fldiv+1
  7472   0011D4  C018  F018         	movff	___fldiv@b+2,?___fldiv+2
  7473   0011D8  C019  F019         	movff	___fldiv@b+3,?___fldiv+3
  7474   0011DC  EF33  F00A         	goto	l1473
  7475   0011E0                     l3714:
  7476   0011E0  502D               	movf	___fldiv@bexp^0,w,c
  7477   0011E2  A4D8               	btfss	status,2,c
  7478   0011E4  EFF6  F008         	goto	u2731
  7479   0011E8  EFF8  F008         	goto	u2730
  7480   0011EC                     u2731:
  7481   0011EC  EF02  F009         	goto	l3722
  7482   0011F0                     u2730:
  7483   0011F0  0E00               	movlw	0
  7484   0011F2  6E16               	movwf	?___fldiv^0,c
  7485   0011F4  0E00               	movlw	0
  7486   0011F6  6E17               	movwf	(?___fldiv+1)^0,c
  7487   0011F8  0E00               	movlw	0
  7488   0011FA  6E18               	movwf	(?___fldiv+2)^0,c
  7489   0011FC  0E00               	movlw	0
  7490   0011FE  6E19               	movwf	(?___fldiv+3)^0,c
  7491   001200  EF33  F00A         	goto	l1473
  7492   001204                     l3722:
  7493   001204  502E               	movf	___fldiv@aexp^0,w,c
  7494   001206  C02D  F01E         	movff	___fldiv@bexp,??___fldiv
  7495   00120A  6A1F               	clrf	(??___fldiv+1)^0,c
  7496   00120C  5E1E               	subwf	??___fldiv^0,f,c
  7497   00120E  0E00               	movlw	0
  7498   001210  5A1F               	subwfb	(??___fldiv+1)^0,f,c
  7499   001212  0E7F               	movlw	127
  7500   001214  241E               	addwf	??___fldiv^0,w,c
  7501   001216  6E27               	movwf	___fldiv@new_exp^0,c
  7502   001218  0E00               	movlw	0
  7503   00121A  201F               	addwfc	(??___fldiv+1)^0,w,c
  7504   00121C  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  7505   00121E  C016  F022         	movff	___fldiv@b,___fldiv@rem
  7506   001222  C017  F023         	movff	___fldiv@b+1,___fldiv@rem+1
  7507   001226  C018  F024         	movff	___fldiv@b+2,___fldiv@rem+2
  7508   00122A  C019  F025         	movff	___fldiv@b+3,___fldiv@rem+3
  7509   00122E  0E00               	movlw	0
  7510   001230  6E16               	movwf	___fldiv@b^0,c
  7511   001232  0E00               	movlw	0
  7512   001234  6E17               	movwf	(___fldiv@b+1)^0,c
  7513   001236  0E00               	movlw	0
  7514   001238  6E18               	movwf	(___fldiv@b+2)^0,c
  7515   00123A  0E00               	movlw	0
  7516   00123C  6E19               	movwf	(___fldiv@b+3)^0,c
  7517   00123E  0E00               	movlw	0
  7518   001240  6E29               	movwf	___fldiv@grs^0,c
  7519   001242  0E00               	movlw	0
  7520   001244  6E2A               	movwf	(___fldiv@grs+1)^0,c
  7521   001246  0E00               	movlw	0
  7522   001248  6E2B               	movwf	(___fldiv@grs+2)^0,c
  7523   00124A  0E00               	movlw	0
  7524   00124C  6E2C               	movwf	(___fldiv@grs+3)^0,c
  7525   00124E  0E00               	movlw	0
  7526   001250  6E2E               	movwf	___fldiv@aexp^0,c
  7527   001252  EF63  F009         	goto	l1475
  7528   001256                     l3732:
  7529   001256  502E               	movf	___fldiv@aexp^0,w,c
  7530   001258  B4D8               	btfsc	status,2,c
  7531   00125A  EF31  F009         	goto	u2741
  7532   00125E  EF33  F009         	goto	u2740
  7533   001262                     u2741:
  7534   001262  EF4A  F009         	goto	l3740
  7535   001266                     u2740:
  7536   001266  90D8               	bcf	status,0,c
  7537   001268  3622               	rlcf	___fldiv@rem^0,f,c
  7538   00126A  3623               	rlcf	(___fldiv@rem+1)^0,f,c
  7539   00126C  3624               	rlcf	(___fldiv@rem+2)^0,f,c
  7540   00126E  3625               	rlcf	(___fldiv@rem+3)^0,f,c
  7541   001270  90D8               	bcf	status,0,c
  7542   001272  3616               	rlcf	___fldiv@b^0,f,c
  7543   001274  3617               	rlcf	(___fldiv@b+1)^0,f,c
  7544   001276  3618               	rlcf	(___fldiv@b+2)^0,f,c
  7545   001278  3619               	rlcf	(___fldiv@b+3)^0,f,c
  7546   00127A  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  7547   00127C  EF42  F009         	goto	u2751
  7548   001280  EF44  F009         	goto	u2750
  7549   001284                     u2751:
  7550   001284  EF45  F009         	goto	l1478
  7551   001288                     u2750:
  7552   001288  8016               	bsf	___fldiv@b^0,0,c
  7553   00128A                     l1478:
  7554   00128A  90D8               	bcf	status,0,c
  7555   00128C  3629               	rlcf	___fldiv@grs^0,f,c
  7556   00128E  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  7557   001290  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  7558   001292  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  7559   001294                     l3740:
  7560   001294  501A               	movf	___fldiv@a^0,w,c
  7561   001296  5C22               	subwf	___fldiv@rem^0,w,c
  7562   001298  501B               	movf	(___fldiv@a+1)^0,w,c
  7563   00129A  5823               	subwfb	(___fldiv@rem+1)^0,w,c
  7564   00129C  501C               	movf	(___fldiv@a+2)^0,w,c
  7565   00129E  5824               	subwfb	(___fldiv@rem+2)^0,w,c
  7566   0012A0  501D               	movf	(___fldiv@a+3)^0,w,c
  7567   0012A2  5825               	subwfb	(___fldiv@rem+3)^0,w,c
  7568   0012A4  A0D8               	btfss	status,0,c
  7569   0012A6  EF57  F009         	goto	u2761
  7570   0012AA  EF59  F009         	goto	u2760
  7571   0012AE                     u2761:
  7572   0012AE  EF62  F009         	goto	l3746
  7573   0012B2                     u2760:
  7574   0012B2  8C2C               	bsf	(___fldiv@grs+3)^0,6,c
  7575   0012B4  501A               	movf	___fldiv@a^0,w,c
  7576   0012B6  5E22               	subwf	___fldiv@rem^0,f,c
  7577   0012B8  501B               	movf	(___fldiv@a+1)^0,w,c
  7578   0012BA  5A23               	subwfb	(___fldiv@rem+1)^0,f,c
  7579   0012BC  501C               	movf	(___fldiv@a+2)^0,w,c
  7580   0012BE  5A24               	subwfb	(___fldiv@rem+2)^0,f,c
  7581   0012C0  501D               	movf	(___fldiv@a+3)^0,w,c
  7582   0012C2  5A25               	subwfb	(___fldiv@rem+3)^0,f,c
  7583   0012C4                     l3746:
  7584   0012C4  2A2E               	incf	___fldiv@aexp^0,f,c
  7585   0012C6                     l1475:
  7586   0012C6  0E19               	movlw	25
  7587   0012C8  642E               	cpfsgt	___fldiv@aexp^0,c
  7588   0012CA  EF69  F009         	goto	u2771
  7589   0012CE  EF6B  F009         	goto	u2770
  7590   0012D2                     u2771:
  7591   0012D2  EF2B  F009         	goto	l3732
  7592   0012D6                     u2770:
  7593   0012D6  5022               	movf	___fldiv@rem^0,w,c
  7594   0012D8  1023               	iorwf	(___fldiv@rem+1)^0,w,c
  7595   0012DA  1024               	iorwf	(___fldiv@rem+2)^0,w,c
  7596   0012DC  1025               	iorwf	(___fldiv@rem+3)^0,w,c
  7597   0012DE  B4D8               	btfsc	status,2,c
  7598   0012E0  EF74  F009         	goto	u2781
  7599   0012E4  EF76  F009         	goto	u2780
  7600   0012E8                     u2781:
  7601   0012E8  EF8E  F009         	goto	l3758
  7602   0012EC                     u2780:
  7603   0012EC  8029               	bsf	___fldiv@grs^0,0,c
  7604   0012EE  EF8E  F009         	goto	l3758
  7605   0012F2                     l3752:
  7606   0012F2  90D8               	bcf	status,0,c
  7607   0012F4  3616               	rlcf	___fldiv@b^0,f,c
  7608   0012F6  3617               	rlcf	(___fldiv@b+1)^0,f,c
  7609   0012F8  3618               	rlcf	(___fldiv@b+2)^0,f,c
  7610   0012FA  3619               	rlcf	(___fldiv@b+3)^0,f,c
  7611   0012FC  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  7612   0012FE  EF83  F009         	goto	u2791
  7613   001302  EF85  F009         	goto	u2790
  7614   001306                     u2791:
  7615   001306  EF86  F009         	goto	l1484
  7616   00130A                     u2790:
  7617   00130A  8016               	bsf	___fldiv@b^0,0,c
  7618   00130C                     l1484:
  7619   00130C  90D8               	bcf	status,0,c
  7620   00130E  3629               	rlcf	___fldiv@grs^0,f,c
  7621   001310  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  7622   001312  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  7623   001314  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  7624   001316  0627               	decf	___fldiv@new_exp^0,f,c
  7625   001318  A0D8               	btfss	status,0,c
  7626   00131A  0628               	decf	(___fldiv@new_exp+1)^0,f,c
  7627   00131C                     l3758:
  7628   00131C  AE18               	btfss	(___fldiv@b+2)^0,7,c
  7629   00131E  EF93  F009         	goto	u2801
  7630   001322  EF95  F009         	goto	u2800
  7631   001326                     u2801:
  7632   001326  EF79  F009         	goto	l3752
  7633   00132A                     u2800:
  7634   00132A  0E00               	movlw	0
  7635   00132C  6E2E               	movwf	___fldiv@aexp^0,c
  7636   00132E  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  7637   001330  EF9C  F009         	goto	u2811
  7638   001334  EF9E  F009         	goto	u2810
  7639   001338                     u2811:
  7640   001338  EFC2  F009         	goto	l1486
  7641   00133C                     u2810:
  7642   00133C  0EFF               	movlw	255
  7643   00133E  1429               	andwf	___fldiv@grs^0,w,c
  7644   001340  6E1E               	movwf	??___fldiv^0,c
  7645   001342  0EFF               	movlw	255
  7646   001344  142A               	andwf	(___fldiv@grs+1)^0,w,c
  7647   001346  6E1F               	movwf	(??___fldiv+1)^0,c
  7648   001348  0EFF               	movlw	255
  7649   00134A  142B               	andwf	(___fldiv@grs+2)^0,w,c
  7650   00134C  6E20               	movwf	(??___fldiv+2)^0,c
  7651   00134E  0E7F               	movlw	127
  7652   001350  142C               	andwf	(___fldiv@grs+3)^0,w,c
  7653   001352  6E21               	movwf	(??___fldiv+3)^0,c
  7654   001354  501E               	movf	??___fldiv^0,w,c
  7655   001356  101F               	iorwf	(??___fldiv+1)^0,w,c
  7656   001358  1020               	iorwf	(??___fldiv+2)^0,w,c
  7657   00135A  1021               	iorwf	(??___fldiv+3)^0,w,c
  7658   00135C  B4D8               	btfsc	status,2,c
  7659   00135E  EFB3  F009         	goto	u2821
  7660   001362  EFB5  F009         	goto	u2820
  7661   001366                     u2821:
  7662   001366  EFB9  F009         	goto	l1487
  7663   00136A                     u2820:
  7664   00136A                     l3766:
  7665   00136A  0E01               	movlw	1
  7666   00136C  6E2E               	movwf	___fldiv@aexp^0,c
  7667   00136E  EFC2  F009         	goto	l1486
  7668   001372                     l1487:
  7669   001372  A016               	btfss	___fldiv@b^0,0,c
  7670   001374  EFBE  F009         	goto	u2831
  7671   001378  EFC0  F009         	goto	u2830
  7672   00137C                     u2831:
  7673   00137C  EFC2  F009         	goto	l1486
  7674   001380                     u2830:
  7675   001380  EFB5  F009         	goto	l3766
  7676   001384                     l1486:
  7677   001384  502E               	movf	___fldiv@aexp^0,w,c
  7678   001386  B4D8               	btfsc	status,2,c
  7679   001388  EFC8  F009         	goto	u2841
  7680   00138C  EFCA  F009         	goto	u2840
  7681   001390                     u2841:
  7682   001390  EFEE  F009         	goto	l3778
  7683   001394                     u2840:
  7684   001394  0E01               	movlw	1
  7685   001396  2616               	addwf	___fldiv@b^0,f,c
  7686   001398  0E00               	movlw	0
  7687   00139A  2217               	addwfc	(___fldiv@b+1)^0,f,c
  7688   00139C  2218               	addwfc	(___fldiv@b+2)^0,f,c
  7689   00139E  2219               	addwfc	(___fldiv@b+3)^0,f,c
  7690   0013A0  A019               	btfss	(___fldiv@b+3)^0,0,c
  7691   0013A2  EFD5  F009         	goto	u2851
  7692   0013A6  EFD7  F009         	goto	u2850
  7693   0013AA                     u2851:
  7694   0013AA  EFEE  F009         	goto	l3778
  7695   0013AE                     u2850:
  7696   0013AE  C016  F01E         	movff	___fldiv@b,??___fldiv
  7697   0013B2  C017  F01F         	movff	___fldiv@b+1,??___fldiv+1
  7698   0013B6  C018  F020         	movff	___fldiv@b+2,??___fldiv+2
  7699   0013BA  C019  F021         	movff	___fldiv@b+3,??___fldiv+3
  7700   0013BE  3421               	rlcf	(??___fldiv+3)^0,w,c
  7701   0013C0  3221               	rrcf	(??___fldiv+3)^0,f,c
  7702   0013C2  3220               	rrcf	(??___fldiv+2)^0,f,c
  7703   0013C4  321F               	rrcf	(??___fldiv+1)^0,f,c
  7704   0013C6  321E               	rrcf	??___fldiv^0,f,c
  7705   0013C8  C01E  F016         	movff	??___fldiv,___fldiv@b
  7706   0013CC  C01F  F017         	movff	??___fldiv+1,___fldiv@b+1
  7707   0013D0  C020  F018         	movff	??___fldiv+2,___fldiv@b+2
  7708   0013D4  C021  F019         	movff	??___fldiv+3,___fldiv@b+3
  7709   0013D8  4A27               	infsnz	___fldiv@new_exp^0,f,c
  7710   0013DA  2A28               	incf	(___fldiv@new_exp+1)^0,f,c
  7711   0013DC                     l3778:
  7712   0013DC  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7713   0013DE  EFF9  F009         	goto	u2861
  7714   0013E2  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  7715   0013E4  E108               	bnz	u2860
  7716   0013E6  2827               	incf	___fldiv@new_exp^0,w,c
  7717   0013E8  A0D8               	btfss	status,0,c
  7718   0013EA  EFF9  F009         	goto	u2861
  7719   0013EE  EFFB  F009         	goto	u2860
  7720   0013F2                     u2861:
  7721   0013F2  EF06  F00A         	goto	l3782
  7722   0013F6                     u2860:
  7723   0013F6  0E00               	movlw	0
  7724   0013F8  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  7725   0013FA  6827               	setf	___fldiv@new_exp^0,c
  7726   0013FC  0E00               	movlw	0
  7727   0013FE  6E16               	movwf	___fldiv@b^0,c
  7728   001400  0E00               	movlw	0
  7729   001402  6E17               	movwf	(___fldiv@b+1)^0,c
  7730   001404  0E00               	movlw	0
  7731   001406  6E18               	movwf	(___fldiv@b+2)^0,c
  7732   001408  0E00               	movlw	0
  7733   00140A  6E19               	movwf	(___fldiv@b+3)^0,c
  7734   00140C                     l3782:
  7735   00140C  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7736   00140E  EF13  F00A         	goto	u2870
  7737   001412  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  7738   001414  E106               	bnz	u2871
  7739   001416  0427               	decf	___fldiv@new_exp^0,w,c
  7740   001418  B0D8               	btfsc	status,0,c
  7741   00141A  EF11  F00A         	goto	u2871
  7742   00141E  EF13  F00A         	goto	u2870
  7743   001422                     u2871:
  7744   001422  EF21  F00A         	goto	l3786
  7745   001426                     u2870:
  7746   001426  0E00               	movlw	0
  7747   001428  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  7748   00142A  0E00               	movlw	0
  7749   00142C  6E27               	movwf	___fldiv@new_exp^0,c
  7750   00142E  0E00               	movlw	0
  7751   001430  6E16               	movwf	___fldiv@b^0,c
  7752   001432  0E00               	movlw	0
  7753   001434  6E17               	movwf	(___fldiv@b+1)^0,c
  7754   001436  0E00               	movlw	0
  7755   001438  6E18               	movwf	(___fldiv@b+2)^0,c
  7756   00143A  0E00               	movlw	0
  7757   00143C  6E19               	movwf	(___fldiv@b+3)^0,c
  7758   00143E  0E00               	movlw	0
  7759   001440  6E26               	movwf	___fldiv@sign^0,c
  7760   001442                     l3786:
  7761   001442  C027  F02D         	movff	___fldiv@new_exp,___fldiv@bexp
  7762   001446  A02D               	btfss	___fldiv@bexp^0,0,c
  7763   001448  EF28  F00A         	goto	u2881
  7764   00144C  EF2A  F00A         	goto	u2880
  7765   001450                     u2881:
  7766   001450  EF2D  F00A         	goto	l3792
  7767   001454                     u2880:
  7768   001454  8E18               	bsf	(___fldiv@b+2)^0,7,c
  7769   001456  EF2E  F00A         	goto	l3794
  7770   00145A                     l3792:
  7771   00145A  9E18               	bcf	(___fldiv@b+2)^0,7,c
  7772   00145C                     l3794:
  7773   00145C  90D8               	bcf	status,0,c
  7774   00145E  302D               	rrcf	___fldiv@bexp^0,w,c
  7775   001460  6E19               	movwf	(___fldiv@b+3)^0,c
  7776   001462  EFE4  F008         	goto	l3708
  7777   001466                     l1473:
  7778   001466  0012               	return		;funcret
  7779   001468                     __end_of___fldiv:
  7780                           	callstack 0
  7781                           
  7782 ;; *************** function _clear_log *****************
  7783 ;; Defined at:
  7784 ;;		line 297 in file "common.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;		None
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;  y               4   27[COMRAM] unsigned long 
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  1    wreg      void 
  7791 ;; Registers used:
  7792 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7798 ;;      Params:         0       0       0       0       0       0       0
  7799 ;;      Locals:         4       0       0       0       0       0       0
  7800 ;;      Temps:          0       0       0       0       0       0       0
  7801 ;;      Totals:         4       0       0       0       0       0       0
  7802 ;;Total ram usage:        4 bytes
  7803 ;; Hardware stack levels used: 1
  7804 ;; Hardware stack levels required when called: 7
  7805 ;; This function calls:
  7806 ;;		_clcd_print
  7807 ;;		_clcd_write
  7808 ;;		_store_event_in_eeprom
  7809 ;; This function is called by:
  7810 ;;		_main
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           	psect	text30
  7815   002464                     __ptext30:
  7816                           	callstack 0
  7817   002464                     _clear_log:
  7818                           	callstack 23
  7819   002464                     
  7820                           ;common.c: 298:     no_of_event = 0;
  7821   002464  0E00               	movlw	0
  7822   002466  6E5B               	movwf	(_no_of_event+1)^0,c
  7823   002468  0E00               	movlw	0
  7824   00246A  6E5A               	movwf	_no_of_event^0,c
  7825                           
  7826                           ;common.c: 299:     MENU_FLAG = 0;
  7827   00246C  0E00               	movlw	0
  7828   00246E  6E50               	movwf	(_MENU_FLAG+1)^0,c
  7829   002470  0E00               	movlw	0
  7830   002472  6E4F               	movwf	_MENU_FLAG^0,c
  7831   002474                     
  7832                           ;common.c: 300:     clcd_print("CLEAR LOG", (0x80 + (3)));
  7833   002474  0ED5               	movlw	low STR_19
  7834   002476  6E07               	movwf	clcd_print@data^0,c
  7835   002478  0E2F               	movlw	high STR_19
  7836   00247A  6E08               	movwf	(clcd_print@data+1)^0,c
  7837   00247C  0E83               	movlw	131
  7838   00247E  6E09               	movwf	clcd_print@addr^0,c
  7839   002480  EC06  F014         	call	_clcd_print	;wreg free
  7840   002484                     
  7841                           ;common.c: 301:     clcd_print("SUCCESSFULLY", (0xC0 + (3)));
  7842   002484  0EA6               	movlw	low STR_20
  7843   002486  6E07               	movwf	clcd_print@data^0,c
  7844   002488  0E2F               	movlw	high STR_20
  7845   00248A  6E08               	movwf	(clcd_print@data+1)^0,c
  7846   00248C  0EC3               	movlw	195
  7847   00248E  6E09               	movwf	clcd_print@addr^0,c
  7848   002490  EC06  F014         	call	_clcd_print	;wreg free
  7849                           
  7850                           ;common.c: 302:     for (unsigned long int y = 0xFFFFA; --y;);
  7851   002494  0EFA               	movlw	250
  7852   002496  6E1C               	movwf	clear_log@y^0,c
  7853   002498  0EFF               	movlw	255
  7854   00249A  6E1D               	movwf	(clear_log@y+1)^0,c
  7855   00249C  0E0F               	movlw	15
  7856   00249E  6E1E               	movwf	(clear_log@y+2)^0,c
  7857   0024A0  0E00               	movlw	0
  7858   0024A2  6E1F               	movwf	(clear_log@y+3)^0,c
  7859   0024A4                     l4464:
  7860   0024A4  061C               	decf	clear_log@y^0,f,c
  7861   0024A6  0E00               	movlw	0
  7862   0024A8  5A1D               	subwfb	(clear_log@y+1)^0,f,c
  7863   0024AA  5A1E               	subwfb	(clear_log@y+2)^0,f,c
  7864   0024AC  5A1F               	subwfb	(clear_log@y+3)^0,f,c
  7865   0024AE  501C               	movf	clear_log@y^0,w,c
  7866   0024B0  101D               	iorwf	(clear_log@y+1)^0,w,c
  7867   0024B2  101E               	iorwf	(clear_log@y+2)^0,w,c
  7868   0024B4  101F               	iorwf	(clear_log@y+3)^0,w,c
  7869   0024B6  A4D8               	btfss	status,2,c
  7870   0024B8  EF60  F012         	goto	u3801
  7871   0024BC  EF62  F012         	goto	u3800
  7872   0024C0                     u3801:
  7873   0024C0  EF52  F012         	goto	l4464
  7874   0024C4                     u3800:
  7875   0024C4                     
  7876                           ;common.c: 303:     SCREEN_FLAG = 0;
  7877   0024C4  0E00               	movlw	0
  7878   0024C6  6E52               	movwf	(_SCREEN_FLAG+1)^0,c
  7879   0024C8  0E00               	movlw	0
  7880   0024CA  6E51               	movwf	_SCREEN_FLAG^0,c
  7881                           
  7882                           ;common.c: 304:     EI = 9;
  7883   0024CC  0E09               	movlw	9
  7884   0024CE  6E57               	movwf	_EI^0,c
  7885                           
  7886                           ;common.c: 305:     EF = 1;
  7887   0024D0  0E01               	movlw	1
  7888   0024D2  0100               	movlb	0	; () banked
  7889   0024D4  6FBE               	movwf	_EF& (0+255),b
  7890                           
  7891                           ;common.c: 306:     flag = 1;
  7892   0024D6  0E01               	movlw	1
  7893   0024D8  6FEF               	movwf	_flag& (0+255),b
  7894                           
  7895                           ;common.c: 307:     store_add = 0x00;
  7896   0024DA  0E00               	movlw	0
  7897   0024DC  6E46               	movwf	(_store_add+1)^0,c
  7898   0024DE  0E00               	movlw	0
  7899   0024E0  6E45               	movwf	_store_add^0,c
  7900                           
  7901                           ;common.c: 308:     no_of_event = 0;
  7902   0024E2  0E00               	movlw	0
  7903   0024E4  6E5B               	movwf	(_no_of_event+1)^0,c
  7904   0024E6  0E00               	movlw	0
  7905   0024E8  6E5A               	movwf	_no_of_event^0,c
  7906                           
  7907                           ;common.c: 309:     option_save = 1;
  7908   0024EA  0E01               	movlw	1
  7909   0024EC  6FBF               	movwf	_option_save& (0+255),b
  7910   0024EE                     
  7911                           ; BSR set to: 0
  7912                           ;common.c: 310:     store_event_in_eeprom();
  7913   0024EE  EC20  F00E         	call	_store_event_in_eeprom	;wreg free
  7914   0024F2                     
  7915                           ;common.c: 311:     clcd_write(0x01, 0);
  7916   0024F2  0E00               	movlw	0
  7917   0024F4  6E01               	movwf	clcd_write@control_bit^0,c
  7918   0024F6  0E01               	movlw	1
  7919   0024F8  EC25  F015         	call	_clcd_write
  7920   0024FC  0012               	return		;funcret
  7921   0024FE                     __end_of_clear_log:
  7922                           	callstack 0
  7923                           
  7924 ;; *************** function _change_password *****************
  7925 ;; Defined at:
  7926 ;;		line 423 in file "common.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;		None
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;  y               4   35[COMRAM] unsigned long 
  7931 ;;  y               4   31[COMRAM] unsigned long 
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  1    wreg      void 
  7934 ;; Registers used:
  7935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7941 ;;      Params:         0       0       0       0       0       0       0
  7942 ;;      Locals:         8       0       0       0       0       0       0
  7943 ;;      Temps:          4       0       0       0       0       0       0
  7944 ;;      Totals:        12       0       0       0       0       0       0
  7945 ;;Total ram usage:       12 bytes
  7946 ;; Hardware stack levels used: 1
  7947 ;; Hardware stack levels required when called: 7
  7948 ;; This function calls:
  7949 ;;		_clcd_print
  7950 ;;		_clcd_putch
  7951 ;;		_clcd_write
  7952 ;;		_store_event_in_eeprom
  7953 ;;		_write_external_eeprom
  7954 ;; This function is called by:
  7955 ;;		_main
  7956 ;; This function uses a non-reentrant model
  7957 ;;
  7958                           
  7959                           	psect	text31
  7960   000D32                     __ptext31:
  7961                           	callstack 0
  7962   000D32                     _change_password:
  7963                           	callstack 23
  7964   000D32                     
  7965                           ;common.c: 424:     if (index < 4) {
  7966   000D32  BE4A               	btfsc	(_index@common$F326+1)^0,7,c
  7967   000D34  EFA7  F006         	goto	u4040
  7968   000D38  504A               	movf	(_index@common$F326+1)^0,w,c
  7969   000D3A  E107               	bnz	u4041
  7970   000D3C  0E04               	movlw	4
  7971   000D3E  5C49               	subwf	_index@common$F326^0,w,c
  7972   000D40  B0D8               	btfsc	status,0,c
  7973   000D42  EFA5  F006         	goto	u4041
  7974   000D46  EFA7  F006         	goto	u4040
  7975   000D4A                     u4041:
  7976   000D4A  EF5C  F007         	goto	l4666
  7977   000D4E                     u4040:
  7978   000D4E                     
  7979                           ;common.c: 425:         if (once) {
  7980   000D4E  0100               	movlb	0	; () banked
  7981   000D50  51E1               	movf	_once@common$F327& (0+255),w,b
  7982   000D52  11E2               	iorwf	(_once@common$F327+1)& (0+255),w,b
  7983   000D54  B4D8               	btfsc	status,2,c
  7984   000D56  EFAF  F006         	goto	u4051
  7985   000D5A  EFB1  F006         	goto	u4050
  7986   000D5E                     u4051:
  7987   000D5E  EFCE  F006         	goto	l4634
  7988   000D62                     u4050:
  7989   000D62                     
  7990                           ; BSR set to: 0
  7991                           ;common.c: 426:             once = 0;
  7992   000D62  0E00               	movlw	0
  7993   000D64  6FE2               	movwf	(_once@common$F327+1)& (0+255),b
  7994   000D66  0E00               	movlw	0
  7995   000D68  6FE1               	movwf	_once@common$F327& (0+255),b
  7996   000D6A                     
  7997                           ; BSR set to: 0
  7998                           ;common.c: 427:             clcd_write(0x01, 0);
  7999   000D6A  0E00               	movlw	0
  8000   000D6C  6E01               	movwf	clcd_write@control_bit^0,c
  8001   000D6E  0E01               	movlw	1
  8002   000D70  EC25  F015         	call	_clcd_write
  8003   000D74                     
  8004                           ;common.c: 428:             clcd_print(" ENTER NEW PSW ", (0x80 + (0)));
  8005   000D74  0E35               	movlw	low STR_28
  8006   000D76  6E07               	movwf	clcd_print@data^0,c
  8007   000D78  0E2F               	movlw	high STR_28
  8008   000D7A  6E08               	movwf	(clcd_print@data+1)^0,c
  8009   000D7C  0E80               	movlw	128
  8010   000D7E  6E09               	movwf	clcd_print@addr^0,c
  8011   000D80  EC06  F014         	call	_clcd_print	;wreg free
  8012   000D84                     
  8013                           ;common.c: 429:             clcd_write(0xC4, 0);
  8014   000D84  0E00               	movlw	0
  8015   000D86  6E01               	movwf	clcd_write@control_bit^0,c
  8016   000D88  0EC4               	movlw	196
  8017   000D8A  EC25  F015         	call	_clcd_write
  8018   000D8E                     
  8019                           ;common.c: 430:             clcd_write(0x0F, 0);
  8020   000D8E  0E00               	movlw	0
  8021   000D90  6E01               	movwf	clcd_write@control_bit^0,c
  8022   000D92  0E0F               	movlw	15
  8023   000D94  EC25  F015         	call	_clcd_write
  8024   000D98                     
  8025                           ;common.c: 431:             key = 0;
  8026   000D98  0E00               	movlw	0
  8027   000D9A  6E59               	movwf	_key^0,c
  8028   000D9C                     l4634:
  8029                           
  8030                           ;common.c: 434:         if (key == 5) {
  8031   000D9C  0E05               	movlw	5
  8032   000D9E  1859               	xorwf	_key^0,w,c
  8033   000DA0  A4D8               	btfss	status,2,c
  8034   000DA2  EFD5  F006         	goto	u4061
  8035   000DA6  EFD7  F006         	goto	u4060
  8036   000DAA                     u4061:
  8037   000DAA  EF1F  F007         	goto	l4650
  8038   000DAE                     u4060:
  8039   000DAE                     
  8040                           ;common.c: 435:             arr[index] = 0;
  8041   000DAE  5049               	movf	_index@common$F326^0,w,c
  8042   000DB0  0D02               	mullw	2
  8043   000DB2  50F3               	movf	243,w,c
  8044   000DB4  0F70               	addlw	low _arr@common$F329
  8045   000DB6  6ED9               	movwf	fsr2l,c
  8046   000DB8  6ADA               	clrf	fsr2h,c
  8047   000DBA  6ADE               	clrf	postinc2,c
  8048   000DBC  6ADD               	clrf	postdec2,c
  8049   000DBE                     
  8050                           ;common.c: 436:             clcd_putch('*', (0xC0 + (index + 3)));
  8051   000DBE  5049               	movf	_index@common$F326^0,w,c
  8052   000DC0  0FC3               	addlw	195
  8053   000DC2  6E08               	movwf	clcd_putch@addr^0,c
  8054   000DC4  0E2A               	movlw	42
  8055   000DC6  ECDC  F015         	call	_clcd_putch
  8056   000DCA                     
  8057                           ;common.c: 437:             if (password) {
  8058   000DCA  0100               	movlb	0	; () banked
  8059   000DCC  51A7               	movf	_password& (0+255),w,b
  8060   000DCE  11A8               	iorwf	(_password+1)& (0+255),w,b
  8061   000DD0  B4D8               	btfsc	status,2,c
  8062   000DD2  EFED  F006         	goto	u4071
  8063   000DD6  EFEF  F006         	goto	u4070
  8064   000DDA                     u4071:
  8065   000DDA  EF0B  F007         	goto	l4646
  8066   000DDE                     u4070:
  8067   000DDE                     
  8068                           ; BSR set to: 0
  8069                           ;common.c: 438:                 if (arr[index] == dummy[index]) {
  8070   000DDE  5049               	movf	_index@common$F326^0,w,c
  8071   000DE0  0D02               	mullw	2
  8072   000DE2  50F3               	movf	243,w,c
  8073   000DE4  0F60               	addlw	low _dummy
  8074   000DE6  6ED9               	movwf	fsr2l,c
  8075   000DE8  6ADA               	clrf	fsr2h,c
  8076   000DEA  5049               	movf	_index@common$F326^0,w,c
  8077   000DEC  0D02               	mullw	2
  8078   000DEE  50F3               	movf	243,w,c
  8079   000DF0  0F70               	addlw	low _arr@common$F329
  8080   000DF2  6EE1               	movwf	fsr1l,c
  8081   000DF4  6AE2               	clrf	fsr1h,c
  8082   000DF6  50DE               	movf	postinc2,w,c
  8083   000DF8  18E6               	xorwf	postinc1,w,c
  8084   000DFA  E107               	bnz	u4081
  8085   000DFC  50DE               	movf	postinc2,w,c
  8086   000DFE  18E6               	xorwf	postinc1,w,c
  8087   000E00  A4D8               	btfss	status,2,c
  8088   000E02  EF05  F007         	goto	u4081
  8089   000E06  EF07  F007         	goto	u4080
  8090   000E0A                     u4081:
  8091   000E0A  EF1B  F007         	goto	l4648
  8092   000E0E                     u4080:
  8093   000E0E                     l4644:
  8094                           
  8095                           ; BSR set to: 0
  8096                           ;common.c: 439:                     ++count;
  8097   000E0E  4BB1               	infsnz	_count@common$F325& (0+255),f,b
  8098   000E10  2BB2               	incf	(_count@common$F325+1)& (0+255),f,b
  8099   000E12  EF1B  F007         	goto	l4648
  8100   000E16                     l4646:
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;common.c: 442:                 dummy[index] = arr[index];
  8104   000E16  5049               	movf	_index@common$F326^0,w,c
  8105   000E18  0D02               	mullw	2
  8106   000E1A  50F3               	movf	243,w,c
  8107   000E1C  0F70               	addlw	low _arr@common$F329
  8108   000E1E  6ED9               	movwf	fsr2l,c
  8109   000E20  6ADA               	clrf	fsr2h,c
  8110   000E22  5049               	movf	_index@common$F326^0,w,c
  8111   000E24  0D02               	mullw	2
  8112   000E26  50F3               	movf	243,w,c
  8113   000E28  0F60               	addlw	low _dummy
  8114   000E2A  6EE1               	movwf	fsr1l,c
  8115   000E2C  6AE2               	clrf	fsr1h,c
  8116   000E2E  CFDE FFE6          	movff	postinc2,postinc1
  8117   000E32  CFDD FFE5          	movff	postdec2,postdec1
  8118   000E36                     l4648:
  8119                           
  8120                           ; BSR set to: 0
  8121                           ;common.c: 444:             ++index;
  8122   000E36  4A49               	infsnz	_index@common$F326^0,f,c
  8123   000E38  2A4A               	incf	(_index@common$F326+1)^0,f,c
  8124                           
  8125                           ;common.c: 445:         } else if (key == 6) {
  8126   000E3A  EF66  F008         	goto	l536
  8127   000E3E                     l4650:
  8128   000E3E  0E06               	movlw	6
  8129   000E40  1859               	xorwf	_key^0,w,c
  8130   000E42  A4D8               	btfss	status,2,c
  8131   000E44  EF26  F007         	goto	u4091
  8132   000E48  EF28  F007         	goto	u4090
  8133   000E4C                     u4091:
  8134   000E4C  EF66  F008         	goto	l536
  8135   000E50                     u4090:
  8136   000E50                     
  8137                           ;common.c: 446:             arr[index] = 1;
  8138   000E50  5049               	movf	_index@common$F326^0,w,c
  8139   000E52  0D02               	mullw	2
  8140   000E54  50F3               	movf	243,w,c
  8141   000E56  0F70               	addlw	low _arr@common$F329
  8142   000E58  6ED9               	movwf	fsr2l,c
  8143   000E5A  6ADA               	clrf	fsr2h,c
  8144   000E5C  0E01               	movlw	1
  8145   000E5E  6EDE               	movwf	postinc2,c
  8146   000E60  0E00               	movlw	0
  8147   000E62  6EDD               	movwf	postdec2,c
  8148   000E64                     
  8149                           ;common.c: 447:             clcd_putch('*', (0xC0 + (index + 3)));
  8150   000E64  5049               	movf	_index@common$F326^0,w,c
  8151   000E66  0FC3               	addlw	195
  8152   000E68  6E08               	movwf	clcd_putch@addr^0,c
  8153   000E6A  0E2A               	movlw	42
  8154   000E6C  ECDC  F015         	call	_clcd_putch
  8155   000E70                     
  8156                           ;common.c: 448:             if (password) {
  8157   000E70  0100               	movlb	0	; () banked
  8158   000E72  51A7               	movf	_password& (0+255),w,b
  8159   000E74  11A8               	iorwf	(_password+1)& (0+255),w,b
  8160   000E76  B4D8               	btfsc	status,2,c
  8161   000E78  EF40  F007         	goto	u4101
  8162   000E7C  EF42  F007         	goto	u4100
  8163   000E80                     u4101:
  8164   000E80  EF0B  F007         	goto	l4646
  8165   000E84                     u4100:
  8166   000E84                     
  8167                           ; BSR set to: 0
  8168                           ;common.c: 449:                 if (arr[index] == dummy[index]) {
  8169   000E84  5049               	movf	_index@common$F326^0,w,c
  8170   000E86  0D02               	mullw	2
  8171   000E88  50F3               	movf	243,w,c
  8172   000E8A  0F60               	addlw	low _dummy
  8173   000E8C  6ED9               	movwf	fsr2l,c
  8174   000E8E  6ADA               	clrf	fsr2h,c
  8175   000E90  5049               	movf	_index@common$F326^0,w,c
  8176   000E92  0D02               	mullw	2
  8177   000E94  50F3               	movf	243,w,c
  8178   000E96  0F70               	addlw	low _arr@common$F329
  8179   000E98  6EE1               	movwf	fsr1l,c
  8180   000E9A  6AE2               	clrf	fsr1h,c
  8181   000E9C  50DE               	movf	postinc2,w,c
  8182   000E9E  18E6               	xorwf	postinc1,w,c
  8183   000EA0  E107               	bnz	u4111
  8184   000EA2  50DE               	movf	postinc2,w,c
  8185   000EA4  18E6               	xorwf	postinc1,w,c
  8186   000EA6  A4D8               	btfss	status,2,c
  8187   000EA8  EF58  F007         	goto	u4111
  8188   000EAC  EF5A  F007         	goto	u4110
  8189   000EB0                     u4111:
  8190   000EB0  EF1B  F007         	goto	l4648
  8191   000EB4                     u4110:
  8192   000EB4  EF07  F007         	goto	l4644
  8193   000EB8                     l4666:
  8194                           
  8195                           ;common.c: 459:         if (index == 4 && !password) {
  8196   000EB8  0E04               	movlw	4
  8197   000EBA  1849               	xorwf	_index@common$F326^0,w,c
  8198   000EBC  104A               	iorwf	(_index@common$F326+1)^0,w,c
  8199   000EBE  A4D8               	btfss	status,2,c
  8200   000EC0  EF64  F007         	goto	u4121
  8201   000EC4  EF66  F007         	goto	u4120
  8202   000EC8                     u4121:
  8203   000EC8  EF96  F007         	goto	l4684
  8204   000ECC                     u4120:
  8205   000ECC  0100               	movlb	0	; () banked
  8206   000ECE  51A7               	movf	_password& (0+255),w,b
  8207   000ED0  11A8               	iorwf	(_password+1)& (0+255),w,b
  8208   000ED2  A4D8               	btfss	status,2,c
  8209   000ED4  EF6E  F007         	goto	u4131
  8210   000ED8  EF70  F007         	goto	u4130
  8211   000EDC                     u4131:
  8212   000EDC  EF96  F007         	goto	l4684
  8213   000EE0                     u4130:
  8214   000EE0                     
  8215                           ; BSR set to: 0
  8216                           ;common.c: 460:             clcd_write(0x01, 0);
  8217   000EE0  0E00               	movlw	0
  8218   000EE2  6E01               	movwf	clcd_write@control_bit^0,c
  8219   000EE4  0E01               	movlw	1
  8220   000EE6  EC25  F015         	call	_clcd_write
  8221   000EEA                     
  8222                           ;common.c: 461:             clcd_print(" ENTER CNF PSW ", (0x80 + (0)));
  8223   000EEA  0E25               	movlw	low STR_29
  8224   000EEC  6E07               	movwf	clcd_print@data^0,c
  8225   000EEE  0E2F               	movlw	high STR_29
  8226   000EF0  6E08               	movwf	(clcd_print@data+1)^0,c
  8227   000EF2  0E80               	movlw	128
  8228   000EF4  6E09               	movwf	clcd_print@addr^0,c
  8229   000EF6  EC06  F014         	call	_clcd_print	;wreg free
  8230   000EFA                     
  8231                           ;common.c: 462:             clcd_write(0xC4, 0);
  8232   000EFA  0E00               	movlw	0
  8233   000EFC  6E01               	movwf	clcd_write@control_bit^0,c
  8234   000EFE  0EC4               	movlw	196
  8235   000F00  EC25  F015         	call	_clcd_write
  8236   000F04                     
  8237                           ;common.c: 463:             clcd_write(0x0F, 0);
  8238   000F04  0E00               	movlw	0
  8239   000F06  6E01               	movwf	clcd_write@control_bit^0,c
  8240   000F08  0E0F               	movlw	15
  8241   000F0A  EC25  F015         	call	_clcd_write
  8242   000F0E                     
  8243                           ;common.c: 464:             index = 0;
  8244   000F0E  0E00               	movlw	0
  8245   000F10  6E4A               	movwf	(_index@common$F326+1)^0,c
  8246   000F12  0E00               	movlw	0
  8247   000F14  6E49               	movwf	_index@common$F326^0,c
  8248   000F16                     
  8249                           ;common.c: 465:             count = 0;
  8250   000F16  0E00               	movlw	0
  8251   000F18  0100               	movlb	0	; () banked
  8252   000F1A  6FB2               	movwf	(_count@common$F325+1)& (0+255),b
  8253   000F1C  0E00               	movlw	0
  8254   000F1E  6FB1               	movwf	_count@common$F325& (0+255),b
  8255   000F20                     
  8256                           ; BSR set to: 0
  8257                           ;common.c: 466:             password = 1;
  8258   000F20  0E00               	movlw	0
  8259   000F22  6FA8               	movwf	(_password+1)& (0+255),b
  8260   000F24  0E01               	movlw	1
  8261   000F26  6FA7               	movwf	_password& (0+255),b
  8262                           
  8263                           ;common.c: 467:         } else if (index == 4 && index == count) {
  8264   000F28  EF66  F008         	goto	l536
  8265   000F2C                     l4684:
  8266   000F2C  0E04               	movlw	4
  8267   000F2E  1849               	xorwf	_index@common$F326^0,w,c
  8268   000F30  104A               	iorwf	(_index@common$F326+1)^0,w,c
  8269   000F32  A4D8               	btfss	status,2,c
  8270   000F34  EF9E  F007         	goto	u4141
  8271   000F38  EFA0  F007         	goto	u4140
  8272   000F3C                     u4141:
  8273   000F3C  EF1E  F008         	goto	l4730
  8274   000F40                     u4140:
  8275   000F40  0100               	movlb	0	; () banked
  8276   000F42  51B1               	movf	_count@common$F325& (0+255),w,b
  8277   000F44  1849               	xorwf	_index@common$F326^0,w,c
  8278   000F46  E107               	bnz	u4151
  8279   000F48  51B2               	movf	(_count@common$F325+1)& (0+255),w,b
  8280   000F4A  184A               	xorwf	(_index@common$F326+1)^0,w,c
  8281   000F4C  A4D8               	btfss	status,2,c
  8282   000F4E  EFAB  F007         	goto	u4151
  8283   000F52  EFAD  F007         	goto	u4150
  8284   000F56                     u4151:
  8285   000F56  EF1E  F008         	goto	l4730
  8286   000F5A                     u4150:
  8287   000F5A                     
  8288                           ; BSR set to: 0
  8289                           ;common.c: 468:             clcd_write(0x0C, 0);
  8290   000F5A  0E00               	movlw	0
  8291   000F5C  6E01               	movwf	clcd_write@control_bit^0,c
  8292   000F5E  0E0C               	movlw	12
  8293   000F60  EC25  F015         	call	_clcd_write
  8294                           
  8295                           ;common.c: 469:             clcd_write(0x01, 0);
  8296   000F64  0E00               	movlw	0
  8297   000F66  6E01               	movwf	clcd_write@control_bit^0,c
  8298   000F68  0E01               	movlw	1
  8299   000F6A  EC25  F015         	call	_clcd_write
  8300   000F6E                     
  8301                           ;common.c: 470:             clcd_print("PSW CHANGED ", (0x80 + (3)));
  8302   000F6E  0E7F               	movlw	low STR_30
  8303   000F70  6E07               	movwf	clcd_print@data^0,c
  8304   000F72  0E2F               	movlw	high STR_30
  8305   000F74  6E08               	movwf	(clcd_print@data+1)^0,c
  8306   000F76  0E83               	movlw	131
  8307   000F78  6E09               	movwf	clcd_print@addr^0,c
  8308   000F7A  EC06  F014         	call	_clcd_print	;wreg free
  8309   000F7E                     
  8310                           ;common.c: 471:             clcd_print("SUCCESSFULLY ", (0x80 + (3)));
  8311   000F7E  0E63               	movlw	low STR_31
  8312   000F80  6E07               	movwf	clcd_print@data^0,c
  8313   000F82  0E2F               	movlw	high STR_31
  8314   000F84  6E08               	movwf	(clcd_print@data+1)^0,c
  8315   000F86  0E83               	movlw	131
  8316   000F88  6E09               	movwf	clcd_print@addr^0,c
  8317   000F8A  EC06  F014         	call	_clcd_print	;wreg free
  8318   000F8E                     
  8319                           ;common.c: 472:             for (unsigned long y = 0xFFFFA; --y;);
  8320   000F8E  0EFA               	movlw	250
  8321   000F90  6E20               	movwf	change_password@y^0,c
  8322   000F92  0EFF               	movlw	255
  8323   000F94  6E21               	movwf	(change_password@y+1)^0,c
  8324   000F96  0E0F               	movlw	15
  8325   000F98  6E22               	movwf	(change_password@y+2)^0,c
  8326   000F9A  0E00               	movlw	0
  8327   000F9C  6E23               	movwf	(change_password@y+3)^0,c
  8328   000F9E                     l4696:
  8329   000F9E  0620               	decf	change_password@y^0,f,c
  8330   000FA0  0E00               	movlw	0
  8331   000FA2  5A21               	subwfb	(change_password@y+1)^0,f,c
  8332   000FA4  5A22               	subwfb	(change_password@y+2)^0,f,c
  8333   000FA6  5A23               	subwfb	(change_password@y+3)^0,f,c
  8334   000FA8  5020               	movf	change_password@y^0,w,c
  8335   000FAA  1021               	iorwf	(change_password@y+1)^0,w,c
  8336   000FAC  1022               	iorwf	(change_password@y+2)^0,w,c
  8337   000FAE  1023               	iorwf	(change_password@y+3)^0,w,c
  8338   000FB0  A4D8               	btfss	status,2,c
  8339   000FB2  EFDD  F007         	goto	u4161
  8340   000FB6  EFDF  F007         	goto	u4160
  8341   000FBA                     u4161:
  8342   000FBA  EFCF  F007         	goto	l4696
  8343   000FBE                     u4160:
  8344   000FBE                     
  8345                           ;common.c: 473:             clcd_write(0x01, 0);
  8346   000FBE  0E00               	movlw	0
  8347   000FC0  6E01               	movwf	clcd_write@control_bit^0,c
  8348   000FC2  0E01               	movlw	1
  8349   000FC4  EC25  F015         	call	_clcd_write
  8350   000FC8                     
  8351                           ;common.c: 474:             EI = 11;
  8352   000FC8  0E0B               	movlw	11
  8353   000FCA  6E57               	movwf	_EI^0,c
  8354   000FCC                     
  8355                           ;common.c: 475:             EF = 1;
  8356   000FCC  0E01               	movlw	1
  8357   000FCE  0100               	movlb	0	; () banked
  8358   000FD0  6FBE               	movwf	_EF& (0+255),b
  8359   000FD2                     
  8360                           ; BSR set to: 0
  8361                           ;common.c: 476:             option_save = 1;
  8362   000FD2  0E01               	movlw	1
  8363   000FD4  6FBF               	movwf	_option_save& (0+255),b
  8364   000FD6                     
  8365                           ; BSR set to: 0
  8366                           ;common.c: 477:             store_event_in_eeprom();
  8367   000FD6  EC20  F00E         	call	_store_event_in_eeprom	;wreg free
  8368   000FDA                     
  8369                           ;common.c: 478:             index = 0;
  8370   000FDA  0E00               	movlw	0
  8371   000FDC  6E4A               	movwf	(_index@common$F326+1)^0,c
  8372   000FDE  0E00               	movlw	0
  8373   000FE0  6E49               	movwf	_index@common$F326^0,c
  8374   000FE2                     
  8375                           ;common.c: 479:             count = 0;
  8376   000FE2  0E00               	movlw	0
  8377   000FE4  0100               	movlb	0	; () banked
  8378   000FE6  6FB2               	movwf	(_count@common$F325+1)& (0+255),b
  8379   000FE8  0E00               	movlw	0
  8380   000FEA  6FB1               	movwf	_count@common$F325& (0+255),b
  8381   000FEC                     
  8382                           ; BSR set to: 0
  8383                           ;common.c: 480:             once = 1;
  8384   000FEC  0E00               	movlw	0
  8385   000FEE  6FE2               	movwf	(_once@common$F327+1)& (0+255),b
  8386   000FF0  0E01               	movlw	1
  8387   000FF2  6FE1               	movwf	_once@common$F327& (0+255),b
  8388   000FF4                     
  8389                           ; BSR set to: 0
  8390                           ;common.c: 481:             flag = 1;
  8391   000FF4  0E01               	movlw	1
  8392   000FF6  6FEF               	movwf	_flag& (0+255),b
  8393   000FF8                     
  8394                           ; BSR set to: 0
  8395                           ;common.c: 482:             password = 0;
  8396   000FF8  0E00               	movlw	0
  8397   000FFA  6FA8               	movwf	(_password+1)& (0+255),b
  8398   000FFC  0E00               	movlw	0
  8399   000FFE  6FA7               	movwf	_password& (0+255),b
  8400   001000                     
  8401                           ; BSR set to: 0
  8402                           ;common.c: 483:             write_external_eeprom(0x78, arr[0]);
  8403   001000  C070  F007         	movff	_arr@common$F329,write_external_eeprom@data
  8404   001004  0E78               	movlw	120
  8405   001006  EC05  F015         	call	_write_external_eeprom
  8406   00100A                     
  8407                           ;common.c: 484:             write_external_eeprom(0x79, arr[1]);
  8408   00100A  C072  F007         	movff	_arr@common$F329+2,write_external_eeprom@data
  8409   00100E  0E79               	movlw	121
  8410   001010  EC05  F015         	call	_write_external_eeprom
  8411   001014                     
  8412                           ;common.c: 485:             write_external_eeprom(0x7A, arr[2]);
  8413   001014  C074  F007         	movff	_arr@common$F329+4,write_external_eeprom@data
  8414   001018  0E7A               	movlw	122
  8415   00101A  EC05  F015         	call	_write_external_eeprom
  8416   00101E                     
  8417                           ;common.c: 486:             write_external_eeprom(0x7B, arr[3]);
  8418   00101E  C076  F007         	movff	_arr@common$F329+6,write_external_eeprom@data
  8419   001022  0E7B               	movlw	123
  8420   001024  EC05  F015         	call	_write_external_eeprom
  8421   001028                     
  8422                           ;common.c: 487:             SCREEN_FLAG = 0;
  8423   001028  0E00               	movlw	0
  8424   00102A  6E52               	movwf	(_SCREEN_FLAG+1)^0,c
  8425   00102C  0E00               	movlw	0
  8426   00102E  6E51               	movwf	_SCREEN_FLAG^0,c
  8427   001030                     
  8428                           ;common.c: 488:             MENU_FLAG = 0;
  8429   001030  0E00               	movlw	0
  8430   001032  6E50               	movwf	(_MENU_FLAG+1)^0,c
  8431   001034  0E00               	movlw	0
  8432   001036  6E4F               	movwf	_MENU_FLAG^0,c
  8433                           
  8434                           ;common.c: 489:         } else {
  8435   001038  EF66  F008         	goto	l536
  8436   00103C                     l4730:
  8437                           
  8438                           ;common.c: 490:             clcd_write(0x0C, 0);
  8439   00103C  0E00               	movlw	0
  8440   00103E  6E01               	movwf	clcd_write@control_bit^0,c
  8441   001040  0E0C               	movlw	12
  8442   001042  EC25  F015         	call	_clcd_write
  8443                           
  8444                           ;common.c: 491:             clcd_write(0x01, 0);
  8445   001046  0E00               	movlw	0
  8446   001048  6E01               	movwf	clcd_write@control_bit^0,c
  8447   00104A  0E01               	movlw	1
  8448   00104C  EC25  F015         	call	_clcd_write
  8449   001050                     
  8450                           ;common.c: 492:             clcd_print("PSW DOES NOT", (0x80 + (3)));
  8451   001050  0E99               	movlw	low STR_32
  8452   001052  6E07               	movwf	clcd_print@data^0,c
  8453   001054  0E2F               	movlw	high STR_32
  8454   001056  6E08               	movwf	(clcd_print@data+1)^0,c
  8455   001058  0E83               	movlw	131
  8456   00105A  6E09               	movwf	clcd_print@addr^0,c
  8457   00105C  EC06  F014         	call	_clcd_print	;wreg free
  8458   001060                     
  8459                           ;common.c: 493:             clcd_print("MATCH", (0xC0 + (5)));
  8460   001060  0EF1               	movlw	low STR_33
  8461   001062  6E07               	movwf	clcd_print@data^0,c
  8462   001064  0E2F               	movlw	high STR_33
  8463   001066  6E08               	movwf	(clcd_print@data+1)^0,c
  8464   001068  0EC5               	movlw	197
  8465   00106A  6E09               	movwf	clcd_print@addr^0,c
  8466   00106C  EC06  F014         	call	_clcd_print	;wreg free
  8467   001070                     
  8468                           ;common.c: 494:             for (unsigned long y = 0xFFFFA; --y;);
  8469   001070  0EFA               	movlw	250
  8470   001072  6E24               	movwf	change_password@y_412^0,c
  8471   001074  0EFF               	movlw	255
  8472   001076  6E25               	movwf	(change_password@y_412+1)^0,c
  8473   001078  0E0F               	movlw	15
  8474   00107A  6E26               	movwf	(change_password@y_412+2)^0,c
  8475   00107C  0E00               	movlw	0
  8476   00107E  6E27               	movwf	(change_password@y_412+3)^0,c
  8477   001080                     l4738:
  8478   001080  0624               	decf	change_password@y_412^0,f,c
  8479   001082  0E00               	movlw	0
  8480   001084  5A25               	subwfb	(change_password@y_412+1)^0,f,c
  8481   001086  5A26               	subwfb	(change_password@y_412+2)^0,f,c
  8482   001088  5A27               	subwfb	(change_password@y_412+3)^0,f,c
  8483   00108A  5024               	movf	change_password@y_412^0,w,c
  8484   00108C  1025               	iorwf	(change_password@y_412+1)^0,w,c
  8485   00108E  1026               	iorwf	(change_password@y_412+2)^0,w,c
  8486   001090  1027               	iorwf	(change_password@y_412+3)^0,w,c
  8487   001092  A4D8               	btfss	status,2,c
  8488   001094  EF4E  F008         	goto	u4171
  8489   001098  EF50  F008         	goto	u4170
  8490   00109C                     u4171:
  8491   00109C  EF40  F008         	goto	l4738
  8492   0010A0                     u4170:
  8493   0010A0                     
  8494                           ;common.c: 495:             clcd_write(0x01, 0);
  8495   0010A0  0E00               	movlw	0
  8496   0010A2  6E01               	movwf	clcd_write@control_bit^0,c
  8497   0010A4  0E01               	movlw	1
  8498   0010A6  EC25  F015         	call	_clcd_write
  8499   0010AA                     
  8500                           ;common.c: 496:             index = 0;
  8501   0010AA  0E00               	movlw	0
  8502   0010AC  6E4A               	movwf	(_index@common$F326+1)^0,c
  8503   0010AE  0E00               	movlw	0
  8504   0010B0  6E49               	movwf	_index@common$F326^0,c
  8505   0010B2                     
  8506                           ;common.c: 497:             count = 0;
  8507   0010B2  0E00               	movlw	0
  8508   0010B4  0100               	movlb	0	; () banked
  8509   0010B6  6FB2               	movwf	(_count@common$F325+1)& (0+255),b
  8510   0010B8  0E00               	movlw	0
  8511   0010BA  6FB1               	movwf	_count@common$F325& (0+255),b
  8512   0010BC                     
  8513                           ; BSR set to: 0
  8514                           ;common.c: 498:             once = 1;
  8515   0010BC  0E00               	movlw	0
  8516   0010BE  6FE2               	movwf	(_once@common$F327+1)& (0+255),b
  8517   0010C0  0E01               	movlw	1
  8518   0010C2  6FE1               	movwf	_once@common$F327& (0+255),b
  8519   0010C4                     
  8520                           ; BSR set to: 0
  8521                           ;common.c: 499:             password = 0;
  8522   0010C4  0E00               	movlw	0
  8523   0010C6  6FA8               	movwf	(_password+1)& (0+255),b
  8524   0010C8  0E00               	movlw	0
  8525   0010CA  6FA7               	movwf	_password& (0+255),b
  8526   0010CC                     l536:
  8527   0010CC  0012               	return		;funcret
  8528   0010CE                     __end_of_change_password:
  8529                           	callstack 0
  8530                           
  8531 ;; *************** function _store_event_in_eeprom *****************
  8532 ;; Defined at:
  8533 ;;		line 579 in file "common.c"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;		None
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;  i               2   25[COMRAM] unsigned short 
  8538 ;;  i               2   23[COMRAM] unsigned short 
  8539 ;;  i               2   21[COMRAM] unsigned short 
  8540 ;;  i               2   19[COMRAM] unsigned short 
  8541 ;;  i               2   17[COMRAM] unsigned short 
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1    wreg      void 
  8544 ;; Registers used:
  8545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8551 ;;      Params:         0       0       0       0       0       0       0
  8552 ;;      Locals:        10       0       0       0       0       0       0
  8553 ;;      Temps:          2       0       0       0       0       0       0
  8554 ;;      Totals:        12       0       0       0       0       0       0
  8555 ;;Total ram usage:       12 bytes
  8556 ;; Hardware stack levels used: 1
  8557 ;; Hardware stack levels required when called: 6
  8558 ;; This function calls:
  8559 ;;		___wmul
  8560 ;;		_over_write
  8561 ;;		_write_external_eeprom
  8562 ;; This function is called by:
  8563 ;;		_init_config
  8564 ;;		_display_dashboard
  8565 ;;		_clear_log
  8566 ;;		_set_time
  8567 ;;		_change_password
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           	psect	text32
  8572   001C40                     __ptext32:
  8573                           	callstack 0
  8574   001C40                     _store_event_in_eeprom:
  8575                           	callstack 23
  8576   001C40                     
  8577                           ;common.c: 581:     if (++no_of_event > 9) {
  8578   001C40  4A5A               	infsnz	_no_of_event^0,f,c
  8579   001C42  2A5B               	incf	(_no_of_event+1)^0,f,c
  8580   001C44  505B               	movf	(_no_of_event+1)^0,w,c
  8581   001C46  E109               	bnz	u2490
  8582   001C48  0E0A               	movlw	10
  8583   001C4A  5C5A               	subwf	_no_of_event^0,w,c
  8584   001C4C  A0D8               	btfss	status,0,c
  8585   001C4E  EF2B  F00E         	goto	u2491
  8586   001C52  EF2D  F00E         	goto	u2490
  8587   001C56                     u2491:
  8588   001C56  EF55  F00E         	goto	l3524
  8589   001C5A                     u2490:
  8590   001C5A                     
  8591                           ;common.c: 584:         for (unsigned short int i = 0x0B; i < 0x62; i += 0x0B) {
  8592   001C5A  0E00               	movlw	0
  8593   001C5C  6E13               	movwf	(store_event_in_eeprom@i+1)^0,c
  8594   001C5E  0E0B               	movlw	11
  8595   001C60  6E12               	movwf	store_event_in_eeprom@i^0,c
  8596   001C62                     l3514:
  8597                           
  8598                           ;common.c: 586:             over_write(i);
  8599   001C62  C012  F00B         	movff	store_event_in_eeprom@i,over_write@i
  8600   001C66  C013  F00C         	movff	store_event_in_eeprom@i+1,over_write@i+1
  8601   001C6A  ECE4  F014         	call	_over_write	;wreg free
  8602   001C6E                     
  8603                           ;common.c: 587:         }
  8604   001C6E  0E0B               	movlw	11
  8605   001C70  2612               	addwf	store_event_in_eeprom@i^0,f,c
  8606   001C72  0E00               	movlw	0
  8607   001C74  2213               	addwfc	(store_event_in_eeprom@i+1)^0,f,c
  8608   001C76  5013               	movf	(store_event_in_eeprom@i+1)^0,w,c
  8609   001C78  E109               	bnz	u2500
  8610   001C7A  0E62               	movlw	98
  8611   001C7C  5C12               	subwf	store_event_in_eeprom@i^0,w,c
  8612   001C7E  A0D8               	btfss	status,0,c
  8613   001C80  EF44  F00E         	goto	u2501
  8614   001C84  EF46  F00E         	goto	u2500
  8615   001C88                     u2501:
  8616   001C88  EF31  F00E         	goto	l3514
  8617   001C8C                     u2500:
  8618   001C8C                     
  8619                           ;common.c: 589:         store_add = 0x58;
  8620   001C8C  0E00               	movlw	0
  8621   001C8E  6E46               	movwf	(_store_add+1)^0,c
  8622   001C90  0E58               	movlw	88
  8623   001C92  6E45               	movwf	_store_add^0,c
  8624                           
  8625                           ;common.c: 590:         add = 0x00;
  8626   001C94  0E00               	movlw	0
  8627   001C96  0100               	movlb	0	; () banked
  8628   001C98  6FA6               	movwf	(_add+1)& (0+255),b
  8629   001C9A  0E00               	movlw	0
  8630   001C9C  6FA5               	movwf	_add& (0+255),b
  8631   001C9E                     
  8632                           ; BSR set to: 0
  8633                           ;common.c: 591:         no_of_event = no_of_event - 1;
  8634   001C9E  0EFF               	movlw	255
  8635   001CA0  245A               	addwf	_no_of_event^0,w,c
  8636   001CA2  6E5A               	movwf	_no_of_event^0,c
  8637   001CA4  0EFF               	movlw	255
  8638   001CA6  205B               	addwfc	(_no_of_event+1)^0,w,c
  8639   001CA8  6E5B               	movwf	(_no_of_event+1)^0,c
  8640   001CAA                     l3524:
  8641                           
  8642                           ;common.c: 593:     if (option_save == 0) {
  8643   001CAA  0100               	movlb	0	; () banked
  8644   001CAC  51BF               	movf	_option_save& (0+255),w,b
  8645   001CAE  A4D8               	btfss	status,2,c
  8646   001CB0  EF5C  F00E         	goto	u2511
  8647   001CB4  EF5E  F00E         	goto	u2510
  8648   001CB8                     u2511:
  8649   001CB8  EFB1  F00E         	goto	l3558
  8650   001CBC                     u2510:
  8651   001CBC                     
  8652                           ; BSR set to: 0
  8653                           ;common.c: 595:         for (unsigned short int i = 0; i < 8; i++) {
  8654   001CBC  0E00               	movlw	0
  8655   001CBE  6E15               	movwf	(store_event_in_eeprom@i_428+1)^0,c
  8656   001CC0  0E00               	movlw	0
  8657   001CC2  6E14               	movwf	store_event_in_eeprom@i_428^0,c
  8658   001CC4                     l3532:
  8659                           
  8660                           ;common.c: 596:             write_external_eeprom(store_add, time[i]);
  8661   001CC4  5014               	movf	store_event_in_eeprom@i_428^0,w,c
  8662   001CC6  0FCC               	addlw	low _time
  8663   001CC8  6ED9               	movwf	fsr2l,c
  8664   001CCA  6ADA               	clrf	fsr2h,c
  8665   001CCC  50DF               	movf	indf2,w,c
  8666   001CCE  6E07               	movwf	write_external_eeprom@data^0,c
  8667   001CD0  5045               	movf	_store_add^0,w,c
  8668   001CD2  EC05  F015         	call	_write_external_eeprom
  8669   001CD6                     
  8670                           ;common.c: 597:             ++store_add;
  8671   001CD6  4A45               	infsnz	_store_add^0,f,c
  8672   001CD8  2A46               	incf	(_store_add+1)^0,f,c
  8673   001CDA                     
  8674                           ;common.c: 598:         }
  8675   001CDA  4A14               	infsnz	store_event_in_eeprom@i_428^0,f,c
  8676   001CDC  2A15               	incf	(store_event_in_eeprom@i_428+1)^0,f,c
  8677   001CDE  5015               	movf	(store_event_in_eeprom@i_428+1)^0,w,c
  8678   001CE0  E109               	bnz	u2520
  8679   001CE2  0E08               	movlw	8
  8680   001CE4  5C14               	subwf	store_event_in_eeprom@i_428^0,w,c
  8681   001CE6  A0D8               	btfss	status,0,c
  8682   001CE8  EF78  F00E         	goto	u2521
  8683   001CEC  EF7A  F00E         	goto	u2520
  8684   001CF0                     u2521:
  8685   001CF0  EF62  F00E         	goto	l3532
  8686   001CF4                     u2520:
  8687   001CF4                     
  8688                           ;common.c: 601:         for (unsigned short int i = 0; i < 2; i++) {
  8689   001CF4  0E00               	movlw	0
  8690   001CF6  6E17               	movwf	(store_event_in_eeprom@i_429+1)^0,c
  8691   001CF8  0E00               	movlw	0
  8692   001CFA  6E16               	movwf	store_event_in_eeprom@i_429^0,c
  8693   001CFC                     l3546:
  8694                           
  8695                           ;common.c: 602:             write_external_eeprom(store_add, gear[g_index][i]);
  8696   001CFC  C04B  F001         	movff	_g_index,___wmul@multiplier
  8697   001D00  C04C  F002         	movff	_g_index+1,___wmul@multiplier+1
  8698   001D04  0E00               	movlw	0
  8699   001D06  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8700   001D08  0E03               	movlw	3
  8701   001D0A  6E03               	movwf	___wmul@multiplicand^0,c
  8702   001D0C  EC87  F015         	call	___wmul	;wreg free
  8703   001D10  0E64               	movlw	low _gear
  8704   001D12  2401               	addwf	?___wmul^0,w,c
  8705   001D14  6E10               	movwf	??_store_event_in_eeprom^0,c
  8706   001D16  0E01               	movlw	high _gear
  8707   001D18  2002               	addwfc	(?___wmul+1)^0,w,c
  8708   001D1A  6E11               	movwf	(??_store_event_in_eeprom+1)^0,c
  8709   001D1C  5016               	movf	store_event_in_eeprom@i_429^0,w,c
  8710   001D1E  2410               	addwf	??_store_event_in_eeprom^0,w,c
  8711   001D20  6ED9               	movwf	fsr2l,c
  8712   001D22  5017               	movf	(store_event_in_eeprom@i_429+1)^0,w,c
  8713   001D24  2011               	addwfc	(??_store_event_in_eeprom+1)^0,w,c
  8714   001D26  6EDA               	movwf	fsr2h,c
  8715   001D28  50DF               	movf	indf2,w,c
  8716   001D2A  6E07               	movwf	write_external_eeprom@data^0,c
  8717   001D2C  5045               	movf	_store_add^0,w,c
  8718   001D2E  EC05  F015         	call	_write_external_eeprom
  8719   001D32                     
  8720                           ;common.c: 603:             ++store_add;
  8721   001D32  4A45               	infsnz	_store_add^0,f,c
  8722   001D34  2A46               	incf	(_store_add+1)^0,f,c
  8723   001D36                     
  8724                           ;common.c: 604:         }
  8725   001D36  4A16               	infsnz	store_event_in_eeprom@i_429^0,f,c
  8726   001D38  2A17               	incf	(store_event_in_eeprom@i_429+1)^0,f,c
  8727   001D3A  5017               	movf	(store_event_in_eeprom@i_429+1)^0,w,c
  8728   001D3C  E109               	bnz	u2530
  8729   001D3E  0E02               	movlw	2
  8730   001D40  5C16               	subwf	store_event_in_eeprom@i_429^0,w,c
  8731   001D42  A0D8               	btfss	status,0,c
  8732   001D44  EFA6  F00E         	goto	u2531
  8733   001D48  EFA8  F00E         	goto	u2530
  8734   001D4C                     u2531:
  8735   001D4C  EF7E  F00E         	goto	l3546
  8736   001D50                     u2530:
  8737   001D50                     
  8738                           ;common.c: 607:         write_external_eeprom(store_add, speed);
  8739   001D50  C04D  F007         	movff	_speed,write_external_eeprom@data
  8740   001D54  5045               	movf	_store_add^0,w,c
  8741   001D56  EC05  F015         	call	_write_external_eeprom
  8742   001D5A                     l3556:
  8743                           
  8744                           ;common.c: 608:         ++store_add;
  8745   001D5A  4A45               	infsnz	_store_add^0,f,c
  8746   001D5C  2A46               	incf	(_store_add+1)^0,f,c
  8747                           
  8748                           ;common.c: 609:     } else {
  8749   001D5E  EFFE  F00E         	goto	l594
  8750   001D62                     l3558:
  8751                           
  8752                           ; BSR set to: 0
  8753                           ;common.c: 610:         option_save = 0;
  8754   001D62  0E00               	movlw	0
  8755   001D64  6FBF               	movwf	_option_save& (0+255),b
  8756                           
  8757                           ;common.c: 612:         for (unsigned short int i = 0; i < 8; i++) {
  8758   001D66  0E00               	movlw	0
  8759   001D68  6E19               	movwf	(store_event_in_eeprom@i_430+1)^0,c
  8760   001D6A  0E00               	movlw	0
  8761   001D6C  6E18               	movwf	store_event_in_eeprom@i_430^0,c
  8762   001D6E                     l3564:
  8763                           
  8764                           ;common.c: 613:             write_external_eeprom(store_add, time[i]);
  8765   001D6E  5018               	movf	store_event_in_eeprom@i_430^0,w,c
  8766   001D70  0FCC               	addlw	low _time
  8767   001D72  6ED9               	movwf	fsr2l,c
  8768   001D74  6ADA               	clrf	fsr2h,c
  8769   001D76  50DF               	movf	indf2,w,c
  8770   001D78  6E07               	movwf	write_external_eeprom@data^0,c
  8771   001D7A  5045               	movf	_store_add^0,w,c
  8772   001D7C  EC05  F015         	call	_write_external_eeprom
  8773   001D80                     
  8774                           ;common.c: 614:             ++store_add;
  8775   001D80  4A45               	infsnz	_store_add^0,f,c
  8776   001D82  2A46               	incf	(_store_add+1)^0,f,c
  8777   001D84                     
  8778                           ;common.c: 615:         }
  8779   001D84  4A18               	infsnz	store_event_in_eeprom@i_430^0,f,c
  8780   001D86  2A19               	incf	(store_event_in_eeprom@i_430+1)^0,f,c
  8781   001D88  5019               	movf	(store_event_in_eeprom@i_430+1)^0,w,c
  8782   001D8A  E109               	bnz	u2540
  8783   001D8C  0E08               	movlw	8
  8784   001D8E  5C18               	subwf	store_event_in_eeprom@i_430^0,w,c
  8785   001D90  A0D8               	btfss	status,0,c
  8786   001D92  EFCD  F00E         	goto	u2541
  8787   001D96  EFCF  F00E         	goto	u2540
  8788   001D9A                     u2541:
  8789   001D9A  EFB7  F00E         	goto	l3564
  8790   001D9E                     u2540:
  8791   001D9E                     
  8792                           ;common.c: 618:         for (unsigned short int i = 0; i < 2; i++) {
  8793   001D9E  0E00               	movlw	0
  8794   001DA0  6E1B               	movwf	(store_event_in_eeprom@i_431+1)^0,c
  8795   001DA2  0E00               	movlw	0
  8796   001DA4  6E1A               	movwf	store_event_in_eeprom@i_431^0,c
  8797   001DA6                     l3578:
  8798                           
  8799                           ;common.c: 619:             write_external_eeprom(store_add, gear[EI][i]);
  8800   001DA6  5057               	movf	_EI^0,w,c
  8801   001DA8  0D03               	mullw	3
  8802   001DAA  0E64               	movlw	low _gear
  8803   001DAC  24F3               	addwf	243,w,c
  8804   001DAE  6E10               	movwf	??_store_event_in_eeprom^0,c
  8805   001DB0  0E01               	movlw	high _gear
  8806   001DB2  20F4               	addwfc	prodh,w,c
  8807   001DB4  6E11               	movwf	(??_store_event_in_eeprom+1)^0,c
  8808   001DB6  501A               	movf	store_event_in_eeprom@i_431^0,w,c
  8809   001DB8  2410               	addwf	??_store_event_in_eeprom^0,w,c
  8810   001DBA  6ED9               	movwf	fsr2l,c
  8811   001DBC  501B               	movf	(store_event_in_eeprom@i_431+1)^0,w,c
  8812   001DBE  2011               	addwfc	(??_store_event_in_eeprom+1)^0,w,c
  8813   001DC0  6EDA               	movwf	fsr2h,c
  8814   001DC2  50DF               	movf	indf2,w,c
  8815   001DC4  6E07               	movwf	write_external_eeprom@data^0,c
  8816   001DC6  5045               	movf	_store_add^0,w,c
  8817   001DC8  EC05  F015         	call	_write_external_eeprom
  8818   001DCC                     
  8819                           ;common.c: 620:             ++store_add;
  8820   001DCC  4A45               	infsnz	_store_add^0,f,c
  8821   001DCE  2A46               	incf	(_store_add+1)^0,f,c
  8822   001DD0                     
  8823                           ;common.c: 621:         }
  8824   001DD0  4A1A               	infsnz	store_event_in_eeprom@i_431^0,f,c
  8825   001DD2  2A1B               	incf	(store_event_in_eeprom@i_431+1)^0,f,c
  8826   001DD4  501B               	movf	(store_event_in_eeprom@i_431+1)^0,w,c
  8827   001DD6  E109               	bnz	u2550
  8828   001DD8  0E02               	movlw	2
  8829   001DDA  5C1A               	subwf	store_event_in_eeprom@i_431^0,w,c
  8830   001DDC  A0D8               	btfss	status,0,c
  8831   001DDE  EFF3  F00E         	goto	u2551
  8832   001DE2  EFF5  F00E         	goto	u2550
  8833   001DE6                     u2551:
  8834   001DE6  EFD3  F00E         	goto	l3578
  8835   001DEA                     u2550:
  8836   001DEA                     
  8837                           ;common.c: 622:         EI = 0;
  8838   001DEA  0E00               	movlw	0
  8839   001DEC  6E57               	movwf	_EI^0,c
  8840   001DEE                     
  8841                           ;common.c: 624:         write_external_eeprom(store_add, 0);
  8842   001DEE  0E00               	movlw	0
  8843   001DF0  6E07               	movwf	write_external_eeprom@data^0,c
  8844   001DF2  5045               	movf	_store_add^0,w,c
  8845   001DF4  EC05  F015         	call	_write_external_eeprom
  8846   001DF8  EFAD  F00E         	goto	l3556
  8847   001DFC                     l594:
  8848   001DFC  0012               	return		;funcret
  8849   001DFE                     __end_of_store_event_in_eeprom:
  8850                           	callstack 0
  8851                           
  8852 ;; *************** function _over_write *****************
  8853 ;; Defined at:
  8854 ;;		line 567 in file "common.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;  i               2   10[COMRAM] unsigned int 
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;  j               2   13[COMRAM] unsigned short 
  8859 ;;  ch              1   12[COMRAM] unsigned char 
  8860 ;; Return value:  Size  Location     Type
  8861 ;;                  1    wreg      void 
  8862 ;; Registers used:
  8863 ;;		wreg, status,2, status,0, cstack
  8864 ;; Tracked objects:
  8865 ;;		On entry : 0/0
  8866 ;;		On exit  : 0/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8869 ;;      Params:         2       0       0       0       0       0       0
  8870 ;;      Locals:         3       0       0       0       0       0       0
  8871 ;;      Temps:          0       0       0       0       0       0       0
  8872 ;;      Totals:         5       0       0       0       0       0       0
  8873 ;;Total ram usage:        5 bytes
  8874 ;; Hardware stack levels used: 1
  8875 ;; Hardware stack levels required when called: 5
  8876 ;; This function calls:
  8877 ;;		_read_external_eeprom
  8878 ;;		_write_external_eeprom
  8879 ;; This function is called by:
  8880 ;;		_store_event_in_eeprom
  8881 ;; This function uses a non-reentrant model
  8882 ;;
  8883                           
  8884                           	psect	text33
  8885   0029C8                     __ptext33:
  8886                           	callstack 0
  8887   0029C8                     _over_write:
  8888                           	callstack 23
  8889   0029C8                     
  8890                           ;common.c: 568:     unsigned char ch;;common.c: 570:     for (unsigned short int j = 0; 
      +                          j < 11; j++) {
  8891   0029C8  0E00               	movlw	0
  8892   0029CA  6E0F               	movwf	(over_write@j+1)^0,c
  8893   0029CC  0E00               	movlw	0
  8894   0029CE  6E0E               	movwf	over_write@j^0,c
  8895   0029D0                     l3430:
  8896                           
  8897                           ;common.c: 571:         ch = read_external_eeprom(i);
  8898   0029D0  500B               	movf	over_write@i^0,w,c
  8899   0029D2  EC72  F015         	call	_read_external_eeprom
  8900   0029D6  6E0D               	movwf	over_write@ch^0,c
  8901   0029D8                     
  8902                           ;common.c: 572:         write_external_eeprom(add, ch);
  8903   0029D8  C00D  F007         	movff	over_write@ch,write_external_eeprom@data
  8904   0029DC  0100               	movlb	0	; () banked
  8905   0029DE  51A5               	movf	_add& (0+255),w,b
  8906   0029E0  EC05  F015         	call	_write_external_eeprom
  8907   0029E4                     
  8908                           ;common.c: 573:         add++;
  8909   0029E4  0100               	movlb	0	; () banked
  8910   0029E6  4BA5               	infsnz	_add& (0+255),f,b
  8911   0029E8  2BA6               	incf	(_add+1)& (0+255),f,b
  8912   0029EA                     
  8913                           ; BSR set to: 0
  8914                           ;common.c: 574:         i++;
  8915   0029EA  4A0B               	infsnz	over_write@i^0,f,c
  8916   0029EC  2A0C               	incf	(over_write@i+1)^0,f,c
  8917   0029EE                     
  8918                           ; BSR set to: 0
  8919                           ;common.c: 575:     }
  8920   0029EE  4A0E               	infsnz	over_write@j^0,f,c
  8921   0029F0  2A0F               	incf	(over_write@j+1)^0,f,c
  8922   0029F2                     
  8923                           ; BSR set to: 0
  8924   0029F2  500F               	movf	(over_write@j+1)^0,w,c
  8925   0029F4  E109               	bnz	u2480
  8926   0029F6  0E0B               	movlw	11
  8927   0029F8  5C0E               	subwf	over_write@j^0,w,c
  8928   0029FA  A0D8               	btfss	status,0,c
  8929   0029FC  EF02  F015         	goto	u2481
  8930   002A00  EF04  F015         	goto	u2480
  8931   002A04                     u2481:
  8932   002A04  EFE8  F014         	goto	l3430
  8933   002A08                     u2480:
  8934   002A08                     
  8935                           ; BSR set to: 0
  8936   002A08  0012               	return		;funcret
  8937   002A0A                     __end_of_over_write:
  8938                           	callstack 0
  8939                           
  8940 ;; *************** function _write_external_eeprom *****************
  8941 ;; Defined at:
  8942 ;;		line 99 in file "ds1307.c"
  8943 ;; Parameters:    Size  Location     Type
  8944 ;;  address         1    wreg     unsigned char 
  8945 ;;  data            1    6[COMRAM] unsigned char 
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;  address         1    9[COMRAM] unsigned char 
  8948 ;;  i               2    7[COMRAM] unsigned int 
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  1    wreg      void 
  8951 ;; Registers used:
  8952 ;;		wreg, status,2, status,0, cstack
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8958 ;;      Params:         1       0       0       0       0       0       0
  8959 ;;      Locals:         3       0       0       0       0       0       0
  8960 ;;      Temps:          0       0       0       0       0       0       0
  8961 ;;      Totals:         4       0       0       0       0       0       0
  8962 ;;Total ram usage:        4 bytes
  8963 ;; Hardware stack levels used: 1
  8964 ;; Hardware stack levels required when called: 3
  8965 ;; This function calls:
  8966 ;;		_i2c_start
  8967 ;;		_i2c_stop
  8968 ;;		_i2c_write
  8969 ;; This function is called by:
  8970 ;;		_change_password
  8971 ;;		_over_write
  8972 ;;		_store_event_in_eeprom
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           	psect	text34
  8977   002A0A                     __ptext34:
  8978                           	callstack 0
  8979   002A0A                     _write_external_eeprom:
  8980                           	callstack 25
  8981                           
  8982                           ; BSR set to: 0
  8983                           ;incstack = 0
  8984                           ;write_external_eeprom@address stored from wreg
  8985   002A0A  6E0A               	movwf	write_external_eeprom@address^0,c
  8986   002A0C                     
  8987                           ;ds1307.c: 99: void write_external_eeprom(unsigned char address, unsigned char data);ds1
      +                          307.c: 100: {;ds1307.c: 101:  i2c_start();
  8988   002A0C  EC34  F016         	call	_i2c_start	;wreg free
  8989   002A10                     
  8990                           ;ds1307.c: 102:  i2c_write(0xA0);
  8991   002A10  0EA0               	movlw	160
  8992   002A12  EC24  F016         	call	_i2c_write
  8993   002A16                     
  8994                           ;ds1307.c: 103:  i2c_write(address);
  8995   002A16  500A               	movf	write_external_eeprom@address^0,w,c
  8996   002A18  EC24  F016         	call	_i2c_write
  8997   002A1C                     
  8998                           ;ds1307.c: 104:  i2c_write(data);
  8999   002A1C  5007               	movf	write_external_eeprom@data^0,w,c
  9000   002A1E  EC24  F016         	call	_i2c_write
  9001   002A22                     
  9002                           ;ds1307.c: 105:  i2c_stop();
  9003   002A22  EC30  F016         	call	_i2c_stop	;wreg free
  9004   002A26                     
  9005                           ;ds1307.c: 106:  for(unsigned int i = 3000;i--;);
  9006   002A26  0E0B               	movlw	11
  9007   002A28  6E09               	movwf	(write_external_eeprom@i+1)^0,c
  9008   002A2A  0EB8               	movlw	184
  9009   002A2C  6E08               	movwf	write_external_eeprom@i^0,c
  9010   002A2E                     l3314:
  9011   002A2E  0608               	decf	write_external_eeprom@i^0,f,c
  9012   002A30  A0D8               	btfss	status,0,c
  9013   002A32  0609               	decf	(write_external_eeprom@i+1)^0,f,c
  9014   002A34  2808               	incf	write_external_eeprom@i^0,w,c
  9015   002A36  E106               	bnz	u2311
  9016   002A38  2809               	incf	(write_external_eeprom@i+1)^0,w,c
  9017   002A3A  A4D8               	btfss	status,2,c
  9018   002A3C  EF22  F015         	goto	u2311
  9019   002A40  EF24  F015         	goto	u2310
  9020   002A44                     u2311:
  9021   002A44  EF17  F015         	goto	l3314
  9022   002A48                     u2310:
  9023   002A48  0012               	return		;funcret
  9024   002A4A                     __end_of_write_external_eeprom:
  9025                           	callstack 0
  9026                           
  9027 ;; *************** function _read_external_eeprom *****************
  9028 ;; Defined at:
  9029 ;;		line 109 in file "ds1307.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  address         1    wreg     unsigned char 
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;  address         1    1[COMRAM] unsigned char 
  9034 ;;  data            1    2[COMRAM] unsigned char 
  9035 ;; Return value:  Size  Location     Type
  9036 ;;                  1    wreg      unsigned char 
  9037 ;; Registers used:
  9038 ;;		wreg, status,2, cstack
  9039 ;; Tracked objects:
  9040 ;;		On entry : 0/0
  9041 ;;		On exit  : 0/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9044 ;;      Params:         0       0       0       0       0       0       0
  9045 ;;      Locals:         2       0       0       0       0       0       0
  9046 ;;      Temps:          0       0       0       0       0       0       0
  9047 ;;      Totals:         2       0       0       0       0       0       0
  9048 ;;Total ram usage:        2 bytes
  9049 ;; Hardware stack levels used: 1
  9050 ;; Hardware stack levels required when called: 4
  9051 ;; This function calls:
  9052 ;;		_i2c_read
  9053 ;;		_i2c_rep_start
  9054 ;;		_i2c_start
  9055 ;;		_i2c_stop
  9056 ;;		_i2c_write
  9057 ;; This function is called by:
  9058 ;;		_password_screen
  9059 ;;		_view_log
  9060 ;;		_download_log
  9061 ;;		_over_write
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065                           	psect	text35
  9066   002AE4                     __ptext35:
  9067                           	callstack 0
  9068   002AE4                     _read_external_eeprom:
  9069                           	callstack 25
  9070                           
  9071                           ;incstack = 0
  9072                           ;read_external_eeprom@address stored from wreg
  9073   002AE4  6E02               	movwf	read_external_eeprom@address^0,c
  9074   002AE6                     
  9075                           ;ds1307.c: 109: unsigned char read_external_eeprom(unsigned char address);ds1307.c: 110:
      +                           {;ds1307.c: 111:  unsigned char data;;ds1307.c: 113:  i2c_start();
  9076   002AE6  EC34  F016         	call	_i2c_start	;wreg free
  9077   002AEA                     
  9078                           ;ds1307.c: 114:  i2c_write(0xA0);
  9079   002AEA  0EA0               	movlw	160
  9080   002AEC  EC24  F016         	call	_i2c_write
  9081   002AF0                     
  9082                           ;ds1307.c: 115:  i2c_write(address);
  9083   002AF0  5002               	movf	read_external_eeprom@address^0,w,c
  9084   002AF2  EC24  F016         	call	_i2c_write
  9085   002AF6                     
  9086                           ;ds1307.c: 116:  i2c_rep_start();
  9087   002AF6  EC38  F016         	call	_i2c_rep_start	;wreg free
  9088   002AFA                     
  9089                           ;ds1307.c: 117:  i2c_write(0xA1);
  9090   002AFA  0EA1               	movlw	161
  9091   002AFC  EC24  F016         	call	_i2c_write
  9092                           
  9093                           ;ds1307.c: 118:  data = i2c_read();
  9094   002B00  EC2A  F016         	call	_i2c_read	;wreg free
  9095   002B04  6E03               	movwf	read_external_eeprom@data^0,c
  9096   002B06                     
  9097                           ;ds1307.c: 119:  i2c_stop();
  9098   002B06  EC30  F016         	call	_i2c_stop	;wreg free
  9099                           
  9100                           ;ds1307.c: 121:  return data;
  9101   002B0A  5003               	movf	read_external_eeprom@data^0,w,c
  9102   002B0C  0012               	return		;funcret
  9103   002B0E                     __end_of_read_external_eeprom:
  9104                           	callstack 0
  9105                           
  9106 ;; *************** function _i2c_write *****************
  9107 ;; Defined at:
  9108 ;;		line 55 in file "i2c.c"
  9109 ;; Parameters:    Size  Location     Type
  9110 ;;  data            1    wreg     unsigned char 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;  data            1    0[COMRAM] unsigned char 
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  1    wreg      void 
  9115 ;; Registers used:
  9116 ;;		wreg, cstack
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9122 ;;      Params:         0       0       0       0       0       0       0
  9123 ;;      Locals:         1       0       0       0       0       0       0
  9124 ;;      Temps:          0       0       0       0       0       0       0
  9125 ;;      Totals:         1       0       0       0       0       0       0
  9126 ;;Total ram usage:        1 bytes
  9127 ;; Hardware stack levels used: 1
  9128 ;; Hardware stack levels required when called: 2
  9129 ;; This function calls:
  9130 ;;		_i2c_idle
  9131 ;; This function is called by:
  9132 ;;		_write_ds1307
  9133 ;;		_read_ds1307
  9134 ;;		_write_external_eeprom
  9135 ;;		_read_external_eeprom
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139                           	psect	text36
  9140   002C48                     __ptext36:
  9141                           	callstack 0
  9142   002C48                     _i2c_write:
  9143                           	callstack 26
  9144                           
  9145                           ;incstack = 0
  9146                           ;i2c_write@data stored from wreg
  9147   002C48  6E01               	movwf	i2c_write@data^0,c
  9148   002C4A                     
  9149                           ;i2c.c: 55: void i2c_write(unsigned char data);i2c.c: 56: {;i2c.c: 57:  SSPBUF = data;
  9150   002C4A  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  9151   002C4E                     
  9152                           ;i2c.c: 58:  i2c_idle();
  9153   002C4E  EC1B  F016         	call	_i2c_idle	;wreg free
  9154   002C52  0012               	return		;funcret
  9155   002C54                     __end_of_i2c_write:
  9156                           	callstack 0
  9157                           
  9158 ;; *************** function _i2c_stop *****************
  9159 ;; Defined at:
  9160 ;;		line 43 in file "i2c.c"
  9161 ;; Parameters:    Size  Location     Type
  9162 ;;		None
  9163 ;; Auto vars:     Size  Location     Type
  9164 ;;		None
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  1    wreg      void 
  9167 ;; Registers used:
  9168 ;;		cstack
  9169 ;; Tracked objects:
  9170 ;;		On entry : 0/0
  9171 ;;		On exit  : 0/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9174 ;;      Params:         0       0       0       0       0       0       0
  9175 ;;      Locals:         0       0       0       0       0       0       0
  9176 ;;      Temps:          0       0       0       0       0       0       0
  9177 ;;      Totals:         0       0       0       0       0       0       0
  9178 ;;Total ram usage:        0 bytes
  9179 ;; Hardware stack levels used: 1
  9180 ;; Hardware stack levels required when called: 2
  9181 ;; This function calls:
  9182 ;;		_i2c_idle
  9183 ;; This function is called by:
  9184 ;;		_write_ds1307
  9185 ;;		_read_ds1307
  9186 ;;		_write_external_eeprom
  9187 ;;		_read_external_eeprom
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           	psect	text37
  9192   002C60                     __ptext37:
  9193                           	callstack 0
  9194   002C60                     _i2c_stop:
  9195                           	callstack 26
  9196   002C60                     
  9197                           ;i2c.c: 45:  PEN = 1;
  9198   002C60  84C5               	bsf	4037,2,c	;volatile
  9199   002C62                     
  9200                           ;i2c.c: 46:  i2c_idle();
  9201   002C62  EC1B  F016         	call	_i2c_idle	;wreg free
  9202   002C66  0012               	return		;funcret
  9203   002C68                     __end_of_i2c_stop:
  9204                           	callstack 0
  9205                           
  9206 ;; *************** function _i2c_start *****************
  9207 ;; Defined at:
  9208 ;;		line 37 in file "i2c.c"
  9209 ;; Parameters:    Size  Location     Type
  9210 ;;		None
  9211 ;; Auto vars:     Size  Location     Type
  9212 ;;		None
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  1    wreg      void 
  9215 ;; Registers used:
  9216 ;;		cstack
  9217 ;; Tracked objects:
  9218 ;;		On entry : 0/0
  9219 ;;		On exit  : 0/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9222 ;;      Params:         0       0       0       0       0       0       0
  9223 ;;      Locals:         0       0       0       0       0       0       0
  9224 ;;      Temps:          0       0       0       0       0       0       0
  9225 ;;      Totals:         0       0       0       0       0       0       0
  9226 ;;Total ram usage:        0 bytes
  9227 ;; Hardware stack levels used: 1
  9228 ;; Hardware stack levels required when called: 2
  9229 ;; This function calls:
  9230 ;;		_i2c_idle
  9231 ;; This function is called by:
  9232 ;;		_write_ds1307
  9233 ;;		_read_ds1307
  9234 ;;		_write_external_eeprom
  9235 ;;		_read_external_eeprom
  9236 ;; This function uses a non-reentrant model
  9237 ;;
  9238                           
  9239                           	psect	text38
  9240   002C68                     __ptext38:
  9241                           	callstack 0
  9242   002C68                     _i2c_start:
  9243                           	callstack 26
  9244   002C68                     
  9245                           ;i2c.c: 39:  SEN = 1;
  9246   002C68  80C5               	bsf	4037,0,c	;volatile
  9247   002C6A                     
  9248                           ;i2c.c: 40:  i2c_idle();
  9249   002C6A  EC1B  F016         	call	_i2c_idle	;wreg free
  9250   002C6E  0012               	return		;funcret
  9251   002C70                     __end_of_i2c_start:
  9252                           	callstack 0
  9253                           
  9254 ;; *************** function _i2c_rep_start *****************
  9255 ;; Defined at:
  9256 ;;		line 49 in file "i2c.c"
  9257 ;; Parameters:    Size  Location     Type
  9258 ;;		None
  9259 ;; Auto vars:     Size  Location     Type
  9260 ;;		None
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  1    wreg      void 
  9263 ;; Registers used:
  9264 ;;		cstack
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9270 ;;      Params:         0       0       0       0       0       0       0
  9271 ;;      Locals:         0       0       0       0       0       0       0
  9272 ;;      Temps:          0       0       0       0       0       0       0
  9273 ;;      Totals:         0       0       0       0       0       0       0
  9274 ;;Total ram usage:        0 bytes
  9275 ;; Hardware stack levels used: 1
  9276 ;; Hardware stack levels required when called: 2
  9277 ;; This function calls:
  9278 ;;		_i2c_idle
  9279 ;; This function is called by:
  9280 ;;		_read_ds1307
  9281 ;;		_read_external_eeprom
  9282 ;; This function uses a non-reentrant model
  9283 ;;
  9284                           
  9285                           	psect	text39
  9286   002C70                     __ptext39:
  9287                           	callstack 0
  9288   002C70                     _i2c_rep_start:
  9289                           	callstack 26
  9290   002C70                     
  9291                           ;i2c.c: 51:  RSEN = 1;
  9292   002C70  82C5               	bsf	4037,1,c	;volatile
  9293   002C72                     
  9294                           ;i2c.c: 52:  i2c_idle();
  9295   002C72  EC1B  F016         	call	_i2c_idle	;wreg free
  9296   002C76  0012               	return		;funcret
  9297   002C78                     __end_of_i2c_rep_start:
  9298                           	callstack 0
  9299                           
  9300 ;; *************** function _i2c_read *****************
  9301 ;; Defined at:
  9302 ;;		line 73 in file "i2c.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;		None
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;		None
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      unsigned char 
  9309 ;; Registers used:
  9310 ;;		wreg, status,2, cstack
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9316 ;;      Params:         0       0       0       0       0       0       0
  9317 ;;      Locals:         0       0       0       0       0       0       0
  9318 ;;      Temps:          0       0       0       0       0       0       0
  9319 ;;      Totals:         0       0       0       0       0       0       0
  9320 ;;Total ram usage:        0 bytes
  9321 ;; Hardware stack levels used: 1
  9322 ;; Hardware stack levels required when called: 3
  9323 ;; This function calls:
  9324 ;;		_i2c_no_ack
  9325 ;;		_i2c_rx_mode
  9326 ;; This function is called by:
  9327 ;;		_read_ds1307
  9328 ;;		_read_external_eeprom
  9329 ;; This function uses a non-reentrant model
  9330 ;;
  9331                           
  9332                           	psect	text40
  9333   002C54                     __ptext40:
  9334                           	callstack 0
  9335   002C54                     _i2c_read:
  9336                           	callstack 25
  9337   002C54                     
  9338                           ;i2c.c: 75:  i2c_rx_mode();
  9339   002C54  EC3C  F016         	call	_i2c_rx_mode	;wreg free
  9340                           
  9341                           ;i2c.c: 76:  i2c_no_ack();
  9342   002C58  EC40  F016         	call	_i2c_no_ack	;wreg free
  9343   002C5C                     
  9344                           ;i2c.c: 78:  return SSPBUF;
  9345   002C5C  50C9               	movf	201,w,c	;volatile
  9346   002C5E  0012               	return		;funcret
  9347   002C60                     __end_of_i2c_read:
  9348                           	callstack 0
  9349                           
  9350 ;; *************** function _i2c_rx_mode *****************
  9351 ;; Defined at:
  9352 ;;		line 61 in file "i2c.c"
  9353 ;; Parameters:    Size  Location     Type
  9354 ;;		None
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;		None
  9357 ;; Return value:  Size  Location     Type
  9358 ;;                  1    wreg      void 
  9359 ;; Registers used:
  9360 ;;		cstack
  9361 ;; Tracked objects:
  9362 ;;		On entry : 0/0
  9363 ;;		On exit  : 0/0
  9364 ;;		Unchanged: 0/0
  9365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9366 ;;      Params:         0       0       0       0       0       0       0
  9367 ;;      Locals:         0       0       0       0       0       0       0
  9368 ;;      Temps:          0       0       0       0       0       0       0
  9369 ;;      Totals:         0       0       0       0       0       0       0
  9370 ;;Total ram usage:        0 bytes
  9371 ;; Hardware stack levels used: 1
  9372 ;; Hardware stack levels required when called: 2
  9373 ;; This function calls:
  9374 ;;		_i2c_idle
  9375 ;; This function is called by:
  9376 ;;		_i2c_read
  9377 ;; This function uses a non-reentrant model
  9378 ;;
  9379                           
  9380                           	psect	text41
  9381   002C78                     __ptext41:
  9382                           	callstack 0
  9383   002C78                     _i2c_rx_mode:
  9384                           	callstack 25
  9385   002C78                     
  9386                           ;i2c.c: 63:  RCEN = 1;
  9387   002C78  86C5               	bsf	4037,3,c	;volatile
  9388   002C7A                     
  9389                           ;i2c.c: 64:  i2c_idle();
  9390   002C7A  EC1B  F016         	call	_i2c_idle	;wreg free
  9391   002C7E  0012               	return		;funcret
  9392   002C80                     __end_of_i2c_rx_mode:
  9393                           	callstack 0
  9394                           
  9395 ;; *************** function _i2c_idle *****************
  9396 ;; Defined at:
  9397 ;;		line 23 in file "i2c.c"
  9398 ;; Parameters:    Size  Location     Type
  9399 ;;		None
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;		None
  9402 ;; Return value:  Size  Location     Type
  9403 ;;                  1    wreg      void 
  9404 ;; Registers used:
  9405 ;;		None
  9406 ;; Tracked objects:
  9407 ;;		On entry : 0/0
  9408 ;;		On exit  : 0/0
  9409 ;;		Unchanged: 0/0
  9410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9411 ;;      Params:         0       0       0       0       0       0       0
  9412 ;;      Locals:         0       0       0       0       0       0       0
  9413 ;;      Temps:          0       0       0       0       0       0       0
  9414 ;;      Totals:         0       0       0       0       0       0       0
  9415 ;;Total ram usage:        0 bytes
  9416 ;; Hardware stack levels used: 1
  9417 ;; Hardware stack levels required when called: 1
  9418 ;; This function calls:
  9419 ;;		Nothing
  9420 ;; This function is called by:
  9421 ;;		_i2c_start
  9422 ;;		_i2c_stop
  9423 ;;		_i2c_rep_start
  9424 ;;		_i2c_write
  9425 ;;		_i2c_rx_mode
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           	psect	text42
  9430   002C36                     __ptext42:
  9431                           	callstack 0
  9432   002C36                     _i2c_idle:
  9433                           	callstack 26
  9434   002C36                     l814:
  9435   002C36  A69E               	btfss	3998,3,c	;volatile
  9436   002C38  EF20  F016         	goto	u2271
  9437   002C3C  EF22  F016         	goto	u2270
  9438   002C40                     u2271:
  9439   002C40  EF1B  F016         	goto	l814
  9440   002C44                     u2270:
  9441   002C44                     
  9442                           ;i2c.c: 26:  SSPIF = 0;
  9443   002C44  969E               	bcf	3998,3,c	;volatile
  9444   002C46  0012               	return		;funcret
  9445   002C48                     __end_of_i2c_idle:
  9446                           	callstack 0
  9447                           
  9448 ;; *************** function _i2c_no_ack *****************
  9449 ;; Defined at:
  9450 ;;		line 67 in file "i2c.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;		None
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;		None
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  1    wreg      void 
  9457 ;; Registers used:
  9458 ;;		None
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9464 ;;      Params:         0       0       0       0       0       0       0
  9465 ;;      Locals:         0       0       0       0       0       0       0
  9466 ;;      Temps:          0       0       0       0       0       0       0
  9467 ;;      Totals:         0       0       0       0       0       0       0
  9468 ;;Total ram usage:        0 bytes
  9469 ;; Hardware stack levels used: 1
  9470 ;; Hardware stack levels required when called: 1
  9471 ;; This function calls:
  9472 ;;		Nothing
  9473 ;; This function is called by:
  9474 ;;		_i2c_read
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           	psect	text43
  9479   002C80                     __ptext43:
  9480                           	callstack 0
  9481   002C80                     _i2c_no_ack:
  9482                           	callstack 26
  9483   002C80                     
  9484                           ;i2c.c: 69:  ACKDT = 1;
  9485   002C80  8AC5               	bsf	4037,5,c	;volatile
  9486                           
  9487                           ;i2c.c: 70:  ACKEN = 1;
  9488   002C82  88C5               	bsf	4037,4,c	;volatile
  9489   002C84  0012               	return		;funcret
  9490   002C86                     __end_of_i2c_no_ack:
  9491                           	callstack 0
  9492                           
  9493 ;; *************** function ___wmul *****************
  9494 ;; Defined at:
  9495 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  multiplier      2    0[COMRAM] unsigned int 
  9498 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;  product         2    4[COMRAM] unsigned int 
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  2    0[COMRAM] unsigned int 
  9503 ;; Registers used:
  9504 ;;		wreg, status,2, status,0, prodl, prodh
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9510 ;;      Params:         4       0       0       0       0       0       0
  9511 ;;      Locals:         2       0       0       0       0       0       0
  9512 ;;      Temps:          0       0       0       0       0       0       0
  9513 ;;      Totals:         6       0       0       0       0       0       0
  9514 ;;Total ram usage:        6 bytes
  9515 ;; Hardware stack levels used: 1
  9516 ;; Hardware stack levels required when called: 1
  9517 ;; This function calls:
  9518 ;;		Nothing
  9519 ;; This function is called by:
  9520 ;;		_view_log
  9521 ;;		_display_dashboard
  9522 ;;		_display_menu
  9523 ;;		_store_event_in_eeprom
  9524 ;; This function uses a non-reentrant model
  9525 ;;
  9526                           
  9527                           	psect	text44
  9528   002B0E                     __ptext44:
  9529                           	callstack 0
  9530   002B0E                     ___wmul:
  9531                           	callstack 28
  9532   002B0E  5001               	movf	___wmul@multiplier^0,w,c
  9533   002B10  0203               	mulwf	___wmul@multiplicand^0,c
  9534   002B12  CFF3 F005          	movff	prodl,___wmul@product
  9535   002B16  CFF4 F006          	movff	prodh,___wmul@product+1
  9536   002B1A  5001               	movf	___wmul@multiplier^0,w,c
  9537   002B1C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9538   002B1E  50F3               	movf	243,w,c
  9539   002B20  2606               	addwf	(___wmul@product+1)^0,f,c
  9540   002B22  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9541   002B24  0203               	mulwf	___wmul@multiplicand^0,c
  9542   002B26  50F3               	movf	243,w,c
  9543   002B28  2606               	addwf	(___wmul@product+1)^0,f,c
  9544   002B2A  C005  F001         	movff	___wmul@product,?___wmul
  9545   002B2E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9546   002B32  0012               	return		;funcret
  9547   002B34                     __end_of___wmul:
  9548                           	callstack 0
  9549                           
  9550 ;; *************** function _clcd_putch *****************
  9551 ;; Defined at:
  9552 ;;		line 52 in file "clcd.c"
  9553 ;; Parameters:    Size  Location     Type
  9554 ;;  data            1    wreg     const unsigned char 
  9555 ;;  addr            1    7[COMRAM] unsigned char 
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;  data            1    8[COMRAM] const unsigned char 
  9558 ;; Return value:  Size  Location     Type
  9559 ;;                  1    wreg      void 
  9560 ;; Registers used:
  9561 ;;		wreg, status,2, cstack
  9562 ;; Tracked objects:
  9563 ;;		On entry : 0/0
  9564 ;;		On exit  : 0/0
  9565 ;;		Unchanged: 0/0
  9566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9567 ;;      Params:         1       0       0       0       0       0       0
  9568 ;;      Locals:         1       0       0       0       0       0       0
  9569 ;;      Temps:          0       0       0       0       0       0       0
  9570 ;;      Totals:         2       0       0       0       0       0       0
  9571 ;;Total ram usage:        2 bytes
  9572 ;; Hardware stack levels used: 1
  9573 ;; Hardware stack levels required when called: 2
  9574 ;; This function calls:
  9575 ;;		_clcd_write
  9576 ;; This function is called by:
  9577 ;;		_display_dashboard
  9578 ;;		_password_screen
  9579 ;;		_view_log
  9580 ;;		_change_password
  9581 ;; This function uses a non-reentrant model
  9582 ;;
  9583                           
  9584                           	psect	text45
  9585   002BB8                     __ptext45:
  9586                           	callstack 0
  9587   002BB8                     _clcd_putch:
  9588                           	callstack 27
  9589                           
  9590                           ;incstack = 0
  9591                           ;clcd_putch@data stored from wreg
  9592   002BB8  6E09               	movwf	clcd_putch@data^0,c
  9593   002BBA                     
  9594                           ;clcd.c: 52: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 53: {
      +                          ;clcd.c: 54:  clcd_write(addr, 0);
  9595   002BBA  0E00               	movlw	0
  9596   002BBC  6E01               	movwf	clcd_write@control_bit^0,c
  9597   002BBE  5008               	movf	clcd_putch@addr^0,w,c
  9598   002BC0  EC25  F015         	call	_clcd_write
  9599                           
  9600                           ;clcd.c: 55:  clcd_write(data, 1);
  9601   002BC4  0E01               	movlw	1
  9602   002BC6  6E01               	movwf	clcd_write@control_bit^0,c
  9603   002BC8  5009               	movf	clcd_putch@data^0,w,c
  9604   002BCA  EC25  F015         	call	_clcd_write
  9605   002BCE  0012               	return		;funcret
  9606   002BD0                     __end_of_clcd_putch:
  9607                           	callstack 0
  9608                           
  9609 ;; *************** function _clcd_print *****************
  9610 ;; Defined at:
  9611 ;;		line 43 in file "clcd.c"
  9612 ;; Parameters:    Size  Location     Type
  9613 ;;  data            2    6[COMRAM] PTR const unsigned char 
  9614 ;;		 -> time(9), diplay(100), STR_37(3), STR_36(3), 
  9615 ;;		 -> STR_35(3), STR_34(3), STR_33(6), STR_32(13), 
  9616 ;;		 -> STR_31(14), STR_30(13), STR_29(16), STR_28(16), 
  9617 ;;		 -> STR_26(13), STR_25(14), STR_24(9), STR_23(3), 
  9618 ;;		 -> STR_22(3), STR_21(3), change_Time(9), STR_20(13), 
  9619 ;;		 -> STR_19(10), STR_17(19), STR_12(15), STR_11(11), 
  9620 ;;		 -> print(12), STR_10(17), STR_9(15), STR_8(17), 
  9621 ;;		 -> STR_7(5), STR_6(11), STR_5(17), STR_4(12), 
  9622 ;;		 -> STR_3(13), STR_2(17), gear(36), STR_1(17), 
  9623 ;;  addr            1    8[COMRAM] unsigned char 
  9624 ;; Auto vars:     Size  Location     Type
  9625 ;;		None
  9626 ;; Return value:  Size  Location     Type
  9627 ;;                  1    wreg      void 
  9628 ;; Registers used:
  9629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9630 ;; Tracked objects:
  9631 ;;		On entry : 0/0
  9632 ;;		On exit  : 0/0
  9633 ;;		Unchanged: 0/0
  9634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9635 ;;      Params:         3       0       0       0       0       0       0
  9636 ;;      Locals:         0       0       0       0       0       0       0
  9637 ;;      Temps:          0       0       0       0       0       0       0
  9638 ;;      Totals:         3       0       0       0       0       0       0
  9639 ;;Total ram usage:        3 bytes
  9640 ;; Hardware stack levels used: 1
  9641 ;; Hardware stack levels required when called: 2
  9642 ;; This function calls:
  9643 ;;		_clcd_write
  9644 ;; This function is called by:
  9645 ;;		_display_dashboard
  9646 ;;		_password_screen
  9647 ;;		_view_log
  9648 ;;		_download_log
  9649 ;;		_clear_log
  9650 ;;		_set_time
  9651 ;;		_change_password
  9652 ;;		_display_menu
  9653 ;;		_get_time
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           	psect	text46
  9658   00280C                     __ptext46:
  9659                           	callstack 0
  9660   00280C                     _clcd_print:
  9661                           	callstack 27
  9662   00280C                     
  9663                           ;clcd.c: 43: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 44: 
      +                          {;clcd.c: 45:  clcd_write(addr, 0);
  9664   00280C  0E00               	movlw	0
  9665   00280E  6E01               	movwf	clcd_write@control_bit^0,c
  9666   002810  5009               	movf	clcd_print@addr^0,w,c
  9667   002812  EC25  F015         	call	_clcd_write
  9668                           
  9669                           ;clcd.c: 46:  while (*data != '\0')
  9670   002816  EF23  F014         	goto	l3322
  9671   00281A                     l3318:
  9672                           
  9673                           ;clcd.c: 47:  {;clcd.c: 48:   clcd_write(*data++, 1);
  9674   00281A  0E01               	movlw	1
  9675   00281C  6E01               	movwf	clcd_write@control_bit^0,c
  9676   00281E  C007  FFF6         	movff	clcd_print@data,tblptrl
  9677   002822  C008  FFF7         	movff	clcd_print@data+1,tblptrh
  9678   002826  6AF8               	clrf	tblptru,c
  9679   002828  0E05               	movlw	(high __ramtop+-1)
  9680   00282A  64F7               	cpfsgt	tblptrh,c
  9681   00282C  D003               	bra	u2327
  9682   00282E  0008               	tblrd		*
  9683   002830  50F5               	movf	tablat,w,c
  9684   002832  D005               	bra	u2320
  9685   002834                     u2327:
  9686   002834  CFF6 FFE9          	movff	tblptrl,fsr0l
  9687   002838  CFF7 FFEA          	movff	tblptrh,fsr0h
  9688   00283C  50EF               	movf	indf0,w,c
  9689   00283E                     u2320:
  9690   00283E  EC25  F015         	call	_clcd_write
  9691   002842  4A07               	infsnz	clcd_print@data^0,f,c
  9692   002844  2A08               	incf	(clcd_print@data+1)^0,f,c
  9693   002846                     l3322:
  9694                           
  9695                           ;clcd.c: 46:  while (*data != '\0')
  9696   002846  C007  FFF6         	movff	clcd_print@data,tblptrl
  9697   00284A  C008  FFF7         	movff	clcd_print@data+1,tblptrh
  9698   00284E  6AF8               	clrf	tblptru,c
  9699   002850  0E05               	movlw	(high __ramtop+-1)
  9700   002852  64F7               	cpfsgt	tblptrh,c
  9701   002854  D003               	bra	u2337
  9702   002856  0008               	tblrd		*
  9703   002858  50F5               	movf	tablat,w,c
  9704   00285A  D005               	bra	u2330
  9705   00285C                     u2337:
  9706   00285C  CFF6 FFE9          	movff	tblptrl,fsr0l
  9707   002860  CFF7 FFEA          	movff	tblptrh,fsr0h
  9708   002864  50EF               	movf	indf0,w,c
  9709   002866                     u2330:
  9710   002866  0900               	iorlw	0
  9711   002868  A4D8               	btfss	status,2,c
  9712   00286A  EF39  F014         	goto	u2341
  9713   00286E  EF3B  F014         	goto	u2340
  9714   002872                     u2341:
  9715   002872  EF0D  F014         	goto	l3318
  9716   002876                     u2340:
  9717   002876  0012               	return		;funcret
  9718   002878                     __end_of_clcd_print:
  9719                           	callstack 0
  9720                           
  9721 ;; *************** function _clcd_write *****************
  9722 ;; Defined at:
  9723 ;;		line 5 in file "clcd.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;  byte            1    wreg     unsigned char 
  9726 ;;  control_bit     1    0[COMRAM] unsigned char 
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;  byte            1    1[COMRAM] unsigned char 
  9729 ;; Return value:  Size  Location     Type
  9730 ;;                  1    wreg      void 
  9731 ;; Registers used:
  9732 ;;		wreg
  9733 ;; Tracked objects:
  9734 ;;		On entry : 0/0
  9735 ;;		On exit  : 0/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9738 ;;      Params:         1       0       0       0       0       0       0
  9739 ;;      Locals:         1       0       0       0       0       0       0
  9740 ;;      Temps:          0       0       0       0       0       0       0
  9741 ;;      Totals:         2       0       0       0       0       0       0
  9742 ;;Total ram usage:        2 bytes
  9743 ;; Hardware stack levels used: 1
  9744 ;; Hardware stack levels required when called: 1
  9745 ;; This function calls:
  9746 ;;		Nothing
  9747 ;; This function is called by:
  9748 ;;		_init_clcd
  9749 ;;		_clcd_print
  9750 ;;		_clcd_putch
  9751 ;;		_main
  9752 ;;		_password_screen
  9753 ;;		_view_log
  9754 ;;		_download_log
  9755 ;;		_clear_log
  9756 ;;		_set_time
  9757 ;;		_change_password
  9758 ;;		_display_menu
  9759 ;; This function uses a non-reentrant model
  9760 ;;
  9761                           
  9762                           	psect	text47
  9763   002A4A                     __ptext47:
  9764                           	callstack 0
  9765   002A4A                     _clcd_write:
  9766                           	callstack 28
  9767                           
  9768                           ;incstack = 0
  9769                           ;clcd_write@byte stored from wreg
  9770   002A4A  6E02               	movwf	clcd_write@byte^0,c
  9771   002A4C                     
  9772                           ;clcd.c: 5: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 6: {;
      +                          clcd.c: 7:  RC1 = control_bit;
  9773   002A4C  B001               	btfsc	clcd_write@control_bit^0,0,c
  9774   002A4E  EF2B  F015         	goto	u2281
  9775   002A52  EF2E  F015         	goto	u2280
  9776   002A56                     u2281:
  9777   002A56  8282               	bsf	3970,1,c	;volatile
  9778   002A58  EF2F  F015         	goto	u2295
  9779   002A5C                     u2280:
  9780   002A5C  9282               	bcf	3970,1,c	;volatile
  9781   002A5E                     u2295:
  9782   002A5E                     
  9783                           ;clcd.c: 8:  PORTD = byte;
  9784   002A5E  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  9785   002A62                     
  9786                           ;clcd.c: 11:  RC2 = 1;
  9787   002A62  8482               	bsf	3970,2,c	;volatile
  9788   002A64                     
  9789                           ;clcd.c: 12:  RC2 = 0;
  9790   002A64  9482               	bcf	3970,2,c	;volatile
  9791   002A66                     
  9792                           ;clcd.c: 14:  TRISD7 = 0xFF;
  9793   002A66  8E95               	bsf	3989,7,c	;volatile
  9794   002A68                     
  9795                           ;clcd.c: 15:  RC0 = 1;
  9796   002A68  8082               	bsf	3970,0,c	;volatile
  9797   002A6A                     
  9798                           ;clcd.c: 16:  RC1 = 0;
  9799   002A6A  9282               	bcf	3970,1,c	;volatile
  9800   002A6C                     l3282:
  9801                           
  9802                           ;clcd.c: 19:  {;clcd.c: 20:   RC2 = 1;
  9803   002A6C  8482               	bsf	3970,2,c	;volatile
  9804   002A6E                     
  9805                           ;clcd.c: 21:   RC2 = 0;
  9806   002A6E  9482               	bcf	3970,2,c	;volatile
  9807   002A70                     
  9808                           ;clcd.c: 22:  } while (RD7);
  9809   002A70  BE83               	btfsc	3971,7,c	;volatile
  9810   002A72  EF3D  F015         	goto	u2301
  9811   002A76  EF3F  F015         	goto	u2300
  9812   002A7A                     u2301:
  9813   002A7A  EF36  F015         	goto	l3282
  9814   002A7E                     u2300:
  9815   002A7E                     
  9816                           ;clcd.c: 24:  RC0 = 0;
  9817   002A7E  9082               	bcf	3970,0,c	;volatile
  9818                           
  9819                           ;clcd.c: 25:  TRISD7 = 0x00;
  9820   002A80  9E95               	bcf	3989,7,c	;volatile
  9821   002A82  0012               	return		;funcret
  9822   002A84                     __end_of_clcd_write:
  9823                           	callstack 0
  9824                           
  9825 ;; *************** function _isr *****************
  9826 ;; Defined at:
  9827 ;;		line 6 in file "isr.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;		None
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;		None
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  1    wreg      void 
  9834 ;; Registers used:
  9835 ;;		wreg, status,2, status,0
  9836 ;; Tracked objects:
  9837 ;;		On entry : 0/0
  9838 ;;		On exit  : 0/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9841 ;;      Params:         0       0       0       0       0       0       0
  9842 ;;      Locals:         0       0       0       0       0       0       0
  9843 ;;      Temps:          0       0       0       0       0       0       0
  9844 ;;      Totals:         0       0       0       0       0       0       0
  9845 ;;Total ram usage:        0 bytes
  9846 ;; Hardware stack levels used: 1
  9847 ;; This function calls:
  9848 ;;		Nothing
  9849 ;; This function is called by:
  9850 ;;		Interrupt level 2
  9851 ;; This function uses a non-reentrant model
  9852 ;;
  9853                           
  9854                           	psect	intcode
  9855   000008                     __pintcode:
  9856                           	callstack 0
  9857   000008                     _isr:
  9858                           	callstack 23
  9859                           
  9860                           ;incstack = 0
  9861   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9862   00000A  ED8F  F013         	call	int_func,f	;refresh shadow registers
  9863                           
  9864                           	psect	intcode_body
  9865   00271E                     __pintcode_body:
  9866                           	callstack 23
  9867   00271E                     int_func:
  9868                           	callstack 23
  9869   00271E  0006               	pop		; remove dummy address from shadow register refresh
  9870   002720                     
  9871                           ;isr.c: 7:     static unsigned short count;;isr.c: 8:     if (TMR0IF) {
  9872   002720  A4F2               	btfss	4082,2,c	;volatile
  9873   002722  EF95  F013         	goto	i2u447_41
  9874   002726  EF97  F013         	goto	i2u447_40
  9875   00272A                     i2u447_41:
  9876   00272A  EFCA  F013         	goto	i2l648
  9877   00272E                     i2u447_40:
  9878   00272E                     
  9879                           ;isr.c: 9:         TMR0 = TMR0 + 8;
  9880   00272E  0E08               	movlw	8
  9881   002730  24D6               	addwf	214,w,c	;volatile
  9882   002732  6ED6               	movwf	214,c	;volatile
  9883   002734  0E00               	movlw	0
  9884   002736  20D7               	addwfc	215,w,c	;volatile
  9885   002738  6ED7               	movwf	215,c	;volatile
  9886                           
  9887                           ;isr.c: 11:         if (count++ == 20000) {
  9888   00273A  0100               	movlb	0	; () banked
  9889   00273C  4B9F               	infsnz	isr@count& (0+255),f,b
  9890   00273E  2BA0               	incf	(isr@count+1)& (0+255),f,b
  9891   002740  0E21               	movlw	33
  9892   002742  199F               	xorwf	isr@count& (0+255),w,b
  9893   002744  E107               	bnz	i2u448_41
  9894   002746  0E4E               	movlw	78
  9895   002748  19A0               	xorwf	(isr@count+1)& (0+255),w,b
  9896   00274A  A4D8               	btfss	status,2,c
  9897   00274C  EFAA  F013         	goto	i2u448_41
  9898   002750  EFAC  F013         	goto	i2u448_40
  9899   002754                     i2u448_41:
  9900   002754  EFC9  F013         	goto	i2l4898
  9901   002758                     i2u448_40:
  9902   002758                     
  9903                           ; BSR set to: 0
  9904                           ;isr.c: 12:             count = 0;
  9905   002758  0E00               	movlw	0
  9906   00275A  6FA0               	movwf	(isr@count+1)& (0+255),b
  9907   00275C  0E00               	movlw	0
  9908   00275E  6F9F               	movwf	isr@count& (0+255),b
  9909   002760                     
  9910                           ; BSR set to: 0
  9911                           ;isr.c: 13:             blink_f = !blink_f;
  9912   002760  51A9               	movf	_blink_f& (0+255),w,b
  9913   002762  11AA               	iorwf	(_blink_f+1)& (0+255),w,b
  9914   002764  B4D8               	btfsc	status,2,c
  9915   002766  EFB7  F013         	goto	i2u449_41
  9916   00276A  EFBA  F013         	goto	i2u449_40
  9917   00276E                     i2u449_41:
  9918   00276E  0E01               	movlw	1
  9919   002770  EFBB  F013         	goto	i2u450_40
  9920   002774                     i2u449_40:
  9921   002774  0E00               	movlw	0
  9922   002776                     i2u450_40:
  9923   002776  6FA9               	movwf	_blink_f& (0+255),b
  9924   002778  6BAA               	clrf	(_blink_f+1)& (0+255),b
  9925   00277A                     
  9926                           ; BSR set to: 0
  9927                           ;isr.c: 14:             if (SCREEN_FLAG == 1)
  9928   00277A  0451               	decf	_SCREEN_FLAG^0,w,c
  9929   00277C  1052               	iorwf	(_SCREEN_FLAG+1)^0,w,c
  9930   00277E  A4D8               	btfss	status,2,c
  9931   002780  EFC4  F013         	goto	i2u451_41
  9932   002784  EFC6  F013         	goto	i2u451_40
  9933   002788                     i2u451_41:
  9934   002788  EFC9  F013         	goto	i2l4898
  9935   00278C                     i2u451_40:
  9936   00278C                     
  9937                           ; BSR set to: 0
  9938                           ;isr.c: 15:                 --sec;
  9939   00278C  065C               	decf	_sec^0,f,c
  9940   00278E  A0D8               	btfss	status,0,c
  9941   002790  065D               	decf	(_sec+1)^0,f,c
  9942   002792                     i2l4898:
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;isr.c: 17:         TMR0IF = 0;
  9946   002792  94F2               	bcf	4082,2,c	;volatile
  9947   002794                     i2l648:
  9948   002794  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9949   002796  0011               	retfie		f
  9950   002798                     __end_of_isr:
  9951                           	callstack 0
  9952                           
  9953                           	psect	rparam
  9954   000000                     
  9955                           	psect	temp
  9956   00005E                     btemp:
  9957                           	callstack 0
  9958   00005E                     	ds	1
  9959   000000                     int$flags	set	btemp
  9960   000000                     wtemp8	set	btemp+1
  9961   000000                     ttemp5	set	btemp+1
  9962   000000                     ttemp6	set	btemp+4
  9963   000000                     ttemp7	set	btemp+8
  9964                           
  9965                           	psect	idloc
  9966                           
  9967                           ;Config register IDLOC0 @ 0x200000
  9968                           ;	unspecified, using default values
  9969   200000                     	org	2097152
  9970   200000  FF                 	db	255
  9971                           
  9972                           ;Config register IDLOC1 @ 0x200001
  9973                           ;	unspecified, using default values
  9974   200001                     	org	2097153
  9975   200001  FF                 	db	255
  9976                           
  9977                           ;Config register IDLOC2 @ 0x200002
  9978                           ;	unspecified, using default values
  9979   200002                     	org	2097154
  9980   200002  FF                 	db	255
  9981                           
  9982                           ;Config register IDLOC3 @ 0x200003
  9983                           ;	unspecified, using default values
  9984   200003                     	org	2097155
  9985   200003  FF                 	db	255
  9986                           
  9987                           ;Config register IDLOC4 @ 0x200004
  9988                           ;	unspecified, using default values
  9989   200004                     	org	2097156
  9990   200004  FF                 	db	255
  9991                           
  9992                           ;Config register IDLOC5 @ 0x200005
  9993                           ;	unspecified, using default values
  9994   200005                     	org	2097157
  9995   200005  FF                 	db	255
  9996                           
  9997                           ;Config register IDLOC6 @ 0x200006
  9998                           ;	unspecified, using default values
  9999   200006                     	org	2097158
 10000   200006  FF                 	db	255
 10001                           
 10002                           ;Config register IDLOC7 @ 0x200007
 10003                           ;	unspecified, using default values
 10004   200007                     	org	2097159
 10005   200007  FF                 	db	255
 10006                           
 10007                           	psect	config
 10008                           
 10009                           ; Padding undefined space
 10010   300000                     	org	3145728
 10011   300000  FF                 	db	255
 10012                           
 10013                           ;Config register CONFIG1H @ 0x300001
 10014                           ;	unspecified, using default values
 10015                           ;	Oscillator Selection bits
 10016                           ;	OSC = 0x7, unprogrammed default
 10017                           ;	Fail-Safe Clock Monitor Enable bit
 10018                           ;	FCMEN = 0x0, unprogrammed default
 10019                           ;	Internal/External Oscillator Switchover bit
 10020                           ;	IESO = 0x0, unprogrammed default
 10021   300001                     	org	3145729
 10022   300001  07                 	db	7
 10023                           
 10024                           ;Config register CONFIG2L @ 0x300002
 10025                           ;	unspecified, using default values
 10026                           ;	Power-up Timer Enable bit
 10027                           ;	PWRT = 0x1, unprogrammed default
 10028                           ;	Brown-out Reset Enable bits
 10029                           ;	BOREN = 0x3, unprogrammed default
 10030                           ;	Brown-out Reset Voltage bits
 10031                           ;	BORV = 0x3, unprogrammed default
 10032   300002                     	org	3145730
 10033   300002  1F                 	db	31
 10034                           
 10035                           ;Config register CONFIG2H @ 0x300003
 10036                           ;	unspecified, using default values
 10037                           ;	Watchdog Timer Enable bit
 10038                           ;	WDT = 0x1, unprogrammed default
 10039                           ;	Watchdog Timer Postscale Select bits
 10040                           ;	WDTPS = 0xF, unprogrammed default
 10041   300003                     	org	3145731
 10042   300003  1F                 	db	31
 10043                           
 10044                           ; Padding undefined space
 10045   300004                     	org	3145732
 10046   300004  FF                 	db	255
 10047                           
 10048                           ;Config register CONFIG3H @ 0x300005
 10049                           ;	unspecified, using default values
 10050                           ;	PORTB A/D Enable bit
 10051                           ;	PBADEN = 0x1, unprogrammed default
 10052                           ;	Low-Power Timer 1 Oscillator Enable bit
 10053                           ;	LPT1OSC = 0x0, unprogrammed default
 10054                           ;	MCLR Pin Enable bit
 10055                           ;	MCLRE = 0x1, unprogrammed default
 10056   300005                     	org	3145733
 10057   300005  82                 	db	130
 10058                           
 10059                           ;Config register CONFIG4L @ 0x300006
 10060                           ;	unspecified, using default values
 10061                           ;	Stack Full/Underflow Reset Enable bit
 10062                           ;	STVREN = 0x1, unprogrammed default
 10063                           ;	Single-Supply ICSP Enable bit
 10064                           ;	LVP = 0x1, unprogrammed default
 10065                           ;	Boot Block Size Select bit
 10066                           ;	BBSIZ = 0x0, unprogrammed default
 10067                           ;	Extended Instruction Set Enable bit
 10068                           ;	XINST = 0x0, unprogrammed default
 10069                           ;	Background Debugger Enable bit
 10070                           ;	DEBUG = 0x1, unprogrammed default
 10071   300006                     	org	3145734
 10072   300006  85                 	db	133
 10073                           
 10074                           ; Padding undefined space
 10075   300007                     	org	3145735
 10076   300007  FF                 	db	255
 10077                           
 10078                           ;Config register CONFIG5L @ 0x300008
 10079                           ;	unspecified, using default values
 10080                           ;	Code Protection bit
 10081                           ;	CP0 = 0x1, unprogrammed default
 10082                           ;	Code Protection bit
 10083                           ;	CP1 = 0x1, unprogrammed default
 10084                           ;	Code Protection bit
 10085                           ;	CP2 = 0x1, unprogrammed default
 10086                           ;	Code Protection bit
 10087                           ;	CP3 = 0x1, unprogrammed default
 10088   300008                     	org	3145736
 10089   300008  0F                 	db	15
 10090                           
 10091                           ;Config register CONFIG5H @ 0x300009
 10092                           ;	unspecified, using default values
 10093                           ;	Boot Block Code Protection bit
 10094                           ;	CPB = 0x1, unprogrammed default
 10095                           ;	Data EEPROM Code Protection bit
 10096                           ;	CPD = 0x1, unprogrammed default
 10097   300009                     	org	3145737
 10098   300009  C0                 	db	192
 10099                           
 10100                           ;Config register CONFIG6L @ 0x30000A
 10101                           ;	unspecified, using default values
 10102                           ;	Write Protection bit
 10103                           ;	WRT0 = 0x1, unprogrammed default
 10104                           ;	Write Protection bit
 10105                           ;	WRT1 = 0x1, unprogrammed default
 10106                           ;	Write Protection bit
 10107                           ;	WRT2 = 0x1, unprogrammed default
 10108                           ;	Write Protection bit
 10109                           ;	WRT3 = 0x1, unprogrammed default
 10110   30000A                     	org	3145738
 10111   30000A  0F                 	db	15
 10112                           
 10113                           ;Config register CONFIG6H @ 0x30000B
 10114                           ;	unspecified, using default values
 10115                           ;	Configuration Register Write Protection bit
 10116                           ;	WRTC = 0x1, unprogrammed default
 10117                           ;	Boot Block Write Protection bit
 10118                           ;	WRTB = 0x1, unprogrammed default
 10119                           ;	Data EEPROM Write Protection bit
 10120                           ;	WRTD = 0x1, unprogrammed default
 10121   30000B                     	org	3145739
 10122   30000B  E0                 	db	224
 10123                           
 10124                           ;Config register CONFIG7L @ 0x30000C
 10125                           ;	unspecified, using default values
 10126                           ;	Table Read Protection bit
 10127                           ;	EBTR0 = 0x1, unprogrammed default
 10128                           ;	Table Read Protection bit
 10129                           ;	EBTR1 = 0x1, unprogrammed default
 10130                           ;	Table Read Protection bit
 10131                           ;	EBTR2 = 0x1, unprogrammed default
 10132                           ;	Table Read Protection bit
 10133                           ;	EBTR3 = 0x1, unprogrammed default
 10134   30000C                     	org	3145740
 10135   30000C  0F                 	db	15
 10136                           
 10137                           ;Config register CONFIG7H @ 0x30000D
 10138                           ;	unspecified, using default values
 10139                           ;	Boot Block Table Read Protection bit
 10140                           ;	EBTRB = 0x1, unprogrammed default
 10141   30000D                     	org	3145741
 10142   30000D  40                 	db	64
 10143                           tosu	equ	0xFFF
 10144                           tosh	equ	0xFFE
 10145                           tosl	equ	0xFFD
 10146                           stkptr	equ	0xFFC
 10147                           pclatu	equ	0xFFB
 10148                           pclath	equ	0xFFA
 10149                           pcl	equ	0xFF9
 10150                           tblptru	equ	0xFF8
 10151                           tblptrh	equ	0xFF7
 10152                           tblptrl	equ	0xFF6
 10153                           tablat	equ	0xFF5
 10154                           prodh	equ	0xFF4
 10155                           prodl	equ	0xFF3
 10156                           indf0	equ	0xFEF
 10157                           postinc0	equ	0xFEE
 10158                           postdec0	equ	0xFED
 10159                           preinc0	equ	0xFEC
 10160                           plusw0	equ	0xFEB
 10161                           fsr0h	equ	0xFEA
 10162                           fsr0l	equ	0xFE9
 10163                           wreg	equ	0xFE8
 10164                           indf1	equ	0xFE7
 10165                           postinc1	equ	0xFE6
 10166                           postdec1	equ	0xFE5
 10167                           preinc1	equ	0xFE4
 10168                           plusw1	equ	0xFE3
 10169                           fsr1h	equ	0xFE2
 10170                           fsr1l	equ	0xFE1
 10171                           bsr	equ	0xFE0
 10172                           indf2	equ	0xFDF
 10173                           postinc2	equ	0xFDE
 10174                           postdec2	equ	0xFDD
 10175                           preinc2	equ	0xFDC
 10176                           plusw2	equ	0xFDB
 10177                           fsr2h	equ	0xFDA
 10178                           fsr2l	equ	0xFD9
 10179                           status	equ	0xFD8

Data Sizes:
    Strings     362
    Constant    0
    Data        174
    BSS         208
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     56      93
    BANK0           160      0     153
    BANK1           256      0     192
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 100
		 -> change_Time(BANK0[9]), diplay(BANK1[100]), gear(BANK1[36]), print(BANK0[12]), 
		 -> STR_1(CODE[17]), STR_10(CODE[17]), STR_11(CODE[11]), STR_12(CODE[15]), 
		 -> STR_17(CODE[19]), STR_19(CODE[10]), STR_2(CODE[17]), STR_20(CODE[13]), 
		 -> STR_21(CODE[3]), STR_22(CODE[3]), STR_23(CODE[3]), STR_24(CODE[9]), 
		 -> STR_25(CODE[14]), STR_26(CODE[13]), STR_28(CODE[16]), STR_29(CODE[16]), 
		 -> STR_3(CODE[13]), STR_30(CODE[13]), STR_31(CODE[14]), STR_32(CODE[13]), 
		 -> STR_33(CODE[6]), STR_34(CODE[3]), STR_35(CODE[3]), STR_36(CODE[3]), 
		 -> STR_37(CODE[3]), STR_4(CODE[12]), STR_5(CODE[17]), STR_6(CODE[11]), 
		 -> STR_7(CODE[5]), STR_8(CODE[17]), STR_9(CODE[15]), time(BANK0[9]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 24
		 -> print(BANK0[12]), STR_13(CODE[16]), STR_14(CODE[3]), STR_15(CODE[3]), 
		 -> STR_16(CODE[3]), STR_18(CODE[24]), 


Critical Paths under _main in COMRAM

    _view_log->_clcd_print
    _view_log->_clcd_putch
    _set_time->_store_event_in_eeprom
    _password_screen->_clcd_print
    _password_screen->_clcd_putch
    _init_config->_store_event_in_eeprom
    _init_ds1307->_write_ds1307
    _write_ds1307->___awdiv
    _init_clcd->_clcd_write
    _download_log->_clcd_print
    _puts->_putch
    _display_menu->_clcd_print
    _display_dashboard->___fltol
    _get_time->_clcd_print
    _read_ds1307->_i2c_write
    ___xxtofl->_read_adc
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _clear_log->_store_event_in_eeprom
    _change_password->_store_event_in_eeprom
    _store_event_in_eeprom->_over_write
    _over_write->_write_external_eeprom
    _write_external_eeprom->___wmul
    _read_external_eeprom->_i2c_write
    _clcd_putch->___lwdiv
    _clcd_print->___wmul

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  165406
                    _change_password
                         _clcd_write
                          _clear_log
                  _display_dashboard
                       _display_menu
                       _download_log
                        _init_config
                    _password_screen
                      _read_switches
                           _set_time
                           _view_log
 ---------------------------------------------------------------------------------
 (1) _view_log                                             2     2      0   19710
                                              9 COMRAM     2     2      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                         _clcd_print
                         _clcd_putch
                         _clcd_write
               _read_external_eeprom
                      _read_switches
 ---------------------------------------------------------------------------------
 (1) _set_time                                             7     7      0   19111
                                             27 COMRAM     7     7      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_write
                        _read_ds1307
              _store_event_in_eeprom
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _password_screen                                     12    12      0   18993
                                              9 COMRAM    12    12      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    7342
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                        _init_timer0
              _store_event_in_eeprom
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     734
                                             10 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _write_ds1307                                         2     1      1     598
                                              8 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0    3464
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _download_log                                        11    11      0   15012
                                              9 COMRAM    11    11      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_write
                          _init_uart
                              _putch
                               _puts
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     523
                                              1 COMRAM     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_menu                                         0     0      0   13534
                             ___wmul
                         _clcd_print
                         _clcd_write
                      _read_switches
 ---------------------------------------------------------------------------------
 (2) _read_switches                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (3) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_dashboard                                    0     0      0   30800
                            ___fldiv
                            ___fltol
                            ___lwdiv
                            ___lwmod
                             ___wmul
                           ___xxtofl
                         _clcd_print
                         _clcd_putch
                           _get_time
                           _read_adc
              _store_event_in_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _get_time                                             0     0      0    9374
                         _clcd_print
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (2) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              7 COMRAM    14    10      4
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             46 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            4     4      0   15938
                                             27 COMRAM     4     4      0
                         _clcd_print
                         _clcd_write
              _store_event_in_eeprom
 ---------------------------------------------------------------------------------
 (1) _change_password                                     12    12      0   21458
                                             27 COMRAM    12    12      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
              _store_event_in_eeprom
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _store_event_in_eeprom                               12    12      0    3144
                                             15 COMRAM    12    12      0
                             ___wmul
                         _over_write
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (3) _over_write                                           5     3      2    1160
                                             10 COMRAM     5     3      2
               _read_external_eeprom
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (3) _write_external_eeprom                                4     3      1     925
                                              6 COMRAM     4     3      1
                             ___wmul (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _read_external_eeprom                                 2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     719
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    4572
                                              7 COMRAM     2     1      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    9307
                                              6 COMRAM     3     0      3
                             ___wmul (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_write                                           2     1      1    3464
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _change_password
     _clcd_print
       ___wmul (ARG)
       _clcd_write (ARG)
     _clcd_putch
       ___lwdiv (ARG)
       ___lwmod (ARG)
       _clcd_write (ARG)
     _clcd_write
     _store_event_in_eeprom
       ___wmul
       _over_write
         _read_external_eeprom
           _i2c_read
             _i2c_no_ack
             _i2c_rx_mode
               _i2c_idle
           _i2c_rep_start
             _i2c_idle
           _i2c_start
             _i2c_idle
           _i2c_stop
             _i2c_idle
           _i2c_write
             _i2c_idle
         _write_external_eeprom
           ___wmul (ARG)
           _i2c_start (ARG)
           _i2c_stop (ARG)
           _i2c_write (ARG)
       _write_external_eeprom
     _write_external_eeprom
   _clcd_write
   _clear_log
     _clcd_print
     _clcd_write
     _store_event_in_eeprom
   _display_dashboard
     ___fldiv
       ___xxtofl (ARG)
         _read_adc (ARG)
       _read_adc (ARG)
     ___fltol
       ___fldiv (ARG)
       ___xxtofl (ARG)
       _read_adc (ARG)
     ___lwdiv
     ___lwmod
     ___wmul
     ___xxtofl
     _clcd_print
     _clcd_putch
     _get_time
       _clcd_print
       _read_ds1307
         _i2c_read
         _i2c_rep_start
         _i2c_start
         _i2c_stop
         _i2c_write
     _read_adc
     _store_event_in_eeprom
   _display_menu
     ___wmul
     _clcd_print
     _clcd_write
     _read_switches
       _scan_key
   _download_log
     ___lwdiv
     ___lwmod
     _clcd_print
     _clcd_write
     _init_uart
     _putch
     _puts
       _putch
     _read_external_eeprom
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         ___awdiv (ARG)
         ___awmod (ARG)
         _i2c_start (ARG)
         _i2c_stop (ARG)
         _i2c_write (ARG)
     _init_i2c
     _init_matrix_keypad
     _init_timer0
     _store_event_in_eeprom
   _password_screen
     ___lwdiv
     ___lwmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_external_eeprom
   _read_switches
   _set_time
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_write
     _read_ds1307
     _store_event_in_eeprom
     _write_ds1307
   _view_log
     ___lwdiv
     ___lwmod
     ___wmul
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_external_eeprom
     _read_switches

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
BITBIGSFRl         281      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C0       7       75.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     38      5D       1       98.9%
BITBIGSFRhhlhhh     19      0       0      17        0.0%
BITBIGSFRhhllhh     10      0       0      19        0.0%
BITBIGSFRhl          F      0       0      23        0.0%
BITBIGSFRhhh         D      0       0      16        0.0%
BITBIGSFRhhlhhl      B      0       0      18        0.0%
BITBIGSFRhhllhh      9      0       0      20        0.0%
BITBIGSFRhhlll       7      0       0      22        0.0%
BITBIGSFRhhllhl      2      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B6      25        0.0%
DATA                 0      0     1B6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Mar 02 10:35:49 2024

                 ___fldiv@aexp 002E                   ___fldiv@bexp 002D                              _f 0047  
                 ___fldiv@sign 0026          _write_external_eeprom 2A0A                 clcd_print@addr 0009  
               clcd_print@data 0007                             l60 2AB8                             _EF 00BE  
                           _EI 0057                             l56 2A7E                             l57 2A82  
                           l66 2876                             l69 2BCE                             _GO 7E11  
                 ___awdiv@sign 0006                             _ch 00BD                             _pk 00AF  
          ___wmul@multiplicand 0003             _init_matrix_keypad 2C12        ??_store_event_in_eeprom 0010  
                          l201 21AA                            l203 21BE                            l204 21E6  
                          l205 21D2                            l216 271C                            l146 2B78  
                          l403 0958                            l253 2B98                            l422 14B4  
                          l351 0B4E                            l343 0B4E                            l191 2124  
                          l183 2C22                            l256 299A                            l194 2152  
                          l186 20FC                            l259 29C6                            l195 218E  
                          l187 21E8                            l507 04E4                            l460 24FC  
                          l196 2166                            l188 2138                            l436 1744  
                          l189 2110                            l701 2BE4                            l198 217A  
                          l454 1C3E                            l390 08AA                            l543 1782  
                          l536 10CC                            l384 062A                            l377 0D30  
                          l571 1A22                            l811 2BFA                            l491 0202  
                          l557 189C                            l814 2C36                            l830 2C76  
                          l479 0048                            l816 2C44                            l824 2C6E  
                          l496 02CA                            l817 2C46                            l833 2C52  
                          l761 2980                            l842 2C5E                            l578 2A08  
                          l594 1DFC                            l827 2C66                            l836 2C7E  
                          l764 2BB6                            l773 2A48                            l758 2590  
                          l870 2BFE                            l839 2C84                            l767 2AE2  
                          _CKE 7E3E                            l776 2B0C                            l873 2C10  
                          l891 2B32                            l867 2C34                            l879 2938  
                          _GIE 7F97                            _RC0 7C10                            _RC1 7C11  
                          _RC2 7C12                  ?_display_menu 0001                            _RD7 7C1F  
                          _PEN 7E2A                            _SEN 7E28                            _PSA 7EAB  
                          _SMP 7E3F                            _add 00A5                            _arr 0088  
                          _key 0059                            _min 0055                            _sec 005C  
                          _isr 0008                 clcd_putch@addr 0008                 clcd_putch@data 0009  
                 ___awmod@sign 0006                            prod 0FF3                            wreg 0FE8  
          ?_init_matrix_keypad 0001     store_event_in_eeprom@i_430 0018     store_event_in_eeprom@i_431 001A  
   store_event_in_eeprom@i_428 0014     store_event_in_eeprom@i_429 0016                   ___fltol@exp1 0038  
                         l1122 23B2                           l1135 2462                           l4000 1F80  
                         l4002 1F90                           l4010 2B58                           l1188 22EE  
                         l4004 1F9E                           l4100 0C16                           l4020 2B70  
                         l4012 2B60                           l3310 2A22                           l3302 2A0C  
                         l1382 2802                           l4006 1FA0                           l4102 0C28  
                         l4030 09C6                           l4022 2B72                           l4014 2B64  
                         l3320 2842                           l3240 2C78                           l3312 2A26  
                         l3304 2A10                           l1392 28D2                           l1560 1F48  
                         l3400 2ABC                           l4120 0C98                           l4112 0C7C  
                         l4104 0C3E                           l4040 0A20                           l4032 09D8  
                         l4024 2B74                           l4016 2B68                           l4200 06EE  
                         l1473 1466                           l1553 1EEC                           l3322 2846  
                         l3242 2C7A                           l3250 2C4A                           l3314 2A2E  
                         l3306 2A16                           l1546 1E54                           l3410 2ADC  
                         l3402 2AC0                           l4130 0D26                           l4122 0CC0  
                         l4106 0C50                           l4050 0A76                           l4042 0A34  
                         l4034 09EE                           l4026 095A                           l4018 2B6C  
                         l4202 06F8                           l4210 0718                           l1475 12C6  
                         l3316 280C                           l3244 2C80                           l3260 2C72  
                         l3252 2C4E                           l3308 2A1C                           l1484 130C  
                         l3404 2AC6                           l4124 0CE0                           l4108 0C64  
                         l4060 0AD6                           l4052 0A8A                           l4044 0A40  
                         l4036 09FA                           l4028 096E                           l3332 210A  
                         l3324 20E2                           l3420 2BAC                           l3500 294E  
                         l4220 0774                           l4212 0730                           l4204 0700  
                         l4140 0538                           l4132 04E6                           l4300 153A  
                         l1389 280A                           l1549 1FB0                           l3270 2A5E  
                         l3318 281A                           l3238 2C36                           l3262 2C54  
                         l3246 2C68                           l3254 2C60                           l3430 29D0  
                         l1486 1384                           l1478 128A                           l3406 2ACC  
                         l4126 0D04                           l4118 0C86                           l4070 0B2C  
                         l4062 0AE2                           l4054 0AA0                           l4046 0A54  
                         l4038 0A0E                           l3326 20F6                           l3422 2BB2  
                         l3414 2B9C                           l3502 2962                           l4230 07B8  
                         l4222 0794                           l4214 0744                           l4206 0708  
                         l4150 0576                           l4142 0542                           l4134 0502  
                         l4310 1588                           l4302 154E                           l1487 1372  
                         l1399 28DA                           l3280 2A6A                           l3272 2A62  
                         l3264 2C5C                           l3248 2C6A                           l3256 2C62  
                         l3440 29F2                           l3432 29D8                           l3424 29C8  
                         l3520 1C8C                           l3408 2AD0                           l4128 0D1C  
                         l4080 0B78                           l4072 0B42                           l4064 0AF6  
                         l4056 0AAC                           l4048 0A6A                           l3360 2174  
                         l3344 2132                           l3600 26DE                           l4400 1AD2  
                         l3416 2BA0                           l3504 296C                           l4240 07E4  
                         l4232 07C0                           l4224 079E                           l4216 0754  
                         l4208 0710                           l4152 0586                           l4144 0552  
                         l4160 05B2                           l4136 051E                           l4320 15DA  
                         l4312 1594                           l4304 1552                           l3282 2A6C  
                         l3274 2A64                           l3442 2B0E                           l3258 2C70  
                         l3290 2AEA                           l3434 29E4                           l3522 1C9E  
                         l3514 1C62                           l3506 1C40                           l4090 0BE4  
                         l4082 0B96                           l4074 0B60                           l4066 0B0C  
                         l4058 0AC0                           l3370 21A4                           l3354 2160  
                         l3338 211E                           l3610 2702                           l4410 1B06  
                         l4402 1ADE                           l3450 2A88                           l3418 2BA6  
                         l4250 083A                           l4242 07EE                           l4234 07C8  
                         l4226 07A6                           l4218 0764                           l4170 05F4  
                         l4162 05C4                           l4154 0596                           l4146 055C  
                         l4138 0530                           l4330 1610                           l4314 15B8  
                         l4306 1562                           l4322 15DE                           l3284 2A6E  
                         l3276 2A66                           l3268 2A4C                           l3444 2B2A  
                         l3292 2AF0                           l3436 29EA                           l3540 1CF4  
                         l3532 1CC4                           l3516 1C6E                           l3508 1C5A  
                         l3524 1CAA                           l3700 118A                           l3620 2984  
                         l4092 0BF8                           l4084 0BA8                           l4076 0B64  
                         l4068 0B18                           l3348 214C                           l3612 2712  
                         l4420 1B3C                           l4412 1B12                           l4404 1AEA  
                         l3460 2AAE                           l3452 2A8E                           l4260 088C  
                         l4252 084A                           l4244 07FE                           l4228 07B0  
                         l4236 07D4                           l4180 0660                           l4172 0624  
                         l4164 05D4                           l4156 05A6                           l4148 0566  
                         l4500 00FA                           l4340 164C                           l4332 161C  
                         l4324 15F0                           l4316 15BE                           l4308 1574  
                         l3286 2A70                           l3278 2A68                           l3462 2BBA  
                         l3294 2AF6                           l3438 29EE                           l3550 1D36  
                         l3534 1CD6                           l3526 1CBC                           l3518 1C76  
                         l3710 11CC                           l3702 119A                           l3630 24FE  
                         l3622 2998                           l4094 0C04                           l4086 0BBE  
                         l4078 0B68                           l3382 21CC                           l3366 2188  
                         l3606 26E8                           l4430 1B90                           l4422 1B48  
                         l4414 1B1E                           l4406 1AF6                           l3470 2B7A  
                         l3454 2A90                           l4270 08C8                           l4262 0896  
                         l4254 085A                           l4246 080E                           l4238 07DA  
                         l4182 066A                           l4174 062E                           l4166 05DE  
                         l4158 05AA                           l4510 0158                           l4502 010C  
                         l4350 167E                           l4342 1650                           l4334 1628  
                         l4326 15FA                           l4318 15CA                           l3296 2AFA  
                         l3288 2AE6                           l3552 1D3A                           l3536 1CDA  
                         l3704 11B0                           l3640 2556                           l3632 251C  
                         l3624 29A8                           l4096 0C08                           l4088 0BD0  
                         l3392 21E6                           l3376 21B8                           l3608 26F8  
                         l3616 271A                           l4440 1BD2                           l4432 1B9C  
                         l4424 1B52                           l4416 1B22                           l4408 1B02  
                         l3472 2B8E                           l3456 2A9A                           l3448 2A84  
                         l3464 2C12                           l3480 2BE0                           l4272 08D8  
                         l4264 089E                           l4256 087A                           l4248 082A  
                         l4184 0674                           l4192 06B4                           l4168 05E8  
                         l4176 063A                           l4600 04A4                           l4512 015A  
                         l4504 0110                           l4520 01A4                           l4360 16EC  
                         l4352 168A                           l4344 165C                           l4336 1634  
                         l4328 1604                           l4280 1468                           l3298 2B06  
                         l3570 1D88                           l3554 1D50                           l3546 1CFC  
                         l3538 1CDE                           l3730 124E                           l3722 1204  
                         l3706 11C0                           l3714 11E0                           l3642 2560  
                         l3634 252A                           l3626 29BE                           l4098 0C0E  
                         l3650 2C24                           l4450 1C24                           l4442 1BE2  
                         l4434 1BA8                           l4426 1B58                           l4418 1B34  
                         l3474 2B96                           l3458 2AA4                           l3490 2BF4  
                         l3466 2C1A                           l3482 2BE2                           l4274 08F8  
                         l4258 0884                           l4194 06CA                           l4186 0680  
                         l4178 064C                           l4266 08AE                           l3810 230E  
                         l3802 22F0                           l4610 04BE                           l4602 04AA  
                         l4530 01FA                           l4522 01B6                           l4514 016C  
                         l4506 012A                           l4370 1730                           l4362 1708  
                         l4354 1698                           l4346 1668                           l4338 1640  
                         l4290 14B0                           l4282 1478                           l3580 1DCC  
                         l3572 1D9E                           l3564 1D6E                           l3556 1D5A  
                         l3548 1D32                           l4700 0FC8                           l4620 0D4E  
                         l4460 2474                           l3740 1294                           l3732 1256  
                         l3724 121E                           l3716 11F0                           l3708 11C8  
                         l3644 2568                           l3636 2540                           l3388 21E0  
                         l3652 2C2E                           l3396 2BFE                           l3660 2904  
                         l4452 1C2A                           l4428 1B74                           l4436 1BAC  
                         l4444 1C06                           l4380 1A30                           l3492 2BF6  
                         l3484 2BE6                           l3468 2C1C                           l3476 2BD0  
                         l4276 0918                           l4268 08B8                           l4196 06DE  
                         l3820 2342                           l3812 231C                           l3804 22F4  
                         l4612 04C8                           l4604 04AE                           l4540 0246  
                         l4524 01CC                           l4516 0170                           l4508 0144  
                         l4532 0216                           l4372 1734                           l4364 1712  
                         l4356 16B8                           l4348 166C                           l4292 14D0  
                         l4284 1480                           l3582 1DD0                           l3566 1D80  
                         l3558 1D62                           l4710 0FE2                           l4702 0FCC  
                         l4630 0D8E                           l4622 0D62                           l4470 24F2  
                         l4462 2484                           l3750 12EC                           l3742 12B2  
                         l3734 1266                           l3726 122E                           l3718 11F0  
                         l3670 10EA                           l3646 257E                           l3638 2552  
                         l3654 2C32                           l3398 2C0C                           l3662 2908  
                         l4454 1C2E                           l4446 1C12                           l4438 1BC2  
                         l4390 1A9A                           l4382 1A40                           l3494 2BF8  
                         l3486 2BEA                           l3478 2BD8                           l4278 092A  
                         l4198 06E6                           l3830 237C                           l3822 234A  
                         l3814 2324                           l3806 2302                           l4614 04D0  
                         l4606 04B2                           l4550 02A8                           l4542 0258  
                         l4534 022A                           l4526 01D4                           l4518 018A  
                         l4374 173C                           l4366 171A                           l4358 16DC  
                         l4294 14E0                           l4286 1492                           l3584 1DD4  
                         l3568 1D84                           l4720 100A                           l4712 0FEC  
                         l4704 0FD2                           l4640 0DCA                           l4632 0D98  
                         l4624 0D6A                           l4464 24A4                           l3760 132A  
                         l3752 12F2                           l3744 12B4                           l3736 127A  
                         l3728 123E                           l3672 10FA                           l3680 1124  
                         l3664 10CE                           l3920 22CE                           l3904 227A  
                         l3648 2582                           l3592 26A6                           l4800 1906  
                         l3656 28DC                           l4456 1C36                           l4448 1C1A  
                         l4392 1AA6                           l4384 1A50                           l4376 1A24  
                         l3496 293A                           l3488 2BF2                           l3840 23A2  
                         l3832 2384                           l3824 2352                           l3816 2328  
                         l3808 230A                           l4616 04D4                           l4608 04BA  
                         l4560 0312                           l4552 02BC                           l4544 026C  
                         l4536 0232                           l4528 01E6                           l4480 0064  
                         l4472 0014                           l4368 172A                           l4296 14F2  
                         l4288 14A4                           l3586 1DEA                           l3578 1DA6  
                         l4722 1014                           l4714 0FF4                           l4706 0FD6  
                         l4730 103C                           l4642 0DDE                           l4650 0E3E  
                         l4626 0D74                           l4634 0D9C                           l4618 0D32  
                         l4466 24C4                           l4458 2464                           l3770 1394  
                         l3762 132E                           l3754 12FC                           l3746 12C4  
                         l3738 1288                           l3690 1150                           l3682 1134  
                         l3674 110A                           l3666 10DA                           l3922 22DE  
                         l3914 22A2                           l3906 2284                           l3930 27B2  
                         l3594 26B6                           l4810 198E                           l4802 192E  
                         l3658 28E0                           l4394 1AB0                           l4386 1A70  
                         l4378 1A28                           l3498 2942                           l3842 23AA  
                         l3834 2386                           l3826 2360                           l3818 2330  
                         l3850 23C6                           l4570 0334                           l4562 031A  
                         l4554 02DA                           l4546 0280                           l4538 023E  
                         l4490 00AC                           l4482 0074                           l4474 0026  
                         l4298 1516                           l3588 1DEE                           l4740 10A0  
                         l4732 1050                           l4724 101E                           l4716 0FF8  
                         l4708 0FDA                           l4652 0E50                           l4644 0E0E  
                         l4636 0DAE                           l4628 0D84                           l4468 24EE  
                         l3780 13F6                           l3772 13A0                           l3764 133C  
                         l3756 130A                           l3748 12D6                           l3692 1160  
                         l3684 113A                           l3676 111A                           l3668 10E8  
                         l3916 22AE                           l3908 228E                           l3940 27EC  
                         l3932 27BA                           l3596 26BC                           l4820 19BC  
                         l4812 1996                           l4804 1956                           l4396 1ABA  
                         l4388 1A88                           l3836 238C                           l3828 2366  
                         l3860 23FA                           l3852 23CE                           l4580 03E8  
                         l4564 031E                           l4572 0344                           l4556 02F6  
                         l4548 0294                           l4492 00B0                           l4484 0086  
                         l4476 0038                           l4742 10AA                           l4734 1060  
                         l4726 1028                           l4718 1000                           l4670 0EE0  
                         l4654 0E64                           l4646 0E16                           l4638 0DBE  
                         l3790 1454                           l3782 140C                           l3774 13AE  
                         l3766 136A                           l3758 131C                           l3694 1170  
                         l3686 1140                           l3678 111C                           l3918 22BE  
                         l3942 27F4                           l3934 27C2                           l3926 2798  
                         l3950 288A                           l3598 26CC                           l4830 1A02  
                         l4814 19A6                           l4822 19C4                           l4806 1972  
                         l4750 1746                           l4398 1AC6                           l3838 2392  
                         l3870 2436                           l3862 2402                           l3854 23D2  
                         l3846 23B4                           l4590 045C                           l4582 0422  
                         l4574 0356                           l4566 0328                           l4558 0308  
                         l4494 00CA                           l4486 0098                           l4478 0044  
                         l4744 10B2                           l4736 1070                           l4728 1030  
                         l4680 0F16                           l4672 0EEA                           l4656 0E70  
                         l4648 0E36                           l3792 145A                           l3784 1426  
                         l3776 13D8                           l3696 1180                           l3688 114E  
                         l3944 27F6                           l3936 27D0                           l3928 27A0  
                         l3960 28C6                           l3952 2892                           l4832 1A0E  
                         l4824 19D6                           l4816 19AC                           l4808 1984  
                         l4760 179E                           l4752 174E                           l3872 243C  
                         l3864 240A                           l3856 23E0                           l3848 23B8  
                         l4592 047C                           l4584 042C                           l4576 0374  
                         l4568 0330                           l4488 009A                           l4496 00E4  
                         l4840 1FB2                           l4746 10BC                           l4738 1080  
                         l4690 0F6E                           l4682 0F20                           l4674 0EFA  
                         l4658 0E84                           l4666 0EB8                           l3794 145C  
                         l3786 1442                           l3778 13DC                           l3698 1182  
                         l3890 223E                           l3882 21EA                           l3946 27FC  
                         l3938 27D6                           l3962 28CC                           l3954 289A  
                         l3970 1E64                           l4826 19E0                           l4818 19B4  
                         l4770 17F0                           l4762 17AE                           l4754 1760  
                         l3866 2418                           l3874 2442                           l3858 23E8  
                         l4594 048E                           l4586 043C                           l4578 03AE  
                         l4498 00F8                           l4850 1FEC                           l4842 1FBC  
                         l4748 10C4                           l4692 0F7E                           l4676 0F04  
                         l4668 0ECC                           l4684 0F2C                           l3788 1446  
                         l3892 2240                           l3884 2200                           l3956 28A8  
                         l3948 2878                           l3980 1EA2                           l3972 1E7A  
                         l3964 1E00                           l4828 19F2                           l4780 1838  
                         l4764 17C4                           l4772 17F8                           l4756 1772  
                         l3876 2452                           l3868 242E                           l4596 0498  
                         l4588 044C                           l4860 202C                           l4852 1FF8  
                         l4844 1FC0                           l4694 0F8E                           l4686 0F40  
                         l4678 0F0E                           l3894 2250                           l3958 28BE  
                         l3990 1F2A                           l3982 1ED4                           l3966 1E10  
                         l4790 1886                           l4774 180A                           l4782 1844  
                         l4766 17D6                           l4758 177E                           l3878 245A  
                         l4598 04A0                           l4870 2078                           l4862 2040  
                         l4854 200A                           l4846 1FC8                           l4696 0F9E  
                         l4688 0F5A                           l3896 2254                           l3888 2214  
                         l3992 1F38                           l3984 1ED6                           l3976 1E8E  
                         l3968 1E1E                           l4784 1856                           l4776 181C  
                         l4768 17E8                           l4880 20BA                           l4872 208C  
                         l4864 2054                           l4856 2012                           l4848 1FDA  
                         _ADFM 7E07                           l4698 0FBE                           l3898 2262  
                         l3994 1F56                           l3986 1EE2                           l3978 1E96  
                         l4786 1868                           l4778 182E                           l4794 18B0  
                         l4882 20CE                           l4874 2094                           l4866 205C  
                         l4858 2024                           l3996 1F58                           l3988 1F1E  
                         l4796 18C2                           l4788 1874                           l4884 20D6  
                         l4876 20A8                           l4868 2070                           ?_isr 0001  
                         l3998 1F5C                           l4798 18E6                           l4878 20B0  
                         _ADON 7E10                           STR_1 2EF3                           STR_2 2EE2  
                         STR_3 2F8C                           STR_4 2FB3                           STR_5 2ED1  
                         STR_6 2FBF                           STR_7 2FF7                           STR_8 2EC0  
                         STR_9 2F54                           _BRGH 7D62                           _CREN 7D5C  
                         _T0CS 7EAD                           u3000 2452                           u3001 244E  
                         u3010 2200                           u3011 21FC                           u2300 2A7E  
                         u3020 2234                           u3100 27EC                           u2301 2A7A  
                         u3101 27E8                           u2310 2A48                           u3030 2262  
                         u3110 288A                           u2311 2A44                           u3031 225E  
                         u3111 2886                           u2320 283E                           u3040 2276  
                         u3120 28A8                           u3200 1F48                           u2400 2160  
                         u4000 02F6                           u3041 2272                           u3025 222A  
                         u3121 28A4                           u3201 1F44                           u2401 215C  
                         u4001 02F2                           u2330 2866                           u3050 229E  
                         u3130 28BE                           u3210 1F56                           u2410 2174  
                         u4010 0308                           u3051 229A                           u3131 28BA  
                         u3211 1F52                           u2411 2170                           u4011 0304  
                         u2340 2876                           u2500 1C8C                           u4100 0E84  
                         u3060 22BE                           u3220 1F90                           u3140 1E10  
                         u3300 0A6A                           u2420 2188                           u4020 0356  
                         u2341 2872                           u2501 1C88                           u4101 0E80  
                         u3061 22BA                           u3221 1F8C                           u3141 1E0C  
                         u3301 0A66                           u2421 2184                           u4021 0352  
                         u2270 2C44                           u2510 1CBC                           u4110 0EB4  
                         u3070 22CE                           u3230 1F9E                           u3150 1E1E  
                         u3310 0A8A                           u2430 21A4                           u2350 20F6  
                         u4030 047C                           u2327 2834                           u2271 2C40  
                         u2511 1CB8                           u4111 0EB0                           u3071 22CA  
                         u3231 1F9A                           u3151 1E1A                           u3311 0A86  
                         u2431 21A0                           u2351 20F2                           u4031 0478  
                         u2280 2A5C                           u2520 1CF4                           u4120 0ECC  
                         u4040 0D4E                           u3080 27B2                           u3160 1E7A  
                         u3400 0B78                           u3320 0AA0                           u3240 09D8  
                         u2440 21B8                           u2360 210A                           u2600 2712  
                         u4200 179E                           u2281 2A56                           u2337 285C  
                         u2521 1CF0                           u4121 0EC8                           u4041 0D4A  
                         u3081 27AE                           u3161 1E76                           u3401 0B74  
                         u3321 0A9C                           u3241 09D4                           u2441 21B4  
                         u2361 2106                           u2601 270E                           u4201 179A  
                         u2530 1D50                           u4130 0EE0                           u4050 0D62  
                         u3090 27D0                           u3170 1ED0                           u2610 29A8  
                         u3410 0BA8                           u3330 0AC0                           u3250 09EE  
                         u2450 21CC                           u2370 211E                           u4210 17AE  
                         u2531 1D4C                           u4131 0EDC                           u4051 0D5E  
                         u3091 27CC                           u3171 1ECC                           u2611 29A4  
                         u3411 0BA4                           u3331 0ABC                           u3251 09EA  
                         u2451 21C8                           u2371 211A                           u4211 17AA  
                         u2540 1D9E                           u4140 0F40                           u4060 0DAE  
                         u2700 1160                           u3180 1F1A                           u2620 252A  
                         u3500 0C78                           u3420 0BBE                           u3340 0AD6  
                         u3260 0A0E                           u2460 21E0                           u2380 2132  
                         u4300 1886                           u4220 17C4                           u2541 1D9A  
                         u4141 0F3C                           u4061 0DAA                           u2701 115C  
                         u3181 1F16                           u2621 2526                           u3501 0C74  
                         u3421 0BBA                           u3341 0AD2                           u3261 0A0A  
                         u2461 21DC                           u2381 212E                           u4301 1882  
                         u4221 17C0                           u2550 1DEA                           u4150 0F5A  
                         u4070 0DDE                           u2710 1170                           u3190 1F38  
                         u3510 0C98                           u3430 0BD0                           u3350 0AF6  
                         u3270 0A20                           u2390 214C                           u4310 1898  
                         u4230 17D6                           u2470 2C0C                           u2630 2900  
                         u2295 2A5E                           u2551 1DE6                           u4151 0F56  
                         u4071 0DDA                           u2711 116C                           u3191 1F34  
                         u3511 0C94                           u3431 0BCC                           u3351 0AF2  
                         u3271 0A1C                           u2391 2148                           u4311 1894  
                         u4231 17D2                           u2471 2C08                           u2480 2A08  
                         u4160 0FBE                           u4080 0E0E                           u2800 132A  
                         u2720 11B0                           u3440 0BE4                           u3360 0B0C  
                         u3280 0A34                           u2560 26B6                           u4320 18C2  
                         u4240 17E8                           u2640 2928                           u3600 0730  
                         u3520 0502                           u4400 2024                           u2481 2A04  
                         u4161 0FBA                           u4081 0E0A                           u2801 1326  
                         u2721 11AC                           u3441 0BE0                           u3361 0B08  
                         u3281 0A30                           u2561 26B2                           u4321 18BE  
                         u4241 17E4                           u3601 072C                           u3521 04FE  
                         u4401 2020                           u2490 1C5A                           u4170 10A0  
                         u4090 0E50                           u2810 133C                           u2730 11F0  
                         u3450 0BF8                           u3370 0B2C                           u3290 0A54  
                         u2570 26CC                           u4330 1972                           u4250 180A  
                         u2650 2938                           u3610 0794                           u3530 051E  
                         u4410 2040          ?_read_external_eeprom 0001                           u2491 1C56  
                         u4171 109C                           u4091 0E4C                           u2811 1338  
                         u2731 11EC                           u3451 0BF4                           u3371 0B28  
                         u3291 0A50                           u2571 26C8                           u4331 196E  
                         u4251 1806                           u2651 2934                           u3611 0790  
                         u3531 051A                           u4411 203C                           u2820 136A  
                         u2740 1266                           u2660 10E8                           u3460 0C28  
                         u3380 0B42                           u2580 26DE                           u4340 1984  
                         u4260 181C                           u4180 1760                           u3620 082A  
                         u3540 0530                           u2900 231C                           u3700 1516  
                         u4420 2054                           u2821 1366                           u2741 1262  
                         u2661 10E4                           u3461 0C24                           u3381 0B3E  
                         u2581 26DA                           u4341 1980                           u4261 1818  
                         u4181 175C                           u2637 28F6                           u3621 0826  
                         u3541 052C                           u2901 2318                           u3701 1512  
                         u4421 2050                           u2830 1380                           u2750 1288  
                         u2670 10FA                           u3470 0C3E                           u3390 0B60  
                         u2590 26F8                           u4350 19D6                           u4270 182E  
                         u4190 1772                           u3630 087A                           u3550 05C4  
                         u2910 2342                           u3710 153A                           u4430 2070  
                         u2831 137C                           u2751 1284                           u2671 10F6  
                         u3471 0C3A                           u3391 0B5C                           u2591 26F4  
                         u4351 19D2                           u4271 182A                           u4191 176E  
                         u2647 291E                           u3631 0876                           u3551 05C0  
                         u2911 233E                           u3711 1536                           u4431 206C  
                         u3800 24C4                           u2840 1394                           u2760 12B2  
                         u2680 110A                           u3480 0C50                           u4360 19F2  
                         u4280 1856                           u3640 092A                           u3560 0624  
                         u2920 2360                           u3720 1574                           u4440 208C  
                         u3801 24C0                           u2841 1390                           u2761 12AE  
                         u2681 1106                           u3481 0C4C                           u4361 19EE  
                         u4281 1852                           u3641 0926                           u3561 0620  
                         u2921 235C                           u3721 1570                           u4441 2088  
                         u2850 13AE                           u2770 12D6                           u2690 114E  
                         u3490 0C64                           u4290 1868                           u3570 064C  
                         u2930 237C                           u3810 0026                           u3730 1588  
                         u3650 1492                           u4450 20A8                           u4370 1FDA  
                         u2851 13AA                           u2771 12D2                           u2691 114A  
                         u3491 0C60                           u4291 1864                           u3571 0648  
                         u2931 2378                           u3811 0022                           u3731 1584  
                         u3651 148E                           u4451 20A4                           u4371 1FD6  
                         _PEIE 7F96                           u2860 13F6                           u2780 12EC  
                         u3580 06B0                           u2940 23A2                           u3900 0158  
                         u3820 0038                           u3740 15F0                           u3660 14A4  
                         u4460 20CE                           u4380 1FEC                           u2861 13F2  
                         u2781 12E8                           u3581 06AC                           u2941 239E  
                         u3901 0154                           u3821 0034                           u3741 15EC  
                         u3661 14A0                           u4461 20CA                           u4381 1FE8  
                         u2870 1426                           u2790 130A                           u3590 06CA  
                         u2950 23C6                           u3910 016C                           u3830 0064  
                         u3750 1708                           u3670 14D0                           u4390 200A  
                         u2871 1422                           u2791 1306                           u3591 06C6  
                         u2951 23C2                           u3911 0168                           u3831 0060  
                         u3751 1704                           u3671 14CC                           u4391 2006  
                         u2880 1454                           u3760 1A70                           u2960 23E0  
                         u3920 01B6                           u3840 0074                           u3680 14E0  
                         u2881 1450                           u3761 1A6C                           u2961 23DC  
                         u3921 01B2                           u3841 0070                           u3681 14DC  
                         u3770 1A9A                           u2890 2302                           u2970 23FA  
                         u3930 01CC                           u3850 0086                           u3690 14F2  
                         u3771 1A96                           u2891 22FE                           u2971 23F6  
                         u3931 01C8                           u3851 0082                           u3691 14EE  
                         _RCIE 7CED                           u3780 1BC2                           u2980 2418  
                         u3940 01E6                           u3860 0098                           _RCEN 7E2B  
                         _RCIF 7CF5                           u3781 1BBE                           u2981 2414  
                         u3941 01E2                           u3861 0094                           u3790 1C02  
                         u2990 242E                           u3950 01FA                           u3870 00AC  
                         u3791 1BFE                           u2991 242A                           u3951 01F6  
                         u3871 00A8                           u3960 022A                           u3880 00F8  
                         u3961 0226                           u3881 00F4                           u3970 0258  
                         u3890 010C                           u3971 0254                           u3891 0108  
                         u3980 0280                           u3981 027C                           u3990 02A8  
                         u3991 02A4                           _RBPU 7F8F                           _TMR0 0FD6  
                         _SPEN 7D5F                           _RSEN 7E29                           _TXIF 7CF4  
                         _gear 0164                           _flag 00EF                           _main 1FB2  
                         _hour 0054                           _once 00E9                           _pass 0080  
                         _wait 00BB                           _time 00CC                           fsr0h 0FEA  
                         fsr1h 0FE2                           indf0 0FEF                           fsr2h 0FDA  
                         fsr0l 0FE9                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005E                           _puts 28DC  
             password_screen@y 000E                           prodh 0FF4                           prodl 0FF3  
                         start 000E                ___fldiv@new_exp 0027           ??_init_matrix_keypad 0001  
                 ___param_bank 0000                 clcd_write@byte 0002                   over_write@ch 000D  
                _i2c_rep_start 2C70                  ??_i2c_rx_mode 0001                          ??_isr 0001  
                 ?_init_ds1307 0001                  ___fltol@sign1 0037                 ??_display_menu 000A  
                        _ADCS0 7E00                          _ADCS1 7E01                          _ADCS2 7E02  
                        ?_main 0001                   ?_read_ds1307 0001                          _ACKEN 7E2C  
                        _ACKDT 7E2D                          _BCLIF 7D0B                __end_of___fldiv 1468  
                        _ACQT0 7E03                          _ACQT1 7E04                          _ACQT2 7E05  
              __end_of___awdiv 23B4                          STR_10 2F04                          STR_11 2FCA  
                        STR_20 2FA6                          STR_12 2F45                          STR_21 2ECE  
                        STR_13 2F15                          STR_14 2F22                          STR_22 2ECE  
                        STR_30 2F7F                          STR_23 2ECE                          STR_15 2ECE  
                        STR_31 2F63                          STR_16 2F22                          STR_24 2FE8  
                        STR_32 2F99                          STR_33 2FF1                          STR_25 2F71  
                        STR_17 2EAD                          STR_26 2FA6                          STR_34 2FFC  
                        STR_18 2E95                          STR_35 2ECE                          STR_27 2FDF  
                        STR_19 2FD5                          STR_36 2ECE                          STR_28 2F35  
              __end_of___awmod 2464                          STR_37 2FFC                          STR_29 2F25  
              __end_of___fltol 22F0                          _BLINK 00AB                          ?_puts 0002  
                        _FILED 0041                ___awdiv@divisor 0003                          _ARROW 003D  
              __end_of___lwdiv 280C                __end_of___lwmod 28DC                   ?_init_config 0001  
                        i2l648 2794                ___awdiv@counter 0005                          _VCFG0 7E0C  
                        _VCFG1 7E0D                          _RCREG 0FAE                          _SPBRG 0FAF  
                        _PORTB 0F81                          _PORTD 0F83                          _TRISB 0F93  
                        _TRISC 0F94                          _TRISD 0F95                          _SSPIF 7CF3  
                        _TXREG 0FAD                   ?_init_timer0 0001                          _Event 00AD  
    write_external_eeprom@data 0007                          _delay 0039                          _count 00B9  
                        _index 00B7                          _dummy 0060                          _speed 004D  
                        _print 00C0                          _putch 2BFC                _change_password 0D32  
           _chance@common$F137 00E7             _chance@common$F324 00E3             _chance@common$F522 00D7  
           _chance@common$F444 00DF             _chance@common$F477 00DB                          tablat 0FF5  
                        puts@s 0002                          ttemp5 005F                          ttemp6 0062  
                        ttemp7 0066                          status 0FD8                          wtemp8 005F  
             init_ds1307@dummy 000B                     _i2c_no_ack 2C80                __initialization 2592  
               ?_i2c_rep_start 0001         ?_write_external_eeprom 0007                   __end_of_main 20E2  
                 __end_of_puts 293A               __end_of_i2c_idle 2C48               __end_of_i2c_read 2C60  
             __end_of_i2c_stop 2C68                  ?_download_log 0001                         ??_main 0039  
                       ??_puts 0004                  __activetblptr 0002            __end_of_i2c_rx_mode 2C80  
                       _ADCON0 0FC2                         _ADCON1 0FC1               read_switches@key 0058  
       ??_read_external_eeprom 0002                         _ADRESH 0FC4                         _ADRESL 0FC3  
                       _T08BIT 7EAE               ___awdiv@dividend 0001                         ?_putch 0001  
                       _GODONE 7E11                         i2l4890 2758                         i2l4892 2760  
                       i2l4894 277A                         i2l4886 2720                         i2l4896 278C  
                       i2l4888 272E                         i2l4898 2792                   _write_ds1307 2B9A  
                       _TMR0IE 7F95                         _TMR0IF 7F92                         _TMR0ON 7EAF  
                       _SSPADD 0FC8                         _TRISC3 7CA3                         _TRISC4 7CA4  
                       _TRISC6 7CA6                         _TRISC7 7CA7                         _TRISD7 7CAF  
                       _SSPBUF 0FC9               __end_of___xxtofl 1FB2                   _write_eeprom 00ED  
             __end_of_get_time 2592                         ___wmul 2B0E                      ??___fldiv 001E  
                    ??___awdiv 0005                         _chance 00EB                      ??___awmod 0005  
                    ??___fltol 0033                      ??___lwdiv 0005                         _diplay 0100  
                    ??___lwmod 0005               __end_of_init_i2c 2BFC               __end_of_init_adc 2B9A  
             __end_of_read_adc 29C8                         clear_0 25F0                         clear_1 25FC  
                       clear_2 2608                 ??_download_log 000A               ___awdiv@quotient 0007  
                       _second 0053                ___awmod@divisor 0003                         isa$std 0001  
             __end_of_scan_key 21EA                ___awmod@counter 0005                   __pdataCOMRAM 005C  
      __end_of_change_password 10CE               __end_of_set_time 04E6              ??_password_screen 000A  
                 __mediumconst 2E94                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8               __end_of_view_log 1746                   ___xxtofl@arg 0012  
                 ___xxtofl@exp 0011                   ___xxtofl@val 0008                     __accesstop 0060  
      __end_of__initialization 260E           __end_of_display_menu 1A24                  ___rparam_used 0001  
                   ___fltol@f1 002F                ??_i2c_rep_start 0001                    ?_i2c_no_ack 0001  
               __pcstackCOMRAM 0001                   __pidataBANK0 2B34                   __pidataBANK1 261C  
                  _i2c_rx_mode 2C78                  __end_of_putch 2C12              __end_of_i2c_start 2C70  
            __end_of_i2c_write 2C54  __end_of_store_event_in_eeprom 1DFE                        ??_putch 0001  
                   __pbssBANK0 0060                     __pbssBANK1 0188         write_external_eeprom@i 0008  
                    ?_i2c_idle 0001                      ?_i2c_read 0001                      ?_i2c_stop 0001  
                   _clcd_print 280C                     _clcd_putch 2BB8                     _clcd_write 2A4A  
 write_external_eeprom@address 000A              _count@common$F138 00B5              _count@common$F325 00B1  
            _count@common$F523 0099              _count@common$F445 00A3              _count@common$F478 009D  
              read_ds1307@data 0003                        ?___wmul 0001              read_switches@once 00EE  
                      _ACKSTAT 7E2E                      ?___xxtofl 0008               ?_change_password 0001  
                      _NEW_KEY 0056                        _SSPCON1 0FC6                      ?_get_time 0001  
                _read_switches 26A4                     ??_i2c_idle 0001                     ??_i2c_read 0001  
                   ??_i2c_stop 0001                      ?_init_i2c 0001           __end_of_download_log 1C40  
                    ?_init_adc 0001                      ?_read_adc 0001              __end_of_clear_log 24FE  
                      _M_index 003F                      ?_scan_key 0001        ??_write_external_eeprom 0008  
                      __Hparam 0000                        __Lparam 0000                      ?_set_time 0001  
                      ___fldiv 10CE                        ___awdiv 22F0                        ___awmod 23B4  
                    ?_view_log 0001                        ___fltol 21EA                        ___lwdiv 2798  
                      ___lwmod 2878                        _address 0043                        __pcinit 2592  
                      _g_index 004B                        __ramtop 0600                        _blink_f 00A9  
                      __ptext0 1FB2                        __ptext1 1468                        __ptext2 0012  
                      __ptext3 23B4                        __ptext4 22F0                        __ptext5 04E6  
                      __ptext6 2B58                        __ptext7 2BD0                        __ptext8 2C12  
                      __ptext9 2BE6              __end_of_init_clcd 2ABA                     ??___xxtofl 000C  
            __end_of_init_uart 2C36               ___awmod@dividend 0001                 ?_read_switches 0001  
                   ??_get_time 000A                 __pintcode_body 271E           end_of_initialization 260E  
                    _MENU_FLAG 004F                     clear_log@y 001C                    set_time@key 0022  
                   ??_init_i2c 0001                     ??_init_adc 0001                  __Lmediumconst 2E94  
                   ??_read_adc 0003                        int_func 271E                     ??_scan_key 0001  
                  ?_clcd_print 0007                    ?_clcd_putch 0008                    ?_clcd_write 0001  
                   ??_set_time 001C                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
              _password_screen 04E6                     ??_view_log 000A                      _PORTBbits 0F81  
              read_adc@channel 0007                   _display_menu 1746                     _over_write 29C8  
                i2c_write@data 0001                  ___xxtofl@sign 0010                read_adc@reg_val 0005  
                  ___fldiv@grs 0029                    ___fldiv@rem 0022       read_external_eeprom@data 0003  
                 ??_i2c_no_ack 0001                    over_write@i 000B                    over_write@j 000E  
                 ?_i2c_rx_mode 0001                 __end_of___wmul 2B34                  __pidataCOMRAM 2C86  
          start_initialization 2592                _arr@common$F142 0078                _arr@common$F329 0070  
              _arr@common$F527 0190                _arr@common$F449 01B0                _arr@common$F482 01A0  
              ??_read_switches 0001                      _i2c_start 2C68                    __end_of_isr 2798  
                    _i2c_write 2C48             __end_of_i2c_no_ack 2C86        __end_of_password_screen 095A  
             change_password@y 0020          __end_of_i2c_rep_start 2C78                       ??___wmul 0005  
         change_password@y_412 0024                  ??_init_ds1307 000B                    __pdataBANK0 00D5  
                  __pdataBANK1 0100                  ??_read_ds1307 0002                   _download_log 1A24  
  read_switches@detection_type 0001                  ??_init_config 001C                    ?_over_write 000B  
                    ___fldiv@a 001A                      ___fldiv@b 0016                    _change_Time 00F0  
                ??_init_timer0 0001                    __pbssCOMRAM 0039                     ?_i2c_start 0001  
                   ?_i2c_write 0001          _store_event_in_eeprom 1C40               ___lwdiv@dividend 0001  
__end_of_write_external_eeprom 2A4A                      _clear_log 2464                      __pintcode 0008  
                __pmediumconst 2E94                       ?___fldiv 0016                       ?___awdiv 0001  
                     ?___awmod 0001                       ?___fltol 002F              _display_dashboard 095A  
           read_ds1307@address 0002                       ?___lwdiv 0001                      _clock_reg 0094  
                    _clock_set 0090                       ?___lwmod 0001             ?_display_dashboard 0001  
          __end_of_init_ds1307 2982            ??_display_dashboard 0039            __end_of_read_ds1307 2AE4  
             ___lwdiv@quotient 0005                      _init_clcd 2A84            __end_of_init_config 2B7A  
                    _init_uart 2C24                  ?_write_ds1307 0009            __end_of_init_timer0 2BE6  
               ___wmul@product 0005    read_external_eeprom@address 0002               ?_password_screen 0001  
                 ??_clcd_print 000A                   ??_clcd_putch 0009     __end_of_init_matrix_keypad 2C24  
                 ??_clcd_write 0002                       i2u450_40 2776                       i2u451_40 278C  
                     i2u451_41 2788                       i2u447_40 272E                       i2u447_41 272A  
                   ?_clear_log 0001                       i2u448_40 2758      __end_of_display_dashboard 0D32  
                     i2u448_41 2754                       i2u449_40 2774                       i2u449_41 276E  
            _index@common$F139 00B3              _index@common$F326 0049              _index@common$F524 0097  
            _index@common$F446 00A1              _index@common$F479 009B                  download_log@i 0013  
                download_log@y 000B          clcd_write@control_bit 0001              ___wmul@multiplier 0001  
             _once@common$F140 00E5               _once@common$F327 00E1               _once@common$F525 00D5  
             _once@common$F447 00DD               _once@common$F480 00D9         ?_store_event_in_eeprom 0001  
                    _store_add 0045                    ??_i2c_start 0001             __end_of_clcd_print 2878  
                  ??_i2c_write 0001             __end_of_clcd_putch 2BD0             __end_of_clcd_write 2A84  
                   ?_init_clcd 0001                     ?_init_uart 0001                      copy_data0 25A6  
                    copy_data1 25C6                 ??_write_ds1307 000A                       _i2c_idle 2C36  
                     _i2c_read 2C54                       _i2c_stop 2C60                       __Hrparam 0000  
                     __Lrparam 0000   __end_of_read_external_eeprom 2B0E                    _init_ds1307 293A  
                  _read_ds1307 2ABA                    _init_config 2B58                       ___xxtofl 1DFE  
       store_event_in_eeprom@i 0012            write_ds1307@address 000A                    _init_timer0 2BD0  
              ___lwdiv@divisor 0003                ___lwdiv@counter 0007                       __ptext10 293A  
                     __ptext11 2B9A                       __ptext20 20E2                       __ptext12 2A84  
                     __ptext21 095A                       __ptext13 2B7A                       __ptext30 2464  
                     __ptext22 2982                       __ptext14 1A24                       __ptext31 0D32  
                     __ptext23 24FE                       __ptext15 28DC                       __ptext40 2C54  
                     __ptext32 1C40                       __ptext24 2ABA                       __ptext16 2BFC  
                     __ptext41 2C78                       __ptext33 29C8                       __ptext25 1DFE  
                     __ptext17 2C24                       __ptext42 2C36                       __ptext34 2A0A  
                     __ptext26 2878                       __ptext18 1746                       __ptext43 2C80  
                     __ptext35 2AE4                       __ptext27 2798                       __ptext19 26A4  
                     __ptext44 2B0E                       __ptext36 2C48                       __ptext28 21EA  
                     __ptext45 2BB8                       __ptext37 2C60                       __ptext29 10CE  
                     __ptext46 280C                       __ptext38 2C68                       __ptext47 2A4A  
                     __ptext39 2C70                    _SCREEN_FLAG 0051                       _get_time 24FE  
                     _init_i2c 2BE6                       _init_adc 2B7A                       _read_adc 2982  
                     _scan_key 20E2                      set_time@y 001E                       _password 00A7  
                  ??_clear_log 001C              ??_change_password 001C                       _set_time 0012  
                  _no_of_event 005A                       isa$xinst 0000                       int$flags 005E  
                     _view_log 1468           password_screen@y_353 0012                   ??_over_write 000D  
                    putch@byte 0001               _pass@common$F143 01B8               _pass@common$F330 0068  
             _pass@common$F450 01A8               _pass@common$F528 0188               _pass@common$F483 0198  
                     isr@count 009F                    ??_init_clcd 0003          __end_of_read_switches 271E  
                  ??_init_uart 0001                       intlevel2 0000               ___lwmod@dividend 0001  
           __end_of_over_write 2A0A           __end_of_write_ds1307 2BB8                ___lwmod@divisor 0003  
              ___lwmod@counter 0005               write_ds1307@data 0009           _read_external_eeprom 2AE4  
                  _option_save 00BF              download_log@y_378 000F  
